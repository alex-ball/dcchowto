% \iffalse meta-comment
%<*internal>
\iffalse
%</internal>
%<*readme>
# dcchowto: A LaTeX class for DCC How-to Guides

This class is useful for typesetting DCC How-to Guides. It comes with some
support files to make it possible to generate camera-ready copy from Markdown
source. The Markdown could then be used to generate an HTML version as well.

## Installation

### Automated way

A makefile is provided which you can use with the Make utility:

  * Running `make` generates the derived files README, dcchowto.pdf and dcchowto.cls.
  * Running `make inst` installs the files in the user's TeX tree.
  * Running `make install` installs the files in the local TeX tree.

## Licence

This work consists of the file dcchowto.dtx and a Makefile.

This work may be distributed and/or modified under the conditions of the
[LaTeX Project Public License (LPPL)](http://www.latex-project.org/lppl.txt),
either version 1.3c of this license or (at your option) any later version.

This work is "maintained" (as per LPPL maintenance status) by
[Alex Ball](http://alexball.me.uk/).

Please note that the generated file dcchowto-apa.csl is based on the apa.csl
file written by Simon Kornblith, with contributions from Bruce D'Arcus,
Curtis M. Humphrey, Richard Karnesky and Sebastian Karcher, and in its
standalone form is separately licensed under a
[Creative Commons Attribution-ShareAlike 4.0 International
Licence](http://creativecommons.org/licenses/by-sa/4.0/).

%</readme>
%<*csl>
%<<LITERAL
<?xml version="1.0" encoding="utf-8"?>
<style xmlns="http://purl.org/net/xbiblio/csl" class="note" version="1.0" demote-non-dropping-particle="never">
  <!-- This style was edited with the Visual CSL Editor (http://steveridout.com/csl/visualEditor/) -->
  <info>
    <title>American Psychological Association 6th Edition</title>
    <id>http://www.zotero.org/styles/apa</id>
    <link href="http://www.zotero.org/styles/apa" rel="self"/>
    <link href="http://owl.english.purdue.edu/owl/resource/560/01/" rel="documentation"/>
    <author>
      <name>Simon Kornblith</name>
      <email>simon@simonster.com</email>
    </author>
    <contributor>
      <name>Bruce D'Arcus</name>
    </contributor>
    <contributor>
      <name>Curtis M. Humphrey</name>
    </contributor>
    <contributor>
      <name>Richard Karnesky</name>
      <email>karnesky+zotero@gmail.com</email>
      <uri>http://arc.nucapt.northwestern.edu/Richard_Karnesky</uri>
    </contributor>
    <contributor>
      <name>Sebastian Karcher</name>
    </contributor>
    <contributor>
      <name>Alex Ball</name>
      <email>a.ball@ukoln.ac.uk</email>
    </contributor>
    <category citation-format="author-date"/>
    <category field="psychology"/>
    <category field="generic-base"/>
    <updated>2013-02-26T04:33:40+00:00</updated>
    <rights license="http://creativecommons.org/licenses/by-sa/4.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International Licence</rights>
  </info>
  <locale xml:lang="en">
    <terms>
      <term name="editortranslator" form="short">
        <single>ed. &amp; trans.</single>
        <multiple>eds. &amp; trans.</multiple>
      </term>
      <term name="translator" form="short">
        <single>trans.</single>
        <multiple>trans.</multiple>
      </term>
    </terms>
  </locale>
  <macro name="container-contributors">
    <choose>
      <if type="chapter paper-conference" match="any">
        <names variable="editor translator" delimiter=", " suffix=", ">
          <name and="symbol" initialize-with=". " delimiter=", "/>
          <label form="short" prefix=" (" text-case="title" suffix=")"/>
        </names>
      </if>
    </choose>
  </macro>
  <macro name="secondary-contributors">
    <choose>
      <if type="chapter paper-conference" match="none">
        <names variable="translator editor" delimiter=", " prefix=" (" suffix=")">
          <name and="symbol" initialize-with=". " delimiter=", "/>
          <label form="short" prefix=", " text-case="title" suffix=""/>
        </names>
      </if>
    </choose>
  </macro>
  <macro name="author">
    <names variable="author">
      <name name-as-sort-order="all" and="symbol" sort-separator=", " initialize-with=". " delimiter=", " delimiter-precedes-last="always"/>
      <label form="short" prefix=" (" suffix=")" text-case="capitalize-first"/>
      <substitute>
        <names variable="editor"/>
        <names variable="translator"/>
        <choose>
          <if type="report">
            <text variable="publisher"/>
            <text macro="title"/>
          </if>
          <else>
            <text macro="title"/>
          </else>
        </choose>
      </substitute>
    </names>
  </macro>
  <macro name="author-short">
    <names variable="author">
      <name form="short" and="symbol" delimiter=", " initialize-with=". "/>
      <substitute>
        <names variable="editor"/>
        <names variable="translator"/>
        <choose>
          <if type="report">
            <text variable="publisher"/>
            <text variable="title" form="short" font-style="italic"/>
          </if>
          <else-if type="bill book graphic legal_case legislation motion_picture song" match="any">
            <text variable="title" form="short" font-style="italic"/>
          </else-if>
          <else>
            <text variable="title" form="short" quotes="true"/>
          </else>
        </choose>
      </substitute>
    </names>
  </macro>
  <macro name="access">
    <choose>
      <if type="thesis">
        <choose>
          <if variable="archive" match="any">
            <group>
              <text term="retrieved" text-case="capitalize-first" suffix=" "/>
              <text term="from" suffix=" "/>
              <text variable="archive" suffix="."/>
              <text variable="archive_location" prefix=" (" suffix=")"/>
            </group>
          </if>
          <else>
            <group>
              <text term="retrieved" text-case="capitalize-first" suffix=" "/>
              <text term="from" suffix=" "/>
              <text variable="URL"/>
            </group>
          </else>
        </choose>
      </if>
      <else>
        <choose>
          <if variable="DOI">
            <text variable="DOI" prefix="doi:"/>
          </if>
          <else>
            <choose>
              <if type="webpage">
                <group delimiter=" ">
                  <text term="retrieved" text-case="capitalize-first" suffix=" "/>
                  <group>
                    <date variable="accessed" form="text" suffix=", "/>
                  </group>
                  <text term="from"/>
                  <text variable="URL"/>
                </group>
              </if>
              <else>
                <group>
                  <text term="retrieved" text-case="capitalize-first" suffix=" "/>
                  <text term="from" suffix=" "/>
                  <text variable="URL"/>
                </group>
              </else>
            </choose>
          </else>
        </choose>
      </else>
    </choose>
  </macro>
  <macro name="title">
    <choose>
      <if type="report thesis" match="any">
        <text variable="title" font-style="italic"/>
        <group prefix=" (" suffix=")" delimiter=" ">
          <text variable="genre"/>
          <text variable="number" prefix="No. "/>
        </group>
      </if>
      <else-if type="book graphic  motion_picture report song manuscript speech" match="any">
        <text variable="title" font-style="italic"/>
      </else-if>
      <else>
        <text variable="title"/>
      </else>
    </choose>
  </macro>
  <macro name="publisher">
    <choose>
      <if type="report" match="any">
        <group delimiter=": ">
          <text variable="publisher-place"/>
          <text variable="publisher"/>
        </group>
      </if>
      <else-if type="thesis" match="any">
        <group delimiter=", ">
          <text variable="publisher"/>
          <text variable="publisher-place"/>
        </group>
      </else-if>
      <else>
        <group delimiter=", ">
          <choose>
            <if variable="event" match="none">
              <text variable="genre"/>
            </if>
          </choose>
          <choose>
            <if type="article-journal article-magazine" match="none">
              <group delimiter=": ">
                <text variable="publisher-place"/>
                <text variable="publisher"/>
              </group>
            </if>
          </choose>
        </group>
      </else>
    </choose>
  </macro>
  <macro name="event">
    <choose>
      <if variable="event">
        <choose>
          <if variable="genre" match="none">
            <text term="presented at" text-case="capitalize-first" suffix=" "/>
            <text variable="event"/>
          </if>
          <else>
            <group delimiter=" ">
              <text variable="genre" text-case="capitalize-first"/>
              <text term="presented at"/>
              <text variable="event"/>
            </group>
          </else>
        </choose>
      </if>
    </choose>
  </macro>
  <macro name="issued">
    <choose>
      <if type="bill legal_case legislation" match="none">
        <choose>
          <if variable="issued">
            <group prefix=" (" suffix=")">
              <date variable="issued">
                <date-part name="year"/>
              </date>
              <text variable="year-suffix"/>
              <choose>
                <if type="article-journal bill book chapter graphic legal_case legislation motion_picture paper-conference report song" match="none">
                  <date variable="issued">
                    <date-part prefix=", " name="month"/>
                    <date-part prefix=" " name="day"/>
                  </date>
                </if>
              </choose>
            </group>
          </if>
          <else>
            <group prefix=" (" suffix=")">
              <text term="no date" form="short"/>
              <text variable="year-suffix" prefix="-"/>
            </group>
          </else>
        </choose>
      </if>
    </choose>
  </macro>
  <macro name="issued-sort">
    <choose>
      <if type="article-journal bill book chapter graphic legal_case legislation motion_picture paper-conference report song" match="none">
        <date variable="issued">
          <date-part name="year"/>
          <date-part name="month"/>
          <date-part name="day"/>
        </date>
      </if>
      <else>
        <date variable="issued">
          <date-part name="year"/>
        </date>
      </else>
    </choose>
  </macro>
  <macro name="issued-year">
    <choose>
      <if variable="issued">
        <date variable="issued">
          <date-part name="year"/>
        </date>
        <text variable="year-suffix"/>
      </if>
      <else>
        <text term="no date" form="short"/>
        <text variable="year-suffix" prefix="-"/>
      </else>
    </choose>
  </macro>
  <macro name="edition">
    <choose>
      <if is-numeric="edition">
        <group delimiter=" ">
          <number variable="edition" form="ordinal"/>
          <text term="edition" form="short"/>
        </group>
      </if>
      <else>
        <text variable="edition" suffix="."/>
      </else>
    </choose>
  </macro>
  <macro name="locators">
    <choose>
      <if type="article-journal article-magazine" match="any">
        <group prefix=", " delimiter=", ">
          <group>
            <text variable="volume" font-style="italic"/>
            <text variable="issue" prefix="(" suffix=")"/>
          </group>
          <text variable="page"/>
        </group>
      </if>
      <else-if type="article-newspaper">
        <group delimiter=" " prefix=", ">
          <label variable="page" form="short"/>
          <text variable="page"/>
        </group>
      </else-if>
      <else-if type="book graphic motion_picture report song chapter paper-conference" match="any">
        <group prefix=" (" suffix=")" delimiter=", ">
          <text macro="edition"/>
          <group>
            <text term="volume" form="short" plural="true" text-case="capitalize-first" suffix=" "/>
            <number variable="number-of-volumes" form="numeric" prefix="1-"/>
          </group>
          <group>
            <text term="volume" form="short" text-case="capitalize-first" suffix=" "/>
            <number variable="volume" form="numeric"/>
          </group>
          <group>
            <label variable="page" form="short" suffix=" "/>
            <text variable="page"/>
          </group>
        </group>
      </else-if>
      <else-if type="legal_case">
        <group prefix=" (" suffix=")" delimiter=" ">
          <text variable="authority"/>
          <date variable="issued" form="text"/>
        </group>
      </else-if>
      <else-if type="bill legislation" match="any">
        <date variable="issued" prefix=" (" suffix=")">
          <date-part name="year"/>
        </date>
      </else-if>
    </choose>
  </macro>
  <macro name="citation-locator">
    <group>
      <choose>
        <if locator="chapter">
          <label variable="locator" form="long" text-case="capitalize-first"/>
        </if>
        <else>
          <label variable="locator" form="short"/>
        </else>
      </choose>
      <text variable="locator" prefix=" "/>
    </group>
  </macro>
  <macro name="container">
    <group>
      <choose>
        <if type="chapter paper-conference entry-encyclopedia" match="any">
          <text term="in" text-case="capitalize-first" suffix=" "/>
        </if>
      </choose>
      <text macro="container-contributors"/>
      <text macro="secondary-contributors"/>
      <text macro="container-title"/>
    </group>
  </macro>
  <macro name="container-title">
    <choose>
      <if type="bill legal_case legislation" match="none">
        <text variable="container-title" font-style="italic"/>
      </if>
      <else>
        <group delimiter=" " prefix=", ">
          <choose>
            <if variable="container-title">
              <text variable="volume"/>
              <text variable="container-title"/>
              <group delimiter=" ">
                <!--change to label variable="section" as that becomes available -->
                <text term="section" form="symbol"/>
                <text variable="section"/>
              </group>
              <text variable="page"/>
            </if>
            <else>
              <choose>
                <if type="legal_case">
                  <text variable="number" prefix="No. "/>
                </if>
                <else>
                  <text variable="number" prefix="Pub. L. No. "/>
                  <group delimiter=" ">
                    <!--change to label variable="section" as that becomes available -->
                    <text term="section" form="symbol"/>
                    <text variable="section"/>
                  </group>
                </else>
              </choose>
            </else>
          </choose>
        </group>
      </else>
    </choose>
  </macro>
  <citation et-al-min="8" et-al-use-first="6" et-al-use-last="true" entry-spacing="0">
    <sort>
      <key macro="author"/>
      <key macro="issued-sort"/>
    </sort>
    <layout>
      <group suffix=".">
        <group delimiter=". ">
          <text macro="author"/>
          <text macro="issued"/>
          <text macro="title" prefix=" "/>
          <text macro="container"/>
        </group>
        <text macro="locators"/>
        <group delimiter=", " prefix=". ">
          <text macro="event"/>
          <text macro="publisher"/>
        </group>
      </group>
      <text macro="access" prefix=" "/>
    </layout>
  </citation>
</style>
%LITERAL
%</csl>
%<*example>
%<<LITERAL
---
title: How to Write DCC Guidance in Markdown
author:
- 'Alex Ball (DCC)'
- 'Another Author (ETC)'
date: \today
classoption:
- morefloats=4
- onecolumn
- mark=rc
- press
...

> This guide will help you create working-level guidance for inclusion
> in the DCC's series of How-to Guides, using a form of scholarly Markdown
> in conjunction with LaTeX and the Pandoc utility. It provides a working 
> knowledge of the issues and challenges involved, and of how current
> approaches seek to address them. This guide should interest DCC staff,
> their collaborators, and those with an interest in novel publication
> workflows.

Why use Markdown for writing DCC guidance? {#sec:why}
==========================================

Markdown is a set of conventions for formatting text documents so that they can
easily be parsed by automated tools. While it tries to be as unobtrusive as
possible, looking like an 'ordinary' text document for most of the time, certain
typographical devices need a form of markup, but these are kept as minimal as
possible.^[An example is this markup for writing footnotes.] While the core of
Markdown is simple and fairly limited, it has been extended to support almost
all aspects of what might be needed in a scholarly work.

There are several advantages to using a text-based format. It is a relatively
simple format to preserve, barring issues about encoding (UTF-8 is recommended).
It is universally well supported by a range of editing tools and version control
systems, making it ideal for collaboration and long-term maintenance by a chain
of authors. From a psychological point of view, its clear separation away from
issues of formatting mean that authors can concentrate on the quality of the
content instead of being distracted by how it might look on a page.
[@stodden2009err][@rin.nesta2010oac][@lynch2009jgf]

The system being used here allows the plain text to be transformed both to 
clean, simple HTML and an attractive, high-quality typeset PDF via LaTeX
[@mackenzieowen2007sai, ch. 2]. Only minor post-processing is needed to prepare
documents for publication on the DCC website in both forms. As a policy, authors
should try to achieve what they want using these techniques in order of
preference:

 1. Regular markup in the Markdown document.
 
 2. Special (e.g. LaTeX) markup in the Markdown document.
 
 2. Simple transformations in the Makefile.
 
 3. Parallel content targeting HTML and LaTeX, saved in external files included
    by reference in the Markdown document.
    
 4. Editing the resulting HTML and LaTeX code by hand. Ideally the only things
    done at this stage should be shifting the order of content and awkward
    markup fixes.

The remainder of this document contains dummy text and disjointed content. The
purpose is to demonstrate how to achieve certain effects, and also to test the
various components of the toolchain (most particularly the LaTeX class) to
ensure they work as intended.


Requirements for data citations {#sec:requirements}
===============================

The SageCite Project has identified a set of requirements for dataset
citations and any services set up to support them.[@duke2011rdc]

\marginbox\datagrid[10\onelineskip]\endmarginbox
\bgroup\framed

  * The citation itself must be able to identify uniquely the object cited,
    though different citations might use different methods or schemes to do
    so.

  * It must be able to identify subsets of the data as well as the whole
    dataset.

  * It must provide the reader with enough information to access the
    dataset; indeed, when expressed digitally it should provide a mechanism
    for accessing the dataset through the Web infrastructure.

  * It must be usable not only by humans but also by software tools, so that
    additional services may be built using these citations. In particular,
    there need to be services that use the citations in metrics to support
    the academic reward system, and services that can generate complete
    citations.

\endframed\egroup

Elements of a data citation {#sec:elements}
===========================

The elements that would make up a complete citation are a matter of some
debate. The following list is a superset taken from four different
papers on the subject.
[@altman.king2007pss][@lawrence.etal2008dp][@green2010wnp][@starr.gastl2011ims]

Author

  : The creator of the dataset.\footref{fn:altman.king}\footref{fn:lawrence.etal}\footref{fn:green}\footref{fn:starr.gastl}

Publication date

  : Whichever is the later of: the date the dataset was made available,\footref{fn:altman.king} the
    date all quality assurance procedures were completed,\footref{fn:lawrence.etal}\footref{fn:green} and the date the
    embargo period (if applicable) expired.\footref{fn:starr.gastl}

Title

  : As well as the name of the cited resource itself,\footref{fn:altman.king}\footref{fn:starr.gastl} this may also include
    the name of a facility\footref{fn:lawrence.etal} and the titles of the top collection and main
    parent sub-collection (if any) of which the dataset is a part.\footref{fn:green}

Edition

  : The level or stage of processing of the data, indicating how raw or
    refined the dataset is.\footref{fn:lawrence.etal}

Version

  : A number increased when the data changes, as the result of adding more
    data points or re-running a derivation process, for example.\footref{fn:starr.gastl}

Feature name and URI

  : The name of an ISO 19101:2002 [@iso19101gir] ‘feature’ (e.g. GridSeries,
    ProfileSeries) and the URI identifying its standard definition, used to
    pick out a subset of the data.\footref{fn:lawrence.etal}

Resource type

  : Examples: ‘database’,\footref{fn:green} ‘dataset’.\footref{fn:starr.gastl}

Publisher

  : The organisation either hosting the data\footref{fn:starr.gastl} or performing quality
    assurance.\footref{fn:lawrence.etal}

Unique numeric fingerprint (UNF)

  : A cryptographic hash of the data, used to ensure no changes have
    occurred since the citation.\footref{fn:altman.king}

Identifier

  : An identifier for the data, according to a persistent
    scheme.\footref{fn:altman.king}\footref{fn:lawrence.etal}\footref{fn:green}\footref{fn:starr.gastl}

Location

  : A persistent URL from which the dataset is available. Some identifier
    schemes provide these via an identifier resolver
    service.\footref{fn:altman.king}\footref{fn:lawrence.etal}\footref{fn:green}\footref{fn:starr.gastl}

\marginbox

> ‘An intellectual property (IP) licence is effectively a promise not to sue
> for infringement of an intellectual property right (IPR).’
> \quotefrom – \fullcite{irish2005ipr}[@irish2005ipr]

\endmarginbox

The most important of these elements – the ones that should be present
in any citation – are the author, the title and date, and the location.
These give due credit, allow the reader to judge the relevance of the
data, and permit access the data, respectively. In theory, they should
between them uniquely identify the dataset; in practice, a formal
identifier is often needed. The most efficient solution is to give a
location that consists of a resolver service and an identifier (for an
example, see [Figure 3](#fig:doi) below).

Note that the way in which these elements would be styled and combined
together in the finished citation depends on the style in use for
citations of textual publications. [Figure 1](#fig:common) provides example data citations drawn
from commonly used style manuals.[@apa2010pma, p. 211][@ucp2010cms, p. 764][@gibaldi2008msm, pp. 213-214, 238-239][@ritter2002oms, p. 551]

\bgroup\figure[ht]\shaded\small

APA

  : Cool, H. E. M., & Bell, M. (2011). *Excavations at St Peter's Church,
    Barton-upon-Humber* \[Data set\].
    [doi:10.5284/1000389](http://dx.doi.org/10.5284/1000389)

Chicago

  : *(Footnote)* H. E. M. Cool and Mark Bell, Excavations at St Peter's Church,
    Barton-upon-Humber (accessed May 1, 2011),
    [doi:10.5284/1000389](http://dx.doi.org/10.5284/1000389).

    *(Bibliography)* Cool, H. E. M., and Mark Bell. Excavations at St Peter's Church,
    Barton-upon-Humber (accessed May 1, 2011).
    [doi:10.5284/1000389](http://dx.doi.org/10.5284/1000389).

MLA

  : Cool, H. E. M., and Mark Bell. "Excavations at St Peter's Church,
    Barton-upon-Humber." Archaeology Data Service, 2001. Web. 1 May 2011.
    `<`<http://dx.doi.org/10.5284/1000389>`>`.

Oxford

  : Cool, H. E. M. & Bell, M. (2011) *Excavations at St Peter's Church,
    Barton-upon-Humber* \[data-set\]. York: Archaeology Data Service \[distributor\]
    `<`DOI [10.5284/1000389](http://dx.doi.org/10.5284/1000389)`>`.

\endshaded

\caption[Data citations in common styles]{Data citations in common styles}
\label{fig:common}

\endfigure\egroup

Digital Object Identifiers {#sec:dois}
--------------------------

There are several types of persistent identifier that could be used to
identify datasets: examples include Handles, Archival Resource Keys
(ARKs) and Persistent URLs (PURLs), all of which can be resolved to an
Internet location. Arguably the scheme that is gaining most traction is
the Digital Object Identifier (DOI).

The DOI System is an identifier scheme administered by the International
DOI Foundation.^[DOI System Website, URL: <http://www.doi.org/>.]
It is built on the Handle System but has its own
conventions and an independent business model. The identifiers
themselves have the standard Handle structure of prefix, slash, suffix
(see [Figure 2](#fig:doi)). All DOI prefixes begin with ‘`10.`’ to mark them as such; the
prefix may be further subdivided with dots, but otherwise the characters
in a DOI have no special significance.

\bgroup\figure[ht]\shaded\small
\input{fig-doi}

\endshaded
\caption{Anatomy of a DOI}
\label{fig:doi}

\endfigure\egroup

While there are several services available that can resolve a DOI to an
Internet location,^[Some publishers provide resolvers for their own DOIs, while
the Handle resolver <http://hdl.handle.net/> can be used for any DOI.] the
preferred one is <http://dx.doi.org/>. Appending a DOI to this URL creates a
further URL that can be used to access the associated resource.

\bgroup\framed
\noindent{}**Example**

\smallskip
\noindent{}Sage Bionetworks is a non-profit biomedical research organisation
which is creating the Sage Commons,^[Sage Bionetworks Commons Web page, URL:
<http://sagebase.org/commons/>] an infrastructure for
community-based modelling of large multi-contributor datasets.[@derry.etal2011dpm] The
Commons already features a repository of curated datasets;[@furia.sieberts2011sbd] a new
computational platform and repository front-end called Synapse will be
added towards the end of 2011.

In this area of research, methods, tools and workflows are just as
important as data. Taverna workflows, for example, provide a means of
recording and documenting each step of the modelling process so that it
can be shared with the scientific community. Furthermore, the workflows
may be executed by Taverna Workbench, allowing the results from the
pipeline to be reproduced. The SageCite Project worked with Sage
Bionetworks to demonstrate both capturing workflows using Taverna, and
making them citable resources using DataCite DOIs.^[SageCite Project
blog, URL: <http://blogs.ukoln.ac.uk/sagecite/>]

\endframed\egroup

Common terms {#sec:terms}
------------

Licences typically grant permissions on condition that certain terms are
met. While the precise details vary, three conditions commonly found in
licences are attribution, copyleft, and non-commerciality.

  * An *attribution* requirement means that the licensor must be given
    due credit for the work when it is distributed, displayed,
    performed, or used to derive a new work.

  * A *copyleft* requirement means that any new works derived from the
    licensed one must be released under the same license, and only that
    licence.

  * The intent of a *non-commercial* licence is to prevent the licensee
    from exploiting the work commercially. Such licences are often used
    as part of a dual-licensing regime (see ‘[Multiple 
    licensing](#sec:multi)’, below), where the alternative licence 
    allows commercial uses but requires payment to the licensor.

While these all have their uses, they can cause problems in the context
of datasets.

Datasets are particularly prone to *attribution stacking*, where a
derivative work must acknowledge all contributors to each work from
which it is derived, no matter how distantly. If a dataset is at the end
of a long chain of derivations, or if large teams of contributors were
involved, the list of credits might well be considered too unwieldy
[@sciencecommons2007pio]. The problem is magnified if different sets of
contributors have to be credited in a different way, especially if
automated methods are used to assemble the dataset – some of the
benefits of automation are lost if attribution conditions have to be
inspected manually. Some licenses and licensors tackle this problem by
specifying lightweight attribution mechanisms.^[OCLC, for example, 
builds flexibility into its use of the ODC-By licence by allowing ‘in 
circumstances where providing the full attribution statement...is not 
technically feasible, the use of canonical \[dataset\] URIs is 
adequate...’ alongside examples of acceptable practice [@oclcNDdla].]

The problem with copyleft licences is they prevent the licensed data
being combined with data released under a different copyleft licence:
the derived dataset would not be able to satisfy both sets of licence
terms simultaneously. Some copyleft licences, however, demonstrate a
small amount of flexibility in allowing derivative works to be released
under a compatible licence, that is, one that applies approximately the
same conditions.[^copyleft]

[^copyleft]: For example, the GNU Project maintains a list of licences 
for code which permit redistribution under the GNU General Public 
Licence (GPL) and whose terms the GPL can accommodate [@gnu2010vlc].

Creative Commons maintains lists of licences into which its Share
Alike licences may be converted by derived works, but these are
currently empty [@ccNDcl].

Non-commercial licences may have wider implications than intended due to
the ambiguity of what constitutes a commercial use
[@creativecommons2009dnc]. Depending on one’s interpretation, it may or
may not preclude the data being used in support of works for which an
author is given recompense (such as textbooks), and might preclude the
data being used in support of works that are sold (such as journal
articles) even if the author does not benefit financially.

Standard licences {#sec:standard}
=================

While bespoke licences are useful for catering for very specific
circumstances, most research projects would be better served using one
of the standard licences. Below is a selection of the standard licences
available, along with reasons for and against using each one. Please
note that these licences can be terminated only by expiry of the
licensor’s IPR or, for a particular licensee, through breach of terms.

Creative Commons {#sec:cc}
----------------

\bgroup\marginbox\framed
\noindent{}**Creative Commons at a glance**

*Good for*

  * very simple, factual datasets
  * data to be used automatically

*Watch out for*

  * versions: use v.\ 4 or later
  * attribution stacking
  * the NC condition: only use with dual licensing
  * the SA condition as it reduces interoperability
  * the ND condition as it severely restricts reuse

\endframed\endmarginbox\egroup

Creative Commons is a non-profit corporation set up in 2001 for the
purpose of producing simple yet robust licences for creative
works.^[Creative Commons Website, URL: <http://creativecommons.org/>]
These licences give the creators of such works finer-grained control
over how they may be used than simply declaring them public domain or
reserving all rights. As well as the legal text, the licences all have
quick clear summaries and a canonical URL for use in HTML, RDF and other
code. A rights expression language is also provided for use with 
RDF.^[RDF and rights expression languages are discussed under 
‘[Mechanisms for licensing data](#sec:mechanism)’ below.] While 
originally aimed at works such as music, images and video, Creative 
Commons licences have been used widely for most forms of original 
content, including data.

There are six main Creative Commons licences. While the spirit behind
them has remained constant, the wording of their legal deeds has been
revised over time, resulting in different *versions*, and adapted to
different legal jurisdictions, resulting in different *ports*.

Each licence includes the *Attribution* condition. In the version 3
licences and earlier, it is left up to the licensor to specify the way
in which credit is given. Recognising the difficulties this may cause in
the context of attribution stacking, the version 4 licences can be
satisfied by a link to a Web page containing attribution information,
though licensors can specify additional, alternative mechanisms.

There are three other conditions that licensors can add, and the various
possible combinations produce the six licences. Using just the
Attribution condition is known as the CC BY licence.

There is a *Non-Commercial* condition, where commercial is defined as
“primarily intended for or directed toward commercial advantage or
monetary compensation” [@creativecommons2010faq].

The *Share Alike* condition inserts a strong copyleft clause into the
licence.^[The strength of a copyleft clause refers to the range of 
derivations to which it applies, with weaker clauses applying to a 
narrower range. For example, giving a software library a weak copyleft 
licence means that all future versions/modifications of that library 
inherit the licence, but software that merely depends on that library 
does not.] The version 1 licences are very strict: derivations may only 
use the exact same version 1 licence. The version 2 licences onwards, 
however, allow derivations to use a later version or a different port 
of the same license. Nevertheless, derivations may not use a Creative 
Commons licence with a different set of conditions.

Finally, including the *No Derivatives* condition in the version 3
licences and earlier means that the licensee is forbidden from altering,
transforming or building upon the work. The version 4 condition is more
flexible: it allows these things for private use, but prevents the
licensee from sharing the derivations. It and the Share Alike condition
are mutually exclusive.

The six permutations are therefore

  * Attribution (CC BY);^[CC BY, URL:
    <http://creativecommons.org/licenses/by/4.0>]

  * Attribution Share Alike (CC BY-SA);^[CC BY-SA, URL:
     <http://creativecommons.org/licenses/by-sa/4.0>]

  * Attribution No Derivatives (CC BY-ND);^[CC BY-ND, URL:
    <http://creativecommons.org/licenses/by-nd/4.0>]

  * Attribution Non-Commercial (CC BY-NC);^[CC BY-NC, URL:
    <http://creativecommons.org/licenses/by-nc/4.0>]

  * Attribution Non-Commercial Share Alike (CC BY-NC-SA);^[CC BY-NC-SA,
    URL: <http://creativecommons.org/licenses/by-nc-sa/4.0>]

  * Attribution Non-Commercial No Derivatives (CC BY-NC-ND).^[CC
    BY-NC-ND, URL: <http://creativecommons.org/licenses/by-nc-nd/4.0>]

The versions of the licences prior to version 4 were not specifically
aimed at data, so using them for such presents some problems. The most
significant is that they do not explicitly cover *sui generis* database
rights such as the one in force in the European Union.^[More precisely, 
the ports of the version 3 licences to European jurisdictions fully 
waive the *sui generis* database right, while all other ports and the 
unported versions fully reserve it.] This means, for example, that use 
of substantial portions of a database licensed using the unported terms 
of version 3 or earlier may constitute a rights infringement in such 
jurisdictions. The version 4 licences, however, do explicitly include 
*sui generis* database rights unless the licensor specifically reserves 
them.

All versions of the licences treat datasets and databases as a whole:
they do not treat the individual data themselves differently from the
collection/database. This might be considered an advantage in terms of
simplicity, but means they cannot be used without difficulty in certain
complex cases such as collections of variously copyrighted works.

Similarly, the licences do not distinguish using data as part of a new
collection/database from using them to generate content (graphs, models,
maps, etc.). This means the Share Alike and No Derivatives conditions
might have further reaching consequences than intended. Indeed, the No
Derivatives condition would likely disallow most substantive types of
reuse, leaving only such cases as checking that data within the set
derive from each other as claimed. It should therefore be avoided.

In addition to the six main licences, Creative Commons provides tools
for entering works into the public domain, or certifying works as
already being in the public domain (see ‘[Public domain](sec:pd)’,
below).

Open Data Commons {#sec:odc}
-----------------

The Open Data Commons Project^[Open Data Commons Website, URL:
<http://opendatacommons.org/>] was set up in 2007 to develop a
successor to the Talis Community Licence (TCL).^[TCL, URL:
<http://web.archive.org/web/20130923083859/http://tdnarchive.capita-libraries.co.uk/tcl>] 
The first licence to be produced was a public domain dedication for 
databases. The project transferred to the Open Knowledge Foundation in 
2009 and has produced two further licences having some of the character 
of the Creative Commons licences, but designed specifically for 
databases. All three follow the Creative Commons model of providing a 
clear summary and canonical URL alongside the full legal text.

\bgroup\marginbox\framed
\noindent{}**ODC-By at a glance**

*Good for*

  * most databases and datasets
  * data to be used automatically
  * data to be used for generating non-data products

*Watch out for*

  * attribution stacking

\endframed\endmarginbox\egroup

The Open Data Commons Attribution Licence (ODC-By) allows licensees to
copy, distribute and use the database, to produce works from it and to
modify, transform and build upon it for any purpose.^[ODC-By, URL: 
<http://opendatacommons.org/licenses/by/>] If content is generated from 
the data, that content should include or accompany a notice explaining 
that the database was used in its creation.^[Example notice: ‘Contains 
information from \<*database*\> which is made available under the [ODC 
Attribution License](http://opendatacommons.org/licenses/by/).’] If the 
database is used substantially to create a new database or collection 
of databases, the licence URL or text and copyright/database right 
notices must be distributed with the new database or collection.

\bgroup\marginbox\framed
\noindent{}**ODC-ODbL at a glance**

*Good for*

  * most databases and datasets
  * data to be used automatically
  * data to be used for generating non-data products

*Watch out for*

  * attribution stacking
  * the copyleft condition as it reduces interoperability
  * the DRM clause as it may put off some reusers

\endframed\endmarginbox\egroup

The Open Data Commons Open Database Licence (ODC-ODbL) is the same as
ODC-By but for a couple of additional conditions.^[ODC-ODbL, URL:
<http://opendatacommons.org/licenses/odbl/>] It adds a copyleft 
condition that applies to new databases derived from the database (but 
not collections of databases or non-database content produced directly 
from it); this condition would be satisfied by future versions of the 
same licence or a compatible one as judged by the licensor. The other 
condition is that technological restrictions such as Digital Rights 
Management (DRM) mechanisms can only be applied to the database or a 
new database derived from it if an alternative copy without the 
restrictions is made equally available.

Being written in database terms, these licences are suited to a wider
range of research data than the Creative Commons equivalents. The
ODC-ODbL copyleft condition is also slightly more flexible than Creative
Commons’ Share Alike, though the ODC attribution requirement is slightly
less flexible.

Multiple licensing {#sec:multi}
==================

In cases where none of the above licences are entirely satisfactory, it
may be possible to use a multiple licensing approach. This would allow
recipients of the data to choose from a specified set the licence under
which they use the data.

Multiple licensing is usually used in the open source software world to
achieve one of two aims. The first is to control, rather than freely
permit or forbid outright, use of the software in commercial or
proprietary applications, thereby providing a means of generating income
from the open source code. The second is to resolve the compatibility
problems that exist between copyleft licences [@blanco2010dl]. In the
language of the Creative Commons licences, it allows owners of source
code to address the issues associated with the Non-Commercial and
Share-Alike clauses, respectively.

In the first case, a typical scenario would be for the owners of the
source code to release it under an open source licence with a strong
copyleft clause, such as the GNU General Public Licence (GPL). At the
same time, they offer the source code under an alternative licence
without the copyleft clause, and charge a fee for the use of this
less-demanding licence.[@valimaki2003dlo] This dual licensing regime 
gives developers the choice of using the code for free in free, open 
source software, or paying a fee to use the code in closed source, 
possibly commercial
software.

In the second case, the owners of the source code allow developers to
use it under one of several open source licences, broadening the range
of code with which it can be combined. For example, the source code of
the SeaMonkey Internet application suite is triple-licensed under the
Mozilla Public Licence (MPL), the GNU General Public Licence (GPL) and
the GNU Lesser General Public Licence (LGPL) [@seamonkey2012slr].

While multiple licensing can be a useful strategy, there are some issues
that need to be borne in mind. The option to multiply license a dataset
is certainly available to you if you hold all the rights that pertain to
the dataset: that is, you hold rights over the dataset, and any aspect
of the data for which you do not hold rights is public domain or exempt
from copyright/database right restrictions. If this is not the case then
what you can do is, of course, determined by the terms of the licensed
data that contributes to your dataset:

  * If the licence applies a copyleft condition to derived
    works/databases, you must respect that and license the derived
    dataset in the same way.

  * If the licence applies a non-commercial condition to uses of the
    licensed data, then you should not charge others for any of the
    licences under which you release your derived dataset, though this
    does not prevent you using multiple licensing as a compatibility
    strategy.

In any event, whenever licensing a dataset containing data licensed to
you, you should be careful not to claim rights you do not hold.

Multiple licensing works both ways, of course. If the ability to license
your derived dataset as you please is important to you, you may be able
to negotiate a special licence or contractual arrangement with the other
rights holders that allows you to do this, in which case the rights
holders are setting up a multiple licensing regime of their own.
Another, more extreme, possibility is to negotiate a rights assignment.
[@meeker2005dlo][@gnu2010wca]

\bgroup\marginfigure\snugshade\small
\input{fig-dual-licence}

\endsnugshade

\caption[Licence streams of a core product in a simplified dual 
licensing model]{Licence streams of a core product in a simplified dual 
licensing model (adapted from Välimäki, 2003).\protect\footref(fn:valimiki)}
\label{fig:dual-licence}

\endmarginfigure\egroup

By way of illustration, a dual licensing model working within these
constraints is shown in [Figure 3](#fig:dual-licence). This model was 
devised with software development in mind, though it could be applied 
to situations where a data resource is expanded by many contributors 
over time.

Mechanisms for licensing data {#sec:mechanism}
=============================

Once you have decided on a suitable licence, all that remains is to
attach that licence to the data. There are a few different ways of doing
this, but mostly they involve a *statement* that the data is released
under a particular licence or public domain dedication, and a mechanism
for retrieving the *full text* of the licence itself. As an example, the
suggested text for attaching the Open Data Commons PDDL to a database is
as follows.

> \[This database is/These data are/\<*name of dataset*\> is\] made
> available under the Public Domain Dedication and License v1.0 whose
> full text can be found at:
> <http://opendatacommons.org/licenses/pddl/1.0/>

The rights statement should be displayed prominently, so that any user
of the data will realise that they are licensed or public domain. It is
important to note, though, that the first inspection of the data might
be done by an automated tool rather than a human. 
CrystalEye,^[CrystalEye 
Website, URL: <http://wwmm.ch.cam.ac.uk/crystaleye/>] for example, is a 
database of crystal structures compiled by automatically parsing 
journal articles and other data sources. The problem for such efforts 
comes when the tool has to review the IPR status of a data source, 
examine any available licence terms, and decide whether to accept them. 
There are three possible ways to overcome this difficulty:

 1. a human could review each data source before letting the tool use
    it;

 2. a human could decide in advance under which licences the tool would
    be allowed to use data, and the data provider could label the data
    source in such a way that a tool could tell under what licence it is
    released;

 3. tool authors and data providers could agree a common vocabulary for
    describing the capabilities of tools, and data providers could
    associate with the data a machine-readable list of operations that
    are, or are not, permitted.

The first of these is not scalable. The third requires extensive
co-ordination and places limits on the capabilities an automated tool
can have, but once set up requires very little human intervention. On a
technical level it can be achieved through use of a Rights Expression
Language such as MPEG-21 REL,^[ISO/IEC 21000-5:2004. *Information 
technology – Multimedia framework (MPEG-21) – Part 5: Rights Expression 
Language.* International Organization for Standardization.] Open 
Digital Rights Language,^[ODRL Community Group, URL: 
<http://www.w3.org/community/odrl/>] or METSRights.^[METSRights schema, 
URL: <http://www.loc.gov/standards/rights/METSRights.xsd>] Permissions 
and restrictions written in such a language represent an arrangement in 
their own right: strictly speaking they can only be used as an 
alternative to, or replacement for, an actual licence, not as a 
machine-actionable ‘explanation’ of one. The exception to this is the 
Creative Commons Rights Expression Language, which delegates the 
precise definition of its terms to the respective full legal codes of 
the Creative Commons licences.[@abelson.etal2008ccr][@ccNDcbe]

The second option is a compromise between the other two; it only works
well when data providers use standard licences identified by standard
URLs. For example, the machine-readable equivalent of the ODC PDDL
statement above would be a Resource Description Framework (RDF) triple
such as that shown in [Figure 4](#fig:rdf-rights).[@manola.miller2004rp]

\bgroup\csname figure*\endcsname[ht]\shaded\small

~~~~ {.xml}
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns">
  <rdf:Description rdf:about="" xmlns:dc="http://purl.org/dc/terms/">
    <dc:license rdf:resource="http://opendatacommons.org/licenses/pddl/1.0/" />
  </rdf:Description>
</rdf:RDF>
~~~~~~~~~~~

\endshaded
\caption[RDF rights statement]{A rights statement encoded in RDF/XML. 
Note that the `rdf:about` attribute should identify the data to 
which the statement applies. In the context of an XMP packet, this 
attribute is left blank to identify the resource in which the packet is 
embedded.[@adobe2010xmp]}
\label{fig:rdf-rights}

\csname endfigure*\endcsname\egroup

\keepmarginfor{fig:rdf-rights}Again,
this should be made available somewhere the tool would look when
downloading the data, such as within a dataset catalogue record or
landing page. If possible you should also include the rights statement
within each data file – the following list indicates how this may be
done for some common data formats:

XML
:   Find a point in the document at which arbitrary XML can be embedded
    and insert an RDF/XML block similar to that shown in
    [Figure 2](#fig:rdf-rights).

MS Excel
:   Add the human-readable statement to the Comments document property.

MS Access
:   Add the human-readable statement to the Comments database property.

XHTML [@adida.birbeck2008rp]
:   Add the attributes `version="XHTML+RDFa 1.0"` and
    `xmlns:dc="http://purl.org/dc/terms/"` to the root `<html>` element.
    Add the human-readable statement somewhere in the document, marking
    up the link to the full licence text as an `<a>` element with the
    attribute `rel="dc:license"`.

Failing that, you should incorporate the rights statement when packaging
data; indeed, it is good practice to do this anyway. The following table
shows where the statement should be added for some common packaging
standards. In most cases, the insertion points specified permit
arbitrary XML to be included; the simplest option is therefore to insert
an RDF/XML statement like that in within the specified element, though
in future it may be possible to include an XHTML/RDFa fragment instead,
along the lines of the XHTML method given in the above list.


Current implementation issues {#sec:implementation-issues}
=============================

Two current issues for repositories are how to cater for both manual and
automatic uses of citations, and how to deal with dynamic datasets.

Manual and automatic use of citations {#sec:robots}
-------------------------------------

It is good practice for the URL in a data citation to lead to a *landing
page* for the dataset, rather than to initiate a direct download. The
landing page should enable readers to ensure they have located the right
dataset, to (re-)familiarise themselves with the research context and
supporting documentation, to consider licence terms prior to downloading
and to switch to a more recent version (or otherwise-formatted
representation) of the data if required. Landing pages also help to
create a more even user experience between datasets available through
direct access and those available through mediated access.

Since for the most part data are processed by software, it can help to
accelerate progress if software tools are also able to retrieve data by
means of the same URL. Software tools, like human readers, may wish to
be selective with regard to versions and representations, to avoid data
with an unsuitable licence, to download supporting documentation or
data, or to select individual files or other subsets of the data. Such
use cases require that the URL actually returns the machine-readable
equivalent of a landing page. The technique used by the ACRID
Project,^[ACRID Project Website, URL:
<http://www.cru.uea.ac.uk/cru/projects/acrid/>.] for example, is to provide
an index of the data and metadata associated with a workflow in the form of
an OAI-ORE Resource Map [@lagoze.etal2008oug].

Clearly humans and software have different requirements for the dataset
landing page. One way to satisfy both would be to embed the metadata
intended for software tools as RDF within the human-readable Web page.
This can be done using either RDFa as in [Figure 5](#fig:rdfa)
[@adida.birbeck2008rp], or HTML5 microdata as in [Figure 6](#fig:html5)
[@w3c2011hm].

\bgroup\figure[ht]\shaded\small
\input{fig-rdfa}

\endshaded
\caption{Example of using RDFa to embed a link to a publication within a dataset's Web page}
\label{fig:rdfa}

\endfigure\egroup

\bgroup\figure[ht]\shaded\small
\input{fig-html5}

\endshaded
\caption{Example of using HTML5 microdata to embed a link to a publication within a dataset's Web page}
\label{fig:html5}

\endfigure\egroup

An alternative method of serving both constituencies would be to use
*content negotiation*. This is where the Web server keeps several
different representations of a resource; when a Web client requests the
resource, the server sends back the representation that best matches the
client’s preferred content type (as expressed by the ‘Accept’ HTTP
header). In this case, the Web server would keep as the dataset landing
page an HTML Web page for human readers and an RDF/XML document (say)
for software tools.

While archives and repositories are broadly consistent in the
information they provide to readers on their landing pages – descriptive
metadata, a sample citation, a link to an accompanying paper, a link to
the data files or instructions on how to access them, licence terms –
they are still experimenting with the information they provide to
software tools.


Acknowledgements {#sec:acknowledgements}
================

Thank you to Sarah Callaghan (STFC), Shirley Crompton (STFC), Michael
Diepenbroek (WDC-MARE), Margaret Henty (ANDS), Catherine Jones (STFC),
Sarah Jones (DCC), Florance Kennedy (DCC), Phillip Lord (Newcastle
University) and Tom Pollard (BL) for helpful comments.

\finalpage

Further information {#sec:further-information}
===================

\setlength{\parindent}{0pt}\nonzeroparskip\color{dccblue}\small
Two other DCC guides cover this topic:

  * **Awareness Level:** [*Introduction to Curation: Data Citation and
    Linking*](http://www.dcc.ac.uk/resources/briefing-papers/introduction-curation/data-citation-and-linking)
    \(2011\) by Alex Ball and Monica Duke

  * **Awareness Level:** [*Introduction to Curation: Persistent
    Identifiers*](http://www.dcc.ac.uk/resources/briefing-papers/introduction-curation/persistent-identifiers)
    \(2006\) by Joy Davidson

\normalcolor
The following may also be of interest:

  * \fullcite{ands2011dca}[@ands2011dca]

  * \fullcite{lane2008dce}[@lane2008dce]

  * \fullcite{callaghan.etal2011cap}[@callaghan.etal2011cap]

  * \fullcite{newton.etal2010ddc}[@newton.etal2010ddc]

  * \fullcite{page2009spt}[@page2009spt]

  * \fullcite{icpsr2011whs}[@icpsr2011whs]

  * \fullcite{wilkinson2011syw}[@wilkinson2011syw]

  * \fullcite{wilkinson2011wdw}[@wilkinson2011wdw]

%LITERAL
%</example>
%<*bib>
%<<LITERAL
@ARTICLE{altman.king2007pss,
  author = {Micah Altman and Gary King},
  title = {A Proposed Standard for the Scholarly Citation of Quantitative Data},
  journal = {D-Lib Magazine},
  volume = {13},
  number = {3/4},
  date = {2007},
  issn = {1082-9873},
  doi = {10.1045/march2007-altman},
  timestamp = {2011-05-11}
}

@MANUAL{ansi.nisoZ39.88,
  author = {{ANSI/NISO Z39.88-2004}},
  title = {The {OpenUrl} Framework for Context Sensitive Services},
  date = {2005},
  publisher = {National Information Standards Organization},
  location = {Bethesda, MD},
  isbn = {978-1-880124-61-1},
  timestamp = {2011-05-12},
  url = {http://www.niso.org/standards/z39-88-2004},
  urldate = {2011-05-12}
}

@UNPUBLISHED{axton2010pca,
  author = {Myles Axton},
  title = {Publication Criteria and Contributor Credit},
  date = {2010-01-26},
  howpublished = {Presentation to the Sage Bionetworks Organizing Meeting, Boston,
	MA},
  timestamp = {2011-05-12}
}

@ARTICLE{chaturvedi2004ed,
  author = {Vishnu Chaturvedi},
  title = {Editorial},
  journal = {Mycopathologia},
  volume = {157},
  date = {2004},
  pages = {iii-iv},
  nameaddon = {(AAA-1019-2010)},
  timestamp = {2011-06-02},
  url = {http://dx.doi.org/10.1023/B:MYCO.0000020677.89178.15}
}

@ARTICLE{chavan.ingwersen2009tdp,
  author = {Chavan, Vishwas and Ingwersen, Peter},
  title = {Towards a Data Publishing Framework for Primary Biodiversity Data},
  journal = {BMC Bioinformatics},
  volume = {10},
  number = {Suppl 14},
  date = {2009},
  issn = {1471-2105},
  pages = {S2},
  abstract = {BACKGROUND:Currently primary scientific data, especially that dealing
	with biodiversity, is neither easily discoverable nor accessible.
	Amongst several impediments, one is a lack of professional recognition
	of scientific data publishing efforts. A possible solution is establishment
	of a 'Data Publishing Framework' which would encourage and recognise
	investments and efforts by institutions and individuals towards management,
	and publishing of primary scientific data potentially on a par with
	recognitions received for scholarly publications. DISCUSSION:This
	paper reviews the state-of-the-art of primary biodiversity data publishing,
	and conceptualises a 'Data Publishing Framework' that would help
	incentivise efforts and investments by institutions and individuals
	in facilitating free and open access to biodiversity data. It further
	postulates the institutionalisation of a 'Data Usage Index (DUI)',
	that would attribute due recognition to multiple players in the data
	collection/creation, management and publishing cycle. CONCLUSION:We
	believe that institutionalisation of such a 'Data Publishing Framework'
	that offers socio-cultural, legal, technical, economic and policy
	environment conducive for data publishing will facilitate expedited
	discovery and mobilisation of an exponential increase in quantity
	of 'fit-for-use' primary biodiversity data, much of which is currently
	invisible.},
  doi = {10.1186/1471-2105-10-S14-S2},
  pubmedid = {19900298},
  subtitle = {Challenges and Potentials for the Biodiversity Informatics Community},
  timestamp = {2011-06-08},
  url = {http://www.biomedcentral.com/1471-2105/10/S14/S2}
}

@ONLINE{davidson2006pi,
  author = {Joy Davidson},
  title = {Introduction to Curation},
  date = {2006-10-17},
  organization = {the Digital Curation Centre},
  subtitle = {Persistent Identifiers},
  timestamp = {2011-06-08},
  url = {http://www.dcc.ac.uk/resources/briefing-papers/introduction-curation/persistent-identifiers},
  urldate = {2011-06-08}
}

@ARTICLE{derry.etal2011dpm,
  author = {Jonathan M. J. Derry and Lara M. Mangravite and Christine Suver and
	Matt Furia and David Henderson and Xavier Schildwachter and Jonathan
	Izant and Solveig K. Sieberts and Michael R. Kellen and Stephen H.
	Friend},
  title = {Developing Predictive Molecular Maps of Human Disease through Community-Based
	Modeling},
  journal = {Nature Precedings},
  date = {2011-04-04},
  doi = {10.1038/npre.2011.5883.1},
  timestamp = {2011-07-14}
}

@ARTICLE{diepenbroek.etal2002pis,
  author = {Michael Diepenbroek and Hannes Grobe and Manfred Reinke and Uwe Schindler
	and Reiner Schlitzer and Rainer Sieger and Gerold Wefer},
  title = {{PANGAEA}},
  journal = {Computers and Geosciences},
  volume = {28},
  number = {10},
  date = {2002},
  issn = {0098-3004},
  pages = {1201-1210},
  doi = {10.1016/S0098-3004(02)00039-0},
  keywords = {Data management, Data mining, WDC-MARE, PangaVista, GIS},
  subtitle = {An Information System for Environmental Sciences},
  timestamp = {2011-05-23}
}

@INPROCEEDINGS{diepenbroek.etal2008piw,
  author = {Michael Diepenbroek and Uwe Schindler and Hannes Grobe},
  title = {{PANGAEA}},
  booktitle = {{WEBIST 2008}},
  date = {2008},
  publisher = {{Institute for Systems and Technologies of Information, Control and
	Communication}},
  isbn = {978-989-8111-27-2},
  venue = {Funchal, Madeira, Portugal},
  volume = {2},
  pages = {149-154},
  booksubtitle = {Proceedings of the 4th {International} {Conference} on {Web} {Information}
	{Systems} and {Technologies}},
  eventdate = {2008-05-04/2008-05-07},
  subtitle = {An {ICSU} {World} {Data} {Center} as a Networked Publication and Library
	System for Geoscientific Data},
  timestamp = {2011-05-23},
  url = {http://hdl.handle.net/10013/epic.28613},
  urldate = {2011-05-23}
}

@ONLINE{duke2011rdc,
  author = {Monica Duke},
  title = {Requirements for Data Citation},
  date = {2011-08-22},
  organization = {the SageCite blog},
  entrysubtype = {Blog post},
  subtitle = {The Prequel},
  timestamp = {2011-08-22},
  url = {http://blogs.ukoln.ac.uk/sagecite/2011/08/22/requirements-for-data-citation-the-prequel/},
  urldate = {2011-08-22}
}

@ONLINE{feinstein2010wha,
  author = {Elena Feinstein},
  title = {What Happens After you Submit your Data to {Dryad}?},
  date = {2010-12-02},
  organization = {the Dryad News and Views blog},
  entrysubtype = {Blog post},
  timestamp = {2011-05-24},
  url = {http://blog.datadryad.org/2010/12/02/what-happens-after-you-submit-your-data-to-dryad/},
  urldate = {2011-05-24}
}

@MANUAL{furia.sieberts2011sbd,
  author = {Matt Furia and Solly Sieberts},
  title = {{Sage} {Bionetworks} Data Curation Guidelines},
  date = {2011-03-31},
  publisher = {Sage Bionetworks},
  version = {2.1},
  timestamp = {2011-08-15},
  url = {http://precedings.nature.com/documents/5883/version/1/files/npre20115883-1.pdf},
  urldate = {2011-08-15}
}

@ARTICLE{giardine.etal2011sda,
  author = {Belinda Giardine and Joseph Borg and Douglas R. Higgs and Kenneth
	R. Peterson and Sjaak Philipsen and Donna Maglott and Belinda K.
	Singleton and David J. Anstee and A. Nazli Basak and Barnaby Clark
	and Flavia C. Costa and Paula Faustino and Halyna Fedosyuk and Alex
	E. Felice and Alain Francina and Renzo Galanello and Monica V. E.
	Gallivan and Marianthi Georgitsi and Richard J. Gibbons and Piero
	C. Giordano and Cornelis L. Harteveld and James D. Hoyer and Martin
	Jarvis and Philippe Joly and Emmanuel Kanavakis and Panagoula Kollia
	and Stephan Menzel and Webb Miller and Kamran Moradkhani and John
	Old and Adamantia Papachatzopoulou and Manoussos N. Papadakis and
	Petros Papadopoulos and Sonja Pavlovic and Lucia Perseu and Milena
	Radmilovic and Cathy Riemer and Stefania Satta and Iris Schrijver
	and Maja Stojiljkovic and Swee Lay Thein and Jan Traeger-Synodinos
	and Ray Tully and Takahito Wada and John S. Waye and Claudia Wiemann
	and Branka Zukic and David H. K. Chui and Henri Wajcman and Ross
	C. Hardison and George P. Patrinos},
  title = {Systematic documentation and analysis of human genetic variation
	in hemoglobinopathies using the microattribution approach},
  journal = {Nature Genetics},
  volume = {43},
  date = {2011},
  issn = {1061-4036},
  pages = {295-301},
  doi = {10.1038/ng.785},
  timestamp = {2011-07-14}
}

@BOOK{gibaldi2003mhw,
  author = {Joseph Gibaldi},
  title = {{MLA} {Handbook} for Writers of Research Papers},
  date = {2003},
  publisher = {Modern Language Association of America},
  edition = {6},
  location = {New York},
  timestamp = {2011-06-09}
}

@BOOK{gibaldi2008msm,
  author = {Joseph Gibaldi},
  title = {{MLA} Style Manual and Guide to Scholarly Publishing},
  date = {2008},
  publisher = {Modern Language Association of America},
  isbn = {9780873522977},
  edition = {3},
  location = {New York},
  timestamp = {2011-06-09}
}

@REPORT{green2010wnp,
  author = {Toby Green},
  title = {We Need Publishing Standards for Datasets and Data Tables},
  type = {White Paper},
  institution = {OECD Publishing},
  date = {2010-02},
  doi = {10.1787/787355886123},
  timestamp = {2011-05-11}
}

@ARTICLE{groth.etal2010anp,
  author = {Groth, Paul and Gibson, Andrew and Velterop, Jan},
  title = {The Anatomy of a Nano-publication},
  journal = {Information Services and Use},
  volume = {30},
  number = {1/2},
  date = {2010-01},
  issn = {0167-5265},
  pages = {51--56},
  acmid = {1883690},
  address = {Amsterdam},
  doi = {10.3233/ISU-2010-0613},
  keywords = {Semantic Web, disambiguation, publication, rich RDF-triples},
  publisher = {IOS Press},
  timestamp = {2011-05-18}
}

@BOOK{irish2005ipr,
  author = {Vivien Irish},
  title = {{IEE} {Management} of {Technology:} {No.}~22. {Intellectual} Property Rights for Engineers},
  date = {2005},
  publisher = {Institution of Electrical Engineers},
  isbn = {0-86341-490-7},
  edition = {2nd ed., p. 173},
  location = {London},
  timestamp = {2010-11-15}
}

@MANUAL{iso19101gir,
  author = {{ISO 19101}},
  title = {Geographic Information -- {Reference} Model},
  date = {2002},
  edition = {1},
  organization = {International Organization for Standardization},
  timestamp = {2011-05-12}
}

@MANUAL{iso27729,
  author = {{ISO/DIS 27729}},
  title = {Information and documentation -- {International} standard name identifier
	\mkbibparens{ISNI}},
  publisher = {International Organization for Standardization},
  series = {Draft International Standard},
  timestamp = {2011-06-02}
}

@ARTICLE{king2007idn,
  author = {Gary King},
  title = {An Introduction to the {Dataverse} {Network} as an Infrastructure
	for Data Sharing},
  journal = {Sociological Methods and Research},
  volume = {36},
  number = {2},
  date = {2007},
  issn = {0049-1241},
  doi = {10.1177/0049124107306660},
  timestamp = {2011-05-24}
}

@REPORT{lane2008dce,
  author = {Meredith A. Lane},
  title = {Data Citation in the Electronic Environment},
  type = {White Paper},
  institution = {Global Biodiversity Information Facility},
  date = {2008-09-10},
  timestamp = {2011-09-02},
  url = {http://www.danbif.dk/Documents/gbif-documents/DataCitation-Lane2008.pdf},
  urldate = {2011-09-02}
}

@ONLINE{lawrence2011cdo,
  author = {Bryan Lawrence},
  title = {Citation, {Digital} {Object} {Identifiers}, Persistence, Correction
	and Metadata},
  date = {2011-01-07},
  entrysubtype = {Blog post},
  timestamp = {2011-05-12},
  url = {http://home.badc.rl.ac.uk/lawrence/blog/2011/01/07/citation,_digital_object_identifiers,_persistence,_correction_and_metadata},
  urldate = {2011-05-12}
}

@ARTICLE{callaghan.etal2011cap,
  author = {Bryan Lawrence and Catherine Jones and Brian Matthews and Sam Pepler
	and Sarah Callaghan},
  title = {Citation and Peer Review of Data: Moving Towards Formal Data Publication},
  journal = {International Journal of Digital Curation},
  volume = {6},
  number = {2},
  date = {2011},
  issn = {1746-8256},
  pages = {4-37},
  timestamp = {2011-08-22},
  url = {http://www.ijdc.net/index.php/ijdc/article/view/181},
  urldate = {2011-08-31}
}

@REPORT{lawrence.etal2008dp,
  author = {Bryan N. Lawrence and Catherine M. Jones and Brian M. Matthews and
	Sam J. Pepler},
  title = {Data Publication},
  type = {Claddier Project Report},
  institution = {BADC},
  date = {2008-02-01},
  number = {3},
  timestamp = {2011-05-11},
  url = {http://purl.org/oai/oai:epubs.cclrc.ac.uk:work/43641},
  urldate = {2011-05-11}
}

@ONLINE{lord.etal2011okb,
  author = {Phillip Lord and Simon Cockell and Daniel C. Swan and Robert Stevens},
  title = {The {Ontogenesis} {Knowledgeblog}},
  date = {2011-06-07},
  organization = {Knowledge Blog},
  entrysubtype = {Blog post},
  subtitle = {Lightweight Semantic Publishing},
  timestamp = {2011-07-13},
  url = {http://knowledgeblog.org/128},
  urldate = {2011-07-13}
}

@INBOOK{lynch2009jgf,
  author = {Clifford Lynch},
  editor = {Tony Hey and Stewart Tansley and Kristin Tolle},
  title = {{Jim} {Gray's} Fourth Paradigm and the Construction of the Scientific
	Record},
  booktitle = {The Fourth Paradigm},
  date = {2009},
  publisher = {Microsoft Research},
  isbn = {978-0-9825442-0-4},
  location = {Redmond, WA},
  pages = {177-183},
  booksubtitle = {Data-Intensive Scientific Discovery},
  timestamp = {2011-07-14},
  url = {http://research.microsoft.com/en-us/collaboration/fourthparadigm/},
  urldate = {2010-07-14}
}

@BOOK{mackenzieowen2007sai,
  author = {Mackenzie Owen, John},
  title = {The Scientific Article in the Age of Digitization},
  date = {2007},
  publisher = {Springer},
  isbn = {1-4020-5335-5},
  series = {Information Science and Knowledge Management},
  number = {11},
  location = {Dordrecht},
  doi = {10.1007/1-4020-5340-1},
  timestamp = {2011-03-02}
}

@INPROCEEDINGS{matthews.etal2009pes,
  author = {Matthews, Brian and Duncan, Alastair and Jones, Catherine and Neylon,
	Cameron and Borkum, Mark and Coles, Simon and Hunter, Philip},
  title = {A Protocol for Exchanging Scientific Citations},
  booktitle = {Fifth {IEEE} {International} {Conference} on {e-Science} {(e-Science}
	2009)},
  date = {2009-12},
  publisher = {IEEE Computer Society},
  isbn = {978-0-7695-3877-8},
  location = {Los Alamitos, CA},
  pages = {171--177},
  __markedentry = {[Alex Ball]},
  doi = {10.1109/e-Science.2009.32},
  timestamp = {2011-05-18}
}

@REPORT{matthews.etal2007rdp,
  author = {Brian Matthews and Katherine Portwin and Catherine Jones and Bryan
	Lawrence},
  title = {Recommendations for Data\slash Publication Linkage},
  type = {CLADDIER Project Report},
  institution = {STFC},
  date = {2007-11-30},
  number = {3},
  version = {1.0},
  timestamp = {2011-05-18},
  url = {http://ie-repository.jisc.ac.uk/221/},
  urldate = {2012-06-20}
}

@UNPUBLISHED{newton.etal2010ddc,
  author = {Mark P. Newton and Hailey Mooney and Michael Witt},
  title = {A Description of Data Citation Instructions in Style Guides},
  date = {2010},
  howpublished = {Poster presented at the 6th International Digital Curation Conference,
	Chicago, IL, 7--8 December 2010.},
  timestamp = {2011-08-24},
  url = {http://docs.lib.purdue.edu/lib_research/121/},
  urldate = {2011-08-24}
}

@ONLINE{page2009spt,
  author = {Roderic Page},
  title = {Semantic Publishing},
  date = {2009-04-20},
  organization = {the iPhylo blog},
  entrysubtype = {Blog post},
  subtitle = {Towards Real Integration by Linking},
  timestamp = {2011-05-11},
  url = {http://iphylo.blogspot.com/2009/04/semantic-publishing-towards-real.html},
  urldate = {2011-05-11}
}

@REPORT{penev.etal2011pdp,
  author = {Lyubomir Penev and Daniel Mietchen and Vishwas Chavan and Gregor
	Hagedorn and David Remsen and Vincent Smith and David Shotton},
  title = {{Pensoft} Data Publishing Policies and Guidelines for Biodiversity
	Data},
  institution = {Pensoft},
  date = {2011-05-26},
  timestamp = {2011-07-04},
  url = {http://www.pensoft.net/J_FILES/Pensoft_Data_Publishing_Policies_and_Guidelines.pdf},
  urldate = {2011-07-04}
}

@ONLINE{piwowar2011lfd,
  author = {Heather Piwowar},
  title = {Links from the Data Collection Article},
  date = {2011-05-05},
  organization = {the Research Remix blog},
  entrysubtype = {Blog post},
  subtitle = {Inline or in the Bibliography?},
  timestamp = {2011-06-03},
  url = {http://researchremix.wordpress.com/2011/05/05/inline-or-biblio/},
  urldate = {2011-06-03}
}

@INPROCEEDINGS{shotton2009cct,
  author = {David Shotton},
  editor = {Phillip Lord and Nigam Shah and Susanna-Assunta Sansone and Susie
	Stephens and Larisa Soldatova},
  title = {{CiTO,} the {Citation} {Typing} {Ontology,} and its Use for Annotation
	of Reference Lists and Visualization of Citation Networks},
  booktitle = {Proceedings of the 12th {Annual} {Bio-Ontologies} {Meeting}},
  date = {2009-06-28},
  venue = {Stockholm, Sweden},
  pages = {53-56},
  timestamp = {2011-08-17},
  url = {http://bio-ontologies.org.uk/2009/download/Bio-Ontologies2009.pdf#page=53},
  urldate = {2011-08-17}
}

@ARTICLE{shotton2010cct,
  author = {David Shotton},
  title = {{CiTO,} the {Citation} {Typing} {Ontology}},
  journal = {Journal of Biomedical Semantics},
  volume = {1},
  number = {Suppl 1},
  date = {2010},
  issn = {2041-1480},
  pages = {S6},
  doi = {10.1186/2041-1480-1-S1-S6},
  timestamp = {2011-08-17}
}

@MANUAL{shotton.peroni2011cct,
  author = {David Shotton and Silvio Peroni},
  title = {{CiTO}, the {Citation} {Typing} {Ontology}},
  date = {2011-03-30},
  version = {2.0},
  timestamp = {2011-05-26},
  url = {http://purl.org/spar/cito/},
  urldate = {2011-05-26}
}

@MANUAL{shotton.peroni2011cdc,
  author = {David Shotton and Silvio Peroni},
  title = {{CiTO4Data}, the {Citation} {Typing} {Ontology} for {Data}},
  date = {2011-02-25},
  version = {1.0},
  timestamp = {2011-07-04},
  url = {http://purl.org/spar/cito4data/},
  urldate = {2011-05-26}
}

@ARTICLE{sieber.trumbo1995ngc,
  author = {Sieber, Joan and Trumbo, Bruce},
  title = {{(Not)} Giving Credit Where Credit is Due},
  journal = {Science and Engineering Ethics},
  volume = {1},
  number = {1},
  date = {1995},
  issn = {1353-3452},
  pages = {11-20},
  affiliation = {California State University, Hayward Dept. of Psychology 94542 Hayward
	CA USA 94542 Hayward CA USA},
  doi = {10.1007/BF02628694},
  keyword = {Humanities, Social Sciences and Law},
  publisher = {Springer Netherlands},
  subtitle = {Citation of Data Sets},
  timestamp = {2011-06-08}
}

@ONLINE{sixapart2002tts,
  author = {{Six Apart}},
  title = {{TrackBack} Manual},
  date = {2007},
  timestamp = {2011-05-18},
  url = {http://www.movabletype.org/documentation/trackback_manual.html},
  urldate = {2011-10-18}
}

@ARTICLE{starr.gastl2011ims,
  author = {Joan Starr and Angela Gastl},
  title = {{isCitedBy}},
  journal = {D-Lib Magazine},
  volume = {17},
  number = {1/2},
  date = {2011},
  issn = {1082-9873},
  doi = {10.1045/january2011-starr},
  subtitle = {A Metadata Scheme for {DataCite}},
  timestamp = {2011-05-11}
}

@ARTICLE{stodden2009err,
  author = {Victoria Stodden},
  title = {Enabling Reproducible Research},
  journal = {International Journal of Communications Law and Policy},
  volume = {13},
  date = {2009},
  issn = {1439-6262},
  pages = {1-25},
  subtitle = {Open Licensing for Scientific Innovation},
  timestamp = {2010-09-02},
  url = {http://www.ijclp.net/files/ijclp_web-doc_1-13-2009.pdf},
  urldate = {2010-09-02}
}

@ONLINE{wilkinson2011syw,
  author = {Max Wilkinson},
  title = {So You Want to Cite your Data},
  date = {2011-07-28},
  organization = {the SageCite Knowledge Blog},
  entrysubtype = {Blog post},
  subtitle = {The Consequences of Data Citation},
  timestamp = {2011-08-17},
  url = {http://sagecite.knowledgeblog.org/2011/07/28/why-do-we-need-datacitation/},
  urldate = {2011-08-16}
}

@ONLINE{wilkinson2011wdw,
  author = {Max Wilkinson},
  title = {Why Do We Need Data Citation},
  date = {2011-07-28},
  organization = {the SageCite Knowledge Blog},
  entrysubtype = {Blog post},
  subtitle = {Take Two},
  timestamp = {2011-08-17},
  url = {http://sagecite.knowledgeblog.org/2011/07/28/why-do-we-need-data-citation-take-two/},
  urldate = {2011-08-16}
}

@MANUAL{adida.birbeck2008rp,
  editor = {Ben Adida and Mark Birbeck},
  title = {{RDFa} Primer},
  date = {2008-10-14},
  publisher = {World Wide Web Consortium},
  series = {W3C Working Group Note},
  timestamp = {2011-06-01},
  url = {http://www.w3.org/TR/xhtml-rdfa-primer/},
  urldate = {2011-06-01}
}

@MANUAL{w3c2011hm,
  editor = {Ian Hickson},
  title = {{HTML} Microdata},
  date = {2011-05-25},
  publisher = {World Wide Web Consortium},
  series = {W3C Working Draft},
  timestamp = {2011-07-04},
  url = {http://www.w3.org/TR/2011/WD-microdata-20110525/},
  urldate = {2011-07-04}
}

@MANUAL{lagoze.etal2008oug,
  editor = {Carl Lagoze and Herbert {Van de Sompel} and Pete Johnston and Michael
	Nelson and Robert Sanderson and Simeon Warner},
  title = {{ORE} User Guide},
  date = {2008-10-17},
  publisher = {Open Archives Initiative},
  version = {1.0},
  subtitle = {Primer},
  timestamp = {2011-06-01},
  url = {http://www.openarchives.org/ore/1.0/primer},
  urldate = {2011-06-01}
}

@BOOK{ritter2002oms,
  editor = {R. M. Ritter},
  title = {{Oxford} {Manual} of {Style}},
  date = {2002},
  publisher = {Oxford University Press},
  location = {Oxford, UK},
  timestamp = {2011-06-09}
}

@MANUAL{sefton2011shc,
  editor = {Peter Sefton},
  title = {Scholarly {HTML} Core},
  date = {2011-05-03},
  timestamp = {2011-07-14},
  url = {http://scholarlyhtml.org/2011/05/03/scholarly-html-core-3/},
  urldate = {2011-07-14}
}

@ONLINE{ands2011dca,
  title = {Data Citation},
  date = {2011-05-03},
  organization = {the Australian National Data Service},
  entrysubtype = {Awareness Level Guide},
  timestamp = {2011-06-06},
  url = {http://www.ands.org.au/guides/data-citation-awareness.html},
  urldate = {2011-06-06}
}

@BOOK{apa2001pma,
  title = {{Publication} {Manual} of the {American} {Psychological} {Association}},
  date = {2001},
  publisher = {American Psychological Association},
  edition = {5},
  location = {Washington, DC},
  timestamp = {2011-06-09}
}

@BOOK{apa2010pma,
  title = {{Publication} {Manual} of the {American} {Psychological} {Association}},
  date = {2010},
  publisher = {American Psychological Association},
  edition = {6},
  location = {Washington, DC},
  timestamp = {2011-06-09}
}

@MANUAL{dsab2010dsa,
  title = {Data {Seal} of {Approval}},
  date = {2010-05-03},
  publisher = {Data Seal of Approval Board},
  version = {2.0},
  isbn = {978-9490-531-02-7},
  subtitle = {Quality Guidelines for Digital Research Data},
  timestamp = {2010-03-15},
  url = {http://assessment.datasealofapproval.org/documentation/},
  urldate = {2011-06-29}
}

@ONLINE{icpsr2011whs,
  title = {Why and How Should {I} Cite Data?},
  date = {2009-06-23},
  organization = {the Inter-University Consortium for Political and Social Research},
  timestamp = {2011-06-08},
  url = {http://icpsr-support.blogspot.com/2008/10/why-and-how-should-i-cite-data.html},
  urldate = {2011-06-08}
}

@REPORT{rin.nesta2010oac,
  title = {Open to All?},
  institution = {Research Information Network and {National Endowment for Science,
	Technology and the Arts}},
  date = {2010-09},
  subtitle = {Case Studies of Openness in Research},
  timestamp = {2010-11-23},
  url = {http://www.rin.ac.uk/system/files/attachments/NESTA-RIN_Open_Science_V01_0.pdf},
  urldate = {2011-05-01}
}

@REPORT{rin2008afs,
  title = {Acknowledgement of Funders in Scholarly Journal Articles},
  institution = {Research Information Network},
  date = {2008-02},
  subtitle = {Guidance for {UK} Research Funders, Authors and Publishers},
  timestamp = {2011-06-03},
  url = {http://www.rin.ac.uk/our-work/research-funding-policy-and-guidance/acknowledgement-funders-journal-articles},
  urldate = {2011-06-03}
}

@BOOK{ucp2010cms,
  title = {{Chicago} {Manual} of {Style}},
  date = {2010},
  publisher = {University of Chicago Press},
  edition = {16},
  location = {Chicago, IL},
  timestamp = {2011-06-09}
}

@ONLINE{sciencecommons2007pio,
title = {Protocol for Implementing Open Access Data \bibopenparen\S 5.3\bibcloseparen},
date = {2007-12-20},
urldescription = {Science Commons website},
timestamp = {2010-09-27},
url = {http://sciencecommons.org/projects/publishing/open-access-data-protocol/},
urldate = {2010-09-27}
}

@ONLINE{oclcNDdla,
title = {Data licenses and attribution},
url = {http://www.oclc.org/data/attribution.en.html},
urldescription = {OCLC Website},
urldate = {2014-07-30}
}

@ONLINE{ccNDcl,
title = {Compatible Licenses},
url = {https://creativecommons.org/compatiblelicenses},
urldescription = {Creative Commons Website},
urldate = {2014-07-10}
}

@ONLINE{gnu2010vlc,
title = {Various Licenses and Comments about Them},
date = {2010-08-09},
urldescription = {GNU website},
timestamp = {2010-09-29},
url = {http://www.gnu.org/licenses/license-list.html},
urldate = {2010-09-29}
}

@REPORT{creativecommons2009dnc,
title = {Defining \enquote{Noncommercial}},
subtitle = {A Study of How the Online Population Understands \enquote{Noncommercial Use}},
date = {2009-09},
author = {{Netpop Research}},
institution = {Creative Commons},
location = {San Francisco, CA},
url = {http://wiki.creativecommons.org/Defining_Noncommercial},
urldate = {2014-07-10}
}

@ONLINE{creativecommons2010faq,
title = {Frequently Asked Questions \bibopenparen section entitled \enquote{Does my use violate the NonCommercial clause of the licenses?}\bibcloseparen},
date = {2014-06-24},
urldescription = {Creative Commons wiki},
timestamp = {2010-09-28},
url = {http://wiki.creativecommons.org/Frequently_Asked_Questions},
urldate = {2014-07-10}
}

@ONLINE{blanco2010dl,
author = {Elena Blanco},
title = {Dual-Licensing as a Business Model},
date = {2012-09-09},
urldescription = {OSS Watch website},
timestamp = {2010-09-03},
url = {http://oss-watch.ac.uk/resources/duallicence2},
urldate = {2014-07-09}
}

@ARTICLE{valimaki2003dlo,
author = {Mikko Välimäki},
title = {Dual Licensing in Open Source Software Industry},
journal = {Systemes d'Information et Management},
volume = {8},
number = {1},
date = {2003},
issn = {1260-4984},
pages = {63-75},
timestamp = {2010-09-03},
url = {http://ssrn.com/abstract=1261644},
urldate = {2011-10-18}
}

@ONLINE{seamonkey2012slr,
title = {{SeaMonkey} Legal Resources},
date = {2012-05-07},
urldescription = {SeaMonkey Project website},
timestamp = {2014-07-15},
url = {http://www.seamonkey-project.org/legal/},
urldate = {2014-07-15}
}

@ONLINE{meeker2005dlo,
author = {Heather Meeker},
title = {Dual-Licensing Open Source Business Models},
date = {2005-04-06},
timestamp = {2010-09-03},
url = {http://linux.sys-con.com/node/49061/print},
urldate = {2010-09-03}
}

@ONLINE{gnu2010wca,
title = {When a Company Asks For Your Copyright},
date = {2010-10-03},
urldescription = {GNU Project website},
timestamp = {2010-11-17},
url = {http://www.gnu.org/philosophy/assigning-copyright.html},
urldate = {2010-11-17}
}

@MANUAL{abelson.etal2008ccr,
author = {Hal Abelson and Ben Adida and Mike Linksvayer and Nathan Yergler},
title = {{ccREL}},
date = {2008-03-03},
publisher = {Creative Commons},
version = {1.0},
subtitle = {The {Creative} {Commons} {Rights} {Expression} {Language}},
timestamp = {2010-11-11},
url = {http://wiki.creativecommons.org/images/d/d6/Ccrel-1.0.pdf},
urldate = {2010-11-11}
}

@ONLINE{ccNDcbe,
title = {{CC} {REL} by Example},
urldescription = {Creative Commons website},
url = {http://labs.creativecommons.org/2011/ccrel-guide/},
urldate = {2014-07-15}
}

@MANUAL{manola.miller2004rp,
editor = {Frank Manola and Eric Miller},
title = {{RDF} Primer},
date = {2004-02-10},
publisher = {W3C},
series = {W3C Recommendation},
timestamp = {2010-11-23},
url = {http://www.w3.org/TR/rdf-primer/},
urldate = {2010-11-23}
}

@MANUAL{adobe2010xmp,
title = {Extensible {Metadata} {Platform} {(XMP)} Specification, Part 1},
date = {2010-07},
publisher = {Adobe Systems},
location = {San Jose, CA},
subtitle = {Data model, Serialization, and Core Properties},
timestamp = {2010-11-08},
url = {http://www.adobe.com/content/dam/Adobe/en/devnet/xmp/pdfs/XMPSpecificationPart1.pdf},
urldate = {2010-11-08}
}



%LITERAL
%</bib>
%<*template>
\documentclass[numbers,$for(classoption)$$classoption$$sep$,$endfor$]{dcchowto}
$if(biblio-files)$
\bibliography{$biblio-files$}
$endif$
\renewcommand*{\bibfont}{\small}
\ifdraftdoc
  \usepackage{embedfile}
  \embedfile[desc={Source code for this document}]{\jobname.tex}
  $if(biblio-files)$
  \embedfile[desc={Biblatex database for this document}]{$biblio-files$}
  $endif$
%<internal>\iffalse
%<template>\fi
$if(highlighting-macros)$
$highlighting-macros$
$endif$
$for(header-includes)$
$header-includes$
$endfor$

$if(title)$
\title{$title$}
$endif$
$for(author)$
\author{$author$}
$endfor$
\date{$date$}
$for(partner)$
\partner{$partner$}
$endfor$
$for(partnerlogo)$
\partnerlogo{$partnerlogo$}
$endfor$

\usepackage{environ}

\let\oldquote=\quote
\let\endoldquote=\endquote
\let\quote\relax
\let\endquote\relax

\NewEnviron{quote}{%
  \global\let\tmp\BODY\aftergroup\docoverandabstract
}

\def\docoverandabstract{%
  \let\quote=\oldquote
  \let\endquote=\endoldquote
  \maketitle[\tmp]%
}

\begin{document}
$for(include-before)$
$include-before$
$endfor$
$body$
$if(furtherinfo)$
$for(furtherinfo)$
\nocite{$furtherinfo$}
$endfor$
\printbibliography[category=notcited]
$endif$

\textbf{Please cite as:} \DCCHowtoAuthorAPA\ (\the\year). ‘\thetitle’. \emph{DCC How-to Guides}. Edinburgh: Digital Curation Centre. Available online: \url{http://www.dcc.ac.uk/resources/how-guides}

\vfill
\noindent\bfseries\begingroup\color{dccblue}
Follow the DCC on Twitter: \href{http://twitter.com/#!/digitalcuration}{@digitalcuration}, \href{https://twitter.com/hashtag/ukdcc}{\#ukdcc}

\vfill
\raggedleft\mdseries\footnotesize\theversion\par
\endgroup
$for(include-after)$
$include-after$
$endfor$
\end{document}
%</template>
%<*htemplate>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"$if(lang)$ lang="$lang$" xml:lang="$lang$"$endif$>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta name="generator" content="pandoc" />
$for(author-meta)$
<meta name="author" content="$author-meta$" />
$endfor$
$if(date-meta)$
<meta name="date" content="$date-meta$" />
$endif$
<title>$if(title-prefix)$$title-prefix$ - $endif$$pagetitle$</title>
<style type="text/css">
code {
  white-space: pre;
}
div.div_highlight {
  border: 1px solid #C0C0C0;
  padding: 1em 1em 0px;
  margin-bottom: 1em;
}
</style>
$if(quotes)$
<style type="text/css">q { quotes: "“" "”" "‘" "’"; }</style>
$endif$
$if(highlighting-css)$
<style type="text/css">
$highlighting-css$
</style>
$endif$
$for(css)$
<link rel="stylesheet" href="$css$" $if(html5)$$else$type="text/css" $endif$/>
$endfor$
$if(math)$
$math$
$endif$
$for(header-includes)$
$header-includes$
$endfor$
</head>
<body>
$for(include-before)$
$include-before$
$endfor$
$if(title)$
<div id="$idprefix$header">
<h1 class="title">$title$</h1>
$if(subtitle)$
<h1 class="subtitle">$subtitle$</h1>
$endif$
<p>By $for(author)$$author$$sep$, $endfor$</p>
$if(date)$
<p>Last updated: $date$</p>
$endif$
</div>
$endif$
$if(title)$$if(date)$
<div class="div_highlight">
Please cite as: $for(author)$$author$$sep$, $endfor$ ($date$). ‘$title$’.
<em>DCC How-to Guides.</em> Edinburgh: Digital Curation Centre. Available online:
<a href="http://www.dcc.ac.uk/resources/how-guides">http://www.dcc.ac.uk/resources/how-guides</a>
</div>
$endif$$endif$
$if(toc)$
<div id="$idprefix$TOC">
$toc$
</div>
$endif$
$body$
$for(include-after)$
$include-after$
$endfor$
</body>
</html>
%</htemplate>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------
dcchowto --- A LaTeX class for DCC How-to Guides
Author:  Alex Ball
E-mail:  a.ball@ukoln.ac.uk
License: Released under the LaTeX Project Public License v1.3c or later
See:     http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

\endpreamble
\postamble

Copyright (C) 2015 by Alex Ball <a.ball@ukoln.ac.uk>
\endpostamble

\usedir{tex/latex/\jobname}
\generate{
  \file{\jobname.cls}{\from{\jobname.dtx}{class}}
  \file{\jobname-template.latex}{\from{\jobname.dtx}{template}}
}
%</install>
%<install>\endbatchfile
%<*internal>
\usedir{source/latex/\jobname}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\usedir{tex/latex/\jobname}
\generate{
  \file{\jobname-apa.csl}{\from{\jobname.dtx}{csl}}
  \file{\jobname-template.html}{\from{\jobname.dtx}{htemplate}}
}
\usedir{doc/latex/\jobname}
\generate{
  \file{README.md}{\from{\jobname.dtx}{readme}}
  \file{\jobname-example.md}{\from{\jobname.dtx}{example}}
  \file{\jobname-example.bib}{\from{\jobname.dtx}{bib}}
}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
%<*driver>
\ProvidesFile{dcchowto.dtx}
%</driver>
%<class>\NeedsTeXFormat{LaTeX2e}[1999/12/01]
%<class>\ProvidesClass{dcchowto}
%<*class>
    [2015/01/12 v3.00 A LaTeX class for DCC How-to Guides]
%</class>
%<*driver>
\documentclass[12pt]{article}
% Page Layout
\usepackage[a4paper,hmargin=30mm,vmargin=25mm,nohead]{geometry}
% Typography
\RequirePackage[charter,expert]{mathdesign}
\makeatletter
\def\hrulefill{\leavevmode\leaders \hrule height \rulethickness \hfill\kern\z@}
\makeatother
\RequirePackage{iftex}
\ifPDFTeX
  \RequirePackage[utf8]{inputenc}
  \RequirePackage[T1]{fontenc}
  \RequirePackage[scaled=0.96,sups]{XCharter}
  \RequirePackage[scaled=0.95,tabular]{sourcesanspro}
  \RequirePackage[varl,varqu]{zi4}
\else
  \RequirePackage{fontspec}
  \setmainfont
    [Scale=0.96
    ,Ligatures=TeX
    ]%
    {Charis SIL}
  \setsansfont
    [Scale=MatchLowercase
    ,Ligatures=TeX
    ,StylisticSet=4
    ,BoldFont={Source Sans Pro Bold}
    ,ItalicFont={Source Sans Pro Italic}
    ,BoldItalicFont={Source Sans Pro Bold Italic}
    ]%
    {Source Sans Pro}
  \setmonofont
    [Scale=MatchLowercase
    ,RawFeature={extend=0.83}
    ,BoldFont={Source Code Pro Bold}
    ,BoldItalicFont={Source Code Pro Bold}
    ,AutoFakeSlant=0.2
    ,ItalicFeatures={StylisticSet=2,StylisticSet=3}
    ,BoldItalicFeatures={FakeSlant=0.2,StylisticSet=2,StylisticSet=3}
    ]%
    {Source Code Pro}
\fi
% Improving the look of the documentation
\usepackage[bookmarks,raiselinks,pageanchor,hyperindex,colorlinks]{hyperref}
\usepackage{tcolorbox}
\tcbuselibrary{documentation,breakable,minted}
\colorlet{Option}{violet}
\colorlet{Command}{red!75!black}
\colorlet{Environment}{blue!75!black}
\colorlet{Key}{green!50!black}
\colorlet{Value}{olive!75!black}
\colorlet{Color}{cyan!75!black}
\tcbset
  { listing engine=minted
  , index format=pgf
  , color command=Command
  , color environment=Environment
  , color key=Key
  , color value=Value
  , color color=Color
  }
\let\tcbcs=\cs
\renewcommand*{\cs}[1]{\textcolor{Command}{\tcbcs{#1}}}
\def\brackets#1{%
  \texttt{\textcolor{Environment}{\char`\{}#1\textcolor{Environment}{\char`\}}}}
\def\marg#1{%
  \textcolor{Environment}{\ttfamily\char`\{}\meta{#1}\textcolor{Environment}{\ttfamily\char`\}}}
\newcommand*{\env}[1]{\textcolor{Environment}{\ttfamily #1}}
\newcommand*{\key}[1]{\textcolor{Key}{\ttfamily #1}}
\newcommand*{\val}[1]{\textcolor{Value}{\ttfamily #1}}
\renewenvironment{macro}[1]{%
  \def\MyName{#1}%
  \index{\MyName@\tcbIndexPrintComC {\MyName}|(emph}%
}{%
  \ifdef{\MyName}{}{%
    \errmessage{You have closed a macro environment you have not opened on \the\inputlineno.}%
  }
  \index{\MyName@\tcbIndexPrintComC {\MyName}|)}%
}
\renewenvironment{environment}[1]{%
  \def\MyName{#1}%
  \index{\MyName@\tcbIndexPrintEnvCA {\MyName}|(emph}%
  \index{Environments!\MyName@\tcbIndexPrintEnvC {\MyName}|(emph}%
}{%
  \ifdef{\MyName}{}{%
    \errmessage{You have closed an environment environment you have not opened on \the\inputlineno.}%
  }
  \index{Environments!\MyName@\tcbIndexPrintEnvC {\MyName}|)}%
  \index{\MyName@\tcbIndexPrintEnvCA {\MyName}|)}%
}
\newenvironment{optionkey}[1]{%
  \def\MyName{#1}%
  \index{\MyName@\tcbIndexPrintKeyCA {\MyName}|(emph}%
  \index{Keys!\MyName@\tcbIndexPrintKeyC {\MyName}|(emph}%
}{%
  \ifdef{\MyName}{}{%
    \errmessage{You have closed an optionkey environment you have not opened on \the\inputlineno.}%
  }
  \index{Keys!\MyName@\tcbIndexPrintKeyC {\MyName}|)}%
  \index{\MyName@\tcbIndexPrintKeyCA {\MyName}|)}%
}
\newenvironment{optionvalue}[1]{%
  \def\MyName{#1}%
  \index{\MyName@\tcbIndexPrintValCA {\MyName}|(emph}%
  \index{Values!\MyName@\tcbIndexPrintValC {\MyName}|(emph}%
}{%
  \ifdef{\MyName}{}{%
    \errmessage{You have closed an optionvalue environment you have not opened on \the\inputlineno.}%
  }
  \index{Values!\MyName@\tcbIndexPrintValC {\MyName}|)}%
  \index{\MyName@\tcbIndexPrintValCA {\MyName}|)}%
}
\makeatletter
\AtBeginDocument{%
  % Comments
  \def\PY@tok@c{\def\PY@tc##1{\textcolor{gray}{##1}}}
  % Command sequences
  \def\PY@tok@k{\def\PY@tc##1{\textcolor{Command}{##1}}}
  % Optional arguments
  \def\PY@tok@na{\def\PY@tc##1{\textcolor{Option}{##1}}}
  % Braces
  \def\PY@tok@nb{\def\PY@tc##1{\textcolor{Environment}{##1}}}
}
\makeatother
\newcommand{\pkg}[1]{\href{http://www.ctan.org/pkg/#1}{\textsf{#1}}}
\MakeShortVerb{\|}
\makeatletter
\let\PrintMacroName\@gobble
\let\PrintEnvName\@gobble
\renewenvironment{tcb@manual@entry}{\begin{list}{}{%
  \setlength{\topsep}{0pt}
  \setlength{\partopsep}{0pt}
  \setlength{\leftmargin}{\kvtcb@doc@left}%
  \setlength{\itemindent}{0pt}%
  \setlength{\itemsep}{0pt}%
  \setlength{\parsep}{0pt}%
  \setlength{\rightmargin}{\kvtcb@doc@right}%
  }\item}{\end{list}}
\makeatother
% This bit inspired by ydoc
\makeatletter
\newwrite\ydocwrite
\def\ydocfname{\jobname.cod}
\def\ydoc@catcodes{%
  \let\do\@makeother
  \dospecials
  \catcode`\\=\active
  \catcode`\^^M=\active
  \catcode`\ =\active
}
\def\macrocode{%
  \begingroup
  \ydoc@catcodes
  \macro@code
}
\def\endmacrocode{}
\begingroup
\endlinechar\m@ne
\@firstofone{%
\catcode`\|=0\relax
\catcode`\(=1\relax
\catcode`\)=2\relax
\catcode`\*=14\relax
\catcode`\{=12\relax
\catcode`\}=12\relax
\catcode`\ =12\relax
\catcode`\%=12\relax
\catcode`\\=\active
\catcode`\^^M=\active
\catcode`\ =\active
}*
|gdef|macro@code#1^^M%    \end{macrocode}(*
|endgroup|expandafter|macro@@code|expandafter(|ydoc@removeline#1|noexpand|lastlinemacro)*
)*
|gdef|ydoc@removeline#1^^M(|noexpand|firstlinemacro)*
|gdef|ydoc@defspecialmacros(*
|def^^M(|noexpand|newlinemacro)*
|def (|noexpand|spacemacro)*
|def\(|noexpand|bslashmacro)*
)*
|gdef|ydoc@defrevspecialmacros(*
|def|newlinemacro(|noexpand^^M)*
|def|spacemacro(|noexpand )*
|def|bslashmacro(|noexpand\)*
)*
|endgroup
\def\macro@@code#1{%
  {\ydoc@defspecialmacros
  \xdef\themacrocode{#1}}%
  \PrintMacroCode
  \end{macrocode}%
}
\def\PrintMacroCode{%
  \begingroup
  \let\firstlinemacro\empty
  \let\lastlinemacro\empty
  \def\newlinemacro{^^J}%
  \let\bslashmacro\bslash
  \let\spacemacro\space
  \immediate\openout\ydocwrite=\ydocfname\relax
  \immediate\write\ydocwrite{\themacrocode}%
  \immediate\closeout\ydocwrite
  \let\input\@input
  \tcbinputlisting{breakable,listing only,docexample,listing file=\ydocfname}%
  \endgroup
}
\makeatother
%minted options={fontsize=\footnotesize},

\DisableCrossrefs
\makeindex
%\CodelineIndex
\RecordChanges
\begin{document}

\GetFileInfo{\jobname.dtx}
\DoNotIndex{\documentclass,\newcommand,\newenvironment}

\title{\textsf{dcchowto} --- A LaTeX class for DCC How-to Guides}
\author{Alex Ball}
\date{Class \fileversion\ --- \filedate}

\maketitle

\changes{v3.00}{2014/10/03}{New version based on transforming Markdown.}

\begin{abstract}
To contact the author about this package, please visit the GitHub
page where the code is hosted: \url{https://github.com/alex-ball/dcchowto}.
\end{abstract}

\section{Usage}

\subsection{Loading the class}

The class is loaded in the usual way:

\begin{tcolorbox}[docexample,fontupper=\small]
\cs{documentclass}\oarg{options}\brackets{dcchowto}
\end{tcolorbox}

The following options are recognised:

\begin{docKey}{onecolumn}{}{default \val{true}, initially \val{false}}
  The default layout is to have two columns of text and footnotes.
  With this option,
  the layout changes to use a single column of text instead,
  with a wide right-hand margin for side notes.
  For historical reasons
  there is a matching \docAuxKey{twocolumn} option with the opposite effect.
\end{docKey}

\begin{docKey}{press}{}{default \val{true}, initially \val{false}}
  The default is to lay the PDF out just like the hard copy.
  With this option, extra margins, trim marks and colour bleeds
  are added round the edges for professional printing.
\end{docKey}

\begin{docKey}{numbers}{}{default \val{true}, initially \val{true}}
  The default is to have page numbers on most pages.
  By setting this option false, they can be removed.
  The logic is this way round for historical reasons.
\end{docKey}

\begin{docKey}{mark}{=\meta{mark type}}{default \val{draft}}
  This marks the PDF as not being ready for public release.
  The two possible values for \meta{mark type} are
  \docValue{draft} for a working draft,
  \docValue{rc} for a release candidate,
  and
  \docValue{rev} for a revision.
\end{docKey}

\begin{docKey}{morefloats}{=\meta{number}}{no default, initially \val{0}}
  Increases the number of boxes available for floating material by the given
  \meta{number}. This may help avoid unprocessed-float errors when using
  one-column mode.
\end{docKey}

\subsection{Preamble}

The class loads \pkg{biblatex} to handle references.
Please ensure any database file you write uses the \pkg{biblatex} model,
and load it like this:

\begin{tcolorbox}[docexample,fontupper=\small]
\cs{bibliography}{\marg{filename}}
\end{tcolorbox}

Fill out \cs{title} and \cs{date} as normal.
Please repeat the \cs{author} command for each author,
rather than linking names together with \cs{and}.
You can add the affiliation of the author in parentheses,
as follows:

\begin{dispListing}
\author{Alex Ball (DCC)}
\author{Monica Duke (DCC)}
\end{dispListing}

For joint branding two further commands are defined:

\begin{docCommand}{partner}{\marg{text}}
  The \meta{text} should be the name of an organisation which has
  contributed to the guide.
  The command can and should be repeated if several organisations should
  be mentioned.
\end{docCommand}

\begin{docCommand}{partnerlogo}{\marg{image command}}
  This command puts the logo of the partner organisation on the cover.
  The \meta{image command} should be something like
  \cs{includegraphics}\marg{filename}.
  This allows you the freedom to shift the image around a bit using boxes,
  or draw the logo instead using \pkg{pstricks} or \pkg{pgf}.
  Again, you should repeat this command as needed.
\end{docCommand}

\subsection{Body}

\begin{docCommand}{maketitle}{\oarg{abstract}}
  The familiar \cs{maketitle} command has been commandeered to lay out the cover
  page and introductory paragraph, the text for which should be provided as the
  \meta{abstract}. The argument is optional for compatibility reasons.
\end{docCommand}

\begin{docEnvironment}{framed}{\oarg{tcolorbox options}}
  Use this to set off some content in a red box.
  Unlike the usual version the box will not, by default, break over columns or
  pages; this is to avoid trouble with footnotes. If this does not concern you,
  you can make it breakable using the \key{breakable} option.
\end{docEnvironment}

\begin{docEnvironment}{shaded}{\oarg{tcolorbox options}}
  Use this to set off some content using a peachy background.
  It is intended for use with figures.
  The same remarks about breaking apply as for \env{framed}.
\end{docEnvironment}

\begin{docEnvironment}{snugshade}{\oarg{tcolorbox options}}
  A version of \env{shaded} more suited for use with marginal material.
  (For one thing, it doesn't narrow the text width.)
\end{docEnvironment}

\begin{docEnvironment}{marginbox}{}
  Use this to insert some boxed content into the margin. Works
  well wrapped around the above boxout environments in
  one-column mode.
\end{docEnvironment}

\StopEventually{^^A
  \PrintChanges
  \printindex
}

\section{Implementation}

\DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
% \iffalse
%<*class>
% \fi
%
% \subsection{Options}
%
% We use \pkg{xkeyval} for setting options.
%
%    \begin{macrocode}
\RequirePackage{xkeyval}
%    \end{macrocode}
%
% \begin{optionkey}{onecolumn}
%   \begin{optionkey}{twocolumn}
% The \key{onecolumn} and \key{twocolumn} options both toggle the same Boolean,
% but (of course) in different directions. The \key{twocolumn} is set as the
% default.
% \changes{v3.00}{2014/10/03}{Two-column mode now the default.}
%
%    \begin{macrocode}
\define@boolkey{dcchowto}{twocolumn}[true]{}
\define@boolkey{dcchowto}{onecolumn}[true]{%
  \ifKV@dcchowto@onecolumn
    \setkeys{dcchowto}{twocolumn=false}
  \else
    \setkeys{dcchowto}{twocolumn=true}
  \fi
}
\setkeys{dcchowto}{twocolumn=true}
%    \end{macrocode}
%   \end{optionkey}
% \end{optionkey}
%
% \begin{optionkey}{press}
%   \begin{optionkey}{numbers}
% The \key{press} and \key{numbers} options are simple Booleans. The latter is
% set true by default.
% \changes{v3.00}{2014/10/03}{Page numbers now displayed by default.}
%
%    \begin{macrocode}
\define@boolkey{dcchowto}{press}[true]{%
  \ifKV@dcchowto@press
    \PassOptionsToClass{showtrims}{memoir}
  \fi
}
\define@boolkey{dcchowto}{numbers}[true]{}
\setkeys{dcchowto}{numbers=true}
%    \end{macrocode}
%   \end{optionkey}
% \end{optionkey}
%
% \begin{optionkey}{mark}
%   \begin{optionvalue}{draft}
%     \begin{optionvalue}{rc}
% The \key{mark} option is defined as a choice key, where the three acceptable
% values are \val{draft}, \val{rc} and \val{rev}. The first two set
% \cs{dcchowto@mark} to a sensible value; this is used in the headers and on the
% front cover. All three define the similar \cs{dcchowto@rev}, used at the end
% of the \LaTeX\ template for version control.
%
%    \begin{macrocode}
\define@choicekey*{dcchowto}{mark}[%
  \dcchowto@mark@input\dcchowto@mark@index
]{draft,rc,rev}[draft]{%
  \ifcase\dcchowto@mark@index\relax
    \def\dcchowto@mark{Draft}
    \def\dcchowto@rev{Draft}
  \or
    \def\dcchowto@mark{Release Candidate}
    \def\dcchowto@rev{Release Candidate}
  \or
    \def\dcchowto@rev{Revised}
  \fi
}
%    \end{macrocode}
%     \end{optionvalue}
%   \end{optionvalue}
% \end{optionkey}
%
% \begin{optionkey}{morefloats}
% The \key{morefloats} option takes a number and passes it to the
% \pkg{morefloats} package to allow more floats to be processed at once.
%
%    \begin{macrocode}
\DeclareOptionX{morefloats}[0]{%
  \PassOptionsToPackage{\CurrentOption}{morefloats}%
}
%    \end{macrocode}
% \end{optionkey}
%
% Now we process the options given by the user, and put a note in the log to say
% what mode we are using. The one-column mode uses the one-sided mode of
% \pkg{memoir} to stop the margin flipping from side to side.
%
%    \begin{macrocode}
\ProcessOptionsX<dcchowto>
\ifKV@dcchowto@twocolumn
  \ClassInfo{dcchowto}{Processing in two-column mode}%
\else
  \ClassInfo{dcchowto}{Processing in one-column mode}%
  \PassOptionsToClass{oneside}{memoir}%
\fi  
%    \end{macrocode}
%
% \subsection{Fonts}
%
% The class uses Gill Sans if available. Specifically, it looks for a version of
% \texttt{gillsans.sty} generated by \pkg{fontinst} from the Humanist 521 fonts
% that were available from Corel (including the light series).
% As creating and installing the requisite files is non-trivial (and non-free)
% we provide a fallback to \pkg{lato} or, if such fancy fonts are not available,
% the omnipresent Helvetica from \pkg{psnfss}. Note that Helvetica does not have
% a commonly available light series. Both fallback options are scaled so they
% give vaguely similar results to Gill Sans.
%
% TODO: add option to load Gill Sans using \pkg{fontspec}.
%
%    \begin{macrocode}
\IfFileExists{gillsans.sty}{%
  \newcommand*{\memfontfamily}{bgs}
  \newcommand*{\memfontenc}{T1}
  \newcommand*{\memfontpack}{gillsans}
  \RequirePackage{arevmath}
  \SetSymbolFont{operators}{normal}{T1}{bgs}{m}{n}
  \SetSymbolFont{letters}{normal}{T1}{bgs}{m}{it}
  \RequirePackage[scaled=0.824]{beramono}
}{%
  \IfFileExists{lato.sty}{%
    \PassOptionsToPackage{defaultsans}{lato}
    \newcommand*{\memfontfamily}{fla}
    \newcommand*{\memfontenc}{T1}
    \newcommand*{\memfontpack}{lato}
    \def\lato@scale{s*[0.9]}
    \def\lightseries{\fontseries{l}\selectfont}
    \SetSymbolFont{operators}{normal}{T1}{fla}{m}{n}
    \SetSymbolFont{letters}{normal}{T1}{fla}{m}{it}
    \RequirePackage[scaled=0.824]{beramono}
  }{%
    \newcommand*{\memfontfamily}{phv}
    \newcommand*{\memfontenc}{T1}
    \newcommand*{\memfontpack}{helvet}
    \def\Hv@scale{0.88}
    \SetSymbolFont{operators}{normal}{T1}{phv}{m}{n}
    \SetSymbolFont{letters}{normal}{T1}{phv}{m}{it}
  }%
}
\renewcommand{\familydefault}{\sfdefault}
%    \end{macrocode}
%
% \subsection{Other dependencies}
%
% To save a lot of hard work, this class loads and configures \pkg{memoir}.
% (This is why we loaded fonts above rather than below; it is one of
% \pkg{memoir}'s quirks that it is more efficient this way round.)
%
%    \begin{macrocode}
\LoadClass[a4paper,11pt,extrafontsizes]{memoir}[2008/05/26]
%    \end{macrocode}
%
% We load some packages that are useful behind the scenes:
%
% \begin{itemize}
%   \item
%   \pkg{etoolbox} is used for patching various commands.
%   \item
%   \pkg{xpatch} is used for patching \pkg{biblatex}. (It also loads
%   \pkg{etoolbox} but for transparency's sake we don't rely on that!)
%   \item
%   \pkg{xstring} is used for manipulating author names.
%   \item
%   \pkg{ifthen} is used for logical flow.
%   \item
%   \pkg{calc} is indispensible for manipulating lengths.
% \end{itemize}
%
%    \begin{macrocode}
\RequirePackage{etoolbox,xpatch,xstring,ifthen,calc}
%    \end{macrocode}
%
% We use British English via \pkg{babel}, UTF-8 input, and load \pkg{csquotes}
% to get better handling of quotation marks, especially in the references.
%
% Note that \pkg{luainputenc} is useful where traditional \TeX\ fonts are used
% (in whatever engine) but should not be used if OpenType fonts have been loaded
% with \pkg{fontspec}.
%
%    \begin{macrocode}
\RequirePackage[british]{babel}
\@ifpackageloaded{fontspec}{}{%
  \RequirePackage[utf8]{luainputenc}%
}
\RequirePackage{csquotes}
%    \end{macrocode}
%
% We load some additional packages that help with specific formatting issues.
%
% \begin{itemize}
%   \item
%   In two-column mode,
%   \pkg{balance} provides the \cs{balance} command, which can be used in the
%   first column of the last page to make the columns of equal length.
%   \item
%   In two-column mode,
%   \pkg{dblfloatfix} ensures floats are processed in the right order.
%   \item
%   In one-column mode,
%   \pkg{morefloats} ensures there are enough slots for all the side notes to be
%   processed, as well as the regular floats.
%   \item
%   In one-column mode,
%   \pkg{marginfix} helps to make sure the marginal material floats correctly.
%   \item
%   In one-column mode,
%   \pkg{multicol} is used to put the concluding material in two equal columns.
% \end{itemize}
%
%    \begin{macrocode}
\ifKV@dcchowto@twocolumn
  \RequirePackage{balance,dblfloatfix}
\else
  \RequirePackage{morefloats,marginfix}
  \RequirePackage{multicol}
  \setlength{\columnsep}{10mm}
\fi
%    \end{macrocode}
%
% For handling colour, we load \pkg{xcolor}.
% The DCC logo contains three shades of orange and two of blue.
% The How-to Guide design adds a maroon and a peach.
% The Jisc logo contains a further orange.
% 
%    \begin{macrocode}
\RequirePackage[svgnames]{xcolor}
\xdefinecolor{dccdarkorange}{RGB}{255,102,0}
\xdefinecolor{dccmidorange}{RGB}{255,153,0}
\xdefinecolor{dccpaleorange}{RGB}{255,204,0}
\xdefinecolor{dccblue}{RGB}{47,72,158}
\xdefinecolor{dccpaleblue}{RGB}{119,161,219}
\xdefinecolor{dccmaroon}{RGB}{157,22,27}
\xdefinecolor{dccpeach}{RGB}{255,236,217}
\xdefinecolor{jiscorange}{RGB}{232,94,18}
%    \end{macrocode}
%
% \begin{itemize}
%   \item
%   \pkg{microtype} is used for letterspacing and allowing pointy letters to
%   protrude slightly into the margin.
%   \item
%   We use \pkg{textcase} and \pkg{relsize} to provide special effects and
%   workarounds for block capitals and small capitals (see below). The setting
%   for \cs{RSsmallest} suppresses warnings from \pkg{relsize} about text
%   getting too small.
%   \item
%   \pkg{footnote} lets us use (normal) footnotes in places \LaTeX\ would
%   give us problems, such as lists, boxes and floats. (Note this needs to be
%   loaded after \pkg{xcolor}.)
%   \item
%   \pkg{enumitem} provides a more convenient interface for reformatting
%   lists than \pkg{memoir} provides.
% \end{itemize}
%
%    \begin{macrocode}
\RequirePackage
[tracking=smallcaps%
,letterspace=50%
,expansion=false%
,protrusion=basictext%
]{microtype}
\RequirePackage{textcase,relsize,footnote,enumitem}
\renewcommand{\RSsmallest}{5pt}
%    \end{macrocode}
%
% We will of course need to include graphics, hence we load \pkg{graphicx}.
% By default graphics are scaled to fill the available space while keeping
% their original aspect ratio.
% We also load TikZ (\pkg{pgf}) for drawing logos and the datagrid
% illustration, and \pkg{tcolorbox} for boxed material.
%
%    \begin{macrocode}
\RequirePackage{graphicx}
\setkeys{Gin}{width=\linewidth,totalheight=\textheight,keepaspectratio}
\RequirePackage{tikz}
\usetikzlibrary{fadings}
\RequirePackage{tcolorbox}
%    \end{macrocode}
%
% We load \pkg{hyperref} for all the good things it gives us. But we remove the
% visual indication of links because the borders look ugly on screen, and
% coloured text makes no sense on paper.
% 
%    \begin{macrocode}
\RequirePackage[pdfborder={0 0 0}]{hyperref}
%    \end{macrocode}
%
% \subsection{Metadata}
%
% We will use the \texttt{dcchowto@authors} counter to step through each author
% in turn, and \texttt{dcchowto@space} to step through the spaces in each name
% (in order to guess which parts are middle names).
%
%    \begin{macrocode}
\newcounter{dcchowto@authors}
\newcounter{dcchowto@space}
%    \end{macrocode}
%
% The information will be transformed for use in the following places:
%
% \begin{macro}{DCCHowtoAuthorAPA}
% \begin{itemize}
%   \item
%   \cs{dcchowto@author@display} will be used on the front cover.
%   It is initialised with a counter reset so we can append numeric tests.
%   \item
%   \cs{DCCHowtoAuthorAPA} will be used in the suggested citation
%   (hence the more user-friendly name).
%   It too is initialised with a counter reset so we can append numeric tests.
%   \item
%   \cs{dcchowto@author@pdf} will be used in the PDF metadata.
% \end{itemize}
%
%    \begin{macrocode}
\def\dcchowto@author@display{\setcounter{dcchowto@authors}{0}}
\def\DCCHowtoAuthorAPA{\setcounter{dcchowto@authors}{0}}
\def\dcchowto@author@pdf{}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{author}
% Now we come to redefine \cs{author}.
% First, we check to see if an affiliation has been given in parentheses.
% If so, we put the name part in \cs{dcchowto@author@name} and the contents of
% the parentheses in \cs{dcchowto@author@affil}.
% Otherwise we put the whole argument in \cs{dcchowto@author@name} and let
% \cs{dcchowto@author@affil} remain undefined.
%
%    \begin{macrocode}
\renewcommand{\author}[1]{%
  \StrBefore{#1}{ (}[\dcchowto@author@name]
  \ifdefempty{\dcchowto@author@name}{%
    \def\dcchowto@author@name{#1}%
    \let\dcchowto@author@affil\undefined
  }{%
    \StrBetween{#1}{(}{)}[\dcchowto@author@affil]%
  }
%    \end{macrocode}
%
% In \cs{dcchowto@author@display}, author names are joined with commas except
% the last time, where they are joined with ‘and’. (We keep the code simple by
% not having an Oxford comma where there are three or more authors.)
% Similarly, in \cs{DCCHowtoAuthorAPA} they are joined with commas except the
% last time, when they are joined with ‘, \&’.
% We achieve this with joining macros of the form \cs{dcchowto@authorii@and} and
% \cs{dcchowto@authorii@et} respectively. When \cs{author} is given a second or
% subsequent time, we redefine the previous joining macro to be a comma, and
% define a new one which is then inserted into the author display commands.
% Note that \cs{dcchowto@authori@and} and \cs{dcchowto@authori@et} are defined
% but never used.
%
% In \cs{dcchowto@author@pdf}, names are joined uniformly by commas so we can
% simply drop one in every time \cs{author} is called after the first.
%
% Amongst all this we step the \texttt{dcchowto@authors} counter in the preamble
% and the two author display macros.
%
%    \begin{macrocode}
  \ifnum\thedcchowto@authors>0
    \expandafter\def\csname
      dcchowto@author\roman{dcchowto@authors}@and\endcsname{, }
    \expandafter\def\csname
      dcchowto@author\roman{dcchowto@authors}@et\endcsname{, }
    \stepcounter{dcchowto@authors}
    \expandafter\def\csname
      dcchowto@author\roman{dcchowto@authors}@and\endcsname{ and }
    \expandafter\def\csname
      dcchowto@author\roman{dcchowto@authors}@et\endcsname{, \& }
    \appto\dcchowto@author@display{%
      \stepcounter{dcchowto@authors}%
      \csname dcchowto@author\roman{dcchowto@authors}@and\endcsname
    }
    \appto\DCCHowtoAuthorAPA{%
      \stepcounter{dcchowto@authors}%
      \csname dcchowto@author\roman{dcchowto@authors}@et\endcsname
    }
    \appto\dcchowto@author@pdf{, }
  \else
    \stepcounter{dcchowto@authors}
    \appto\dcchowto@author@display{%
      \stepcounter{dcchowto@authors}%
    }
    \appto\DCCHowtoAuthorAPA{%
      \stepcounter{dcchowto@authors}%
    }
  \fi
%    \end{macrocode}
%
% We add the full author name (and affiliation, if provided) to
% \cs{dcchowto@author@display}, along with code to make the names bolder than
% the affiliations (assuming the text will be set as light as possible).
%
%    \begin{macrocode}  
  \eappto\dcchowto@author@display{%
    \ifdef{\lightseries}{%
      \noexpand\textmd{\dcchowto@author@name}%
    }{%
      \noexpand\textbf{\dcchowto@author@name}%
    }%
  }
  \ifdef{\dcchowto@author@affil}{%
    \eappto\dcchowto@author@display{
      (\dcchowto@author@affil)%
    }%
  }{}
%    \end{macrocode}
%
% For the suggested citation, we need the name in the form of
% surname-comma-initials. We take a simplistic approach to this.
% We consider whatever follows the last space in the name to be the surname.
% We then take the first letter of the name as the first initial,
% and the first letter following each subsequent space (except the last) to be
% extra initials. Each element is added to \cs{DCCHowtoAuthorAPA} as it is
% identified.
%
%    \begin{macrocode}  
  \StrCount{\dcchowto@author@name}{ }[\dcchowto@spaces]
  \StrBehind[\dcchowto@spaces]{\dcchowto@author@name}{ }%
    [\dcchowto@author@surname]
  \eappto\DCCHowtoAuthorAPA{%
    \dcchowto@author@surname,%
  }
  \StrChar{\dcchowto@author@name}{1}[\dcchowto@author@init]
  \eappto\DCCHowtoAuthorAPA{
    \dcchowto@author@init.%
  }
  \setcounter{dcchowto@space}{1}
  \whileboolexpr{%
    test {\ifnumcomp{\thedcchowto@space}{<}{\dcchowto@spaces}}%
  }{%
    \StrPosition[\thedcchowto@space]{\dcchowto@author@name}{ }%
      [\dcchowto@initpos]
    \StrChar{\dcchowto@author@name}{\numexpr\dcchowto@initpos+1}%
      [\dcchowto@author@init]
    \eappto\DCCHowtoAuthorAPA{
      \dcchowto@author@init.%
    }
    \stepcounter{dcchowto@space}
  }
%    \end{macrocode}
%
% The last thing we do is add the name to \cs{dcchowto@author@pdf}, which seems
% trivially simple after all that.
%
%    \begin{macrocode}  
  \eappto\dcchowto@author@pdf{%
    \dcchowto@author@name
  }
}
%    \end{macrocode}
% \end{macro}
%
% We take a similar approach with \cs{partner}. We use a dedicated counter,
% \texttt{dcchowto@partners}, for stepping through the partners, and the list
% is stored in \cs{dcchowto@partners}, which begins with a counter reset.
%
%    \begin{macrocode}
\newcounter{dcchowto@partners}
\def\dcchowto@partners{\setcounter{dcchowto@partners}{0}}
%    \end{macrocode}
%
% \begin{macro}{partner}
% Partner names are joined with commas except the last, which is joined with
% ‘and’. Again, we implement this with a series of macros like
% \cs{dcchowto@partneri@and} where each time a partner is added with
% \cs{partner}, the previous macro is changed to a comma, and a new one added
% that expands to ‘and’.
% This time \cs{dcchowto@partneri@and} \emph{is} used because
% \cs{dcchowto@partners} is a list that is appended to a fixed first item
% (the DCC).
%
%    \begin{macrocode}
\newcommand{\partner}[1]{%
  \ifnum\thedcchowto@partners>0
    \expandafter\def\csname
      dcchowto@partner\roman{dcchowto@partners}@and\endcsname{, }
  \fi
  \stepcounter{dcchowto@partners}
  \expandafter\def\csname
    dcchowto@partner\roman{dcchowto@partners}@and\endcsname{ and }
  \appto\dcchowto@partners{%
    \stepcounter{dcchowto@partners}%
    \csname dcchowto@partner\roman{dcchowto@partners}@and\endcsname
  }
  \eappto\dcchowto@partners{#1}  
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{partnerlogo}
% Partner logos are appended to the (initially empty)
% \cs{dcchowto@partner@logos} macro with \cs{partnerlogo} and inserted between
% the DCC and Jisc logos, which makes things really easy.
% They are wrapped in a \cs{raisebox} to give them 24\,pt of top-padding.
%
%    \begin{macrocode}
\def\dcchowto@partner@logos{}
\newcommand{\partnerlogo}[1]{%
  \appto\dcchowto@partner@logos{%
    \raisebox{0pt}[\height+24pt][0pt]{#1}\quad
  }%
}
%    \end{macrocode}
% \end{macro}
%
% There are no changes to \cs{title} or \cs{date}, but we use \pkg{hyperref} to
% add title and author information to the PDF metadata.
%
%    \begin{macrocode}
\AtBeginDocument{%
  \hypersetup
  {pdfauthor=\dcchowto@author@pdf
  ,pdftitle=\thetitle
  }%
}
%    \end{macrocode}
%
% For displaying the revision date, we define \cs{theversion}.
%
%    \begin{macrocode}
\newcommand{\theversion}{%
  \ifundef{\dcchowto@rev}{%
    Published:
  }{%
    \dcchowto@rev:
  }%
  \ifundef{\thedate}{%
    \today
  }{%
    \thedate
  }%
}
%    \end{macrocode}
%
% For displaying a cautionary pre-publication message, we define
% \cs{versionmark}.
%
%    \begin{macrocode}
\newcommand{\versionmark}{%
  \ifundef{\dcchowto@mark}{%
    \relax
  }{%
    \textsmaller[2]{\allcaps{\dcchowto@mark: \today}}%
  }%
}
%    \end{macrocode}
%
% \subsection{DCC Logo}
%
% The code for drawing the DCC logo with TikZ largely stands alone (hence being
% much more sophisticated than we need) but we include it here for portability.
% We provide options for scaling the logo without changing the aspect ratio;
% this relies on two lengths:
%
% \begin{itemize}
%   \item
%   \cs{dccl@unit} is the actual scale factor used in the logo;
%   \item
%   \cs{dccl@unit@calc} is the scale factor calculated from the options.
% \end{itemize}
%
%    \begin{macrocode}
\newlength{\dccl@unit}
\newlength{\dccl@unit@calc}
%    \end{macrocode}
%
% The \key{height} option sets the maximum height for the logo.
% With \cs{dccl@unit} set to 1\,pt, the logo ends up 32.75\,pt high. So we
% calculate what \cs{dccl@unit} would need to be to achieve the target height.
% We store this in \cs{dccl@unit@calc} unless \cs{dccl@unit@calc} is a shorter
% (but non-zero) length.
%
%    \begin{macrocode}
\define@key{dccl}{height}{%
  \setlength{\@tempdima}{#1}%
  \setlength{\@tempdimb}{\@tempdima / \real{32.75}}%
  \ifthenelse{%
    \lengthtest{\dccl@unit@calc = 0pt}\OR
    \lengthtest{\@tempdimb < \dccl@unit@calc}%
  }{%
    \setlength{\dccl@unit@calc}{\@tempdimb}%
  }{}%
}
%    \end{macrocode}
%
% The \key{width} option sets the maximum width for the logo.
% With \cs{dccl@unit} set to 1\,pt, the logo ends up 149.891\,pt wide. So we
% calculate what \cs{dccl@unit} would need to be to achieve the target width.
% We store this in \cs{dccl@unit@calc} unless \cs{dccl@unit@calc} is a shorter
% (but non-zero) length.
%
%    \begin{macrocode}
\define@key{dccl}{width}{%
  \setlength{\@tempdima}{#1}%
  \setlength{\@tempdimb}{\@tempdima / \real{149.891}}%
  \ifthenelse{%
    \lengthtest{\dccl@unit@calc = 0pt}\OR
    \lengthtest{\@tempdimb < \dccl@unit@calc}%
  }{%
    \setlength{\dccl@unit@calc}{\@tempdimb}%
  }{}%
}
%    \end{macrocode}
%
% We also provide the option \key{scale} for unconditionally setting the scale
% to a given numeric factor, where 1 means \cs{dccl@unit} equals 1\,pt.
%
%    \begin{macrocode}
\define@key{dccl}{scale}{%
  \setlength{\@tempdima}{1pt}%
  \setlength{\dccl@unit@calc}{#1\@tempdima}%
}
%    \end{macrocode}
%
% In case the logo is put on a dark background, we provide the option
% \key{white} for writing the text portions in white. As a hidden feature, one
% can also specify a different colour for the text portions by writing
% \key{white}\texttt{=}\meta{colour name}.
%
%    \begin{macrocode}
\colorlet{letters}{dccblue}
\colorlet{pipes}{dccpaleblue}
\define@key{dccl}{white}[white]{\colorlet{letters}{#1}\colorlet{pipes}{#1}}
%    \end{macrocode}
%
% \begin{macro}{dcclogo}
% The logo itself is drawn with the \cs{dcclogo} command. The \pkg{xkeyval}
% options are read from the optional argument. There is no mandatory argument.
%
%    \begin{macrocode}
\newcommand{\dcclogo}[1][]{%
  \bgroup
%    \end{macrocode}
%
% First we reset \cs{dccl@unit@calc} to 0\,pt, then read in the user keys.
%
%    \begin{macrocode}
  \setkeys{dccl}{scale=0,#1}%
%    \end{macrocode}
%
% If \cs{dccl@unit@calc} has been set, we scale the logo accordingly. Otherwise
% we use the default scale of \cs{dccl@unit} = 1\,pt.
%
%    \begin{macrocode}
  \ifthenelse{\lengthtest{\dccl@unit@calc > 0pt}}{%
    \setlength{\dccl@unit}{\dccl@unit@calc}%
  }{%
    \setlength{\dccl@unit}{1pt}%
  }%
%    \end{macrocode}
%
% Now we come to draw the logo.
%
%    \begin{macrocode}
  \begin{tikzpicture}
  [ y=\dccl@unit
  , x=\dccl@unit
  , inner sep=0pt
  , outer sep=0pt
  , nonzero rule
  , line join=miter
  , miter limit=4.00
  , line cap=butt
  , line width=\dccl@unit
  , baseline=5.5040\dccl@unit
  ]
%    \end{macrocode}
%
% We start with the three coloured squares on the left.
%
%    \begin{macrocode}
  \foreach \x/\y/\c in
  { 0.5/15.5/dccdarkorange%
  , 5.625/10.25/dccmidorange%
  , 10.875/4.5/dccpaleorange%
  } {
    \draw[white,fill=\c]
    (\x,\y) rectangle ++(14.750,15.000);
  }
%    \end{macrocode}
%
% There are three pipes dividing the squares and letters.
%
%    \begin{macrocode}
  \foreach \x in { 37.125, 79.35, 119 } {
    \draw[pipes]
    (\x,32.250) -- ++(0,-31.750);
  }
%    \end{macrocode}
%
% Next, we construct the ‘D’, outline first then counter in the other direction.
%
%    \begin{macrocode}
  \fill[letters]
   (48.625, 5.504) --
  +( 9.016, 0.000) .. controls +(7.640,0.000) and +(0.000,-5.946) ..
  +(21.309,11.590) .. controls +(0.000,5.472) and +(8.555, 0.000) ..
  +( 8.980,23.180) --
  +( 0.000,23.180) --
  cycle
  ++(3.313,2.992)  --
  +( 0.000,17.195) --
  +( 5.124,17.195) .. controls +(6.485, 0.000) and +(0.000,4.656) ..
  +(14.562, 8.598) .. controls +(0.000,-2.856) and +(7.536,0.000) ..
  +( 5.296, 0.000) --
  cycle;
%    \end{macrocode}
%
% Last, we construct the two ‘C’ letters.
%
%    \begin{macrocode}
  \foreach \x in { 109.438, 149.152 } {
    \fill[letters]
     (     \x, 23.523) .. controls +(-2.856, 1.668) and +( 2.688, 0.000) ..
    +( -7.989,  2.415) .. controls +(-5.304, 0.000) and +( 0.000, 5.105) ..
    +(-17.235, -6.464) .. controls +( 0.000,-5.204) and +(-5.578, 0.000) ..
    +( -7.852,-15.273) .. controls +( 2.617, 0.000) and +(-2.617,-1.699) ..
    +(  0.238,-12.656) --
    +(  0.238,-16.293) .. controls +(-2.278,-1.191) and +( 3.641, 0.000) ..
    +( -8.161,-18.335) .. controls +(-8.703, 0.000) and +( 0.000,-4.863) ..
    +(-20.672, -6.769) .. controls +( 0.000, 7.074) and +(-7.379, 0.000) ..
    +( -7.954,  5.477) .. controls +( 2.379, 0.000) and +(-3.161, 1.328) ..
    +(  0.000,  3.571) --
    cycle;
  }
  \end{tikzpicture}%
  \egroup
}
%    \end{macrocode}
% \end{macro}
%
% \subsection{Jisc Logo}
%
% The code for drawing the Jisc logo is very similar to that for the DCC logo;
% it relies on two lengths:
%
% \begin{itemize}
%   \item
%   \cs{jscl@unit} is the actual scale factor used in the logo;
%   \item
%   \cs{jscl@unit@calc} is the scale factor calculated from the options.
% \end{itemize}
%
%    \begin{macrocode}
\newlength{\jscl@unit}
\newlength{\jscl@unit@calc}
%    \end{macrocode}
%
% The \key{height} option sets the maximum height for the logo.
% With \cs{jscl@unit} set to 1\,pt, the logo ends up 577\,pt high. So we
% calculate what \cs{jscl@unit} would need to be to achieve the target height.
% We store this in \cs{jscl@unit@calc} unless \cs{jscl@unit@calc} is a shorter
% (but non-zero) length.
%
%    \begin{macrocode}
\define@key{jscl}{height}{%
  \setlength{\@tempdima}{#1}%
  \setlength{\@tempdimb}{\@tempdima / \real{577}}%
  \ifthenelse{%
    \lengthtest{\jscl@unit@calc = 0pt}\OR
    \lengthtest{\@tempdimb < \jscl@unit@calc}%
  }{%
  \setlength{\jscl@unit@calc}{\@tempdimb}%
}{}%
}
%    \end{macrocode}
%
% The \key{width} option sets the maximum width for the logo.
% With \cs{jscl@unit} set to 1\,pt, the logo ends up 992\,pt wide. So we
% calculate what \cs{jscl@unit} would need to be to achieve the target width.
% We store this in \cs{jscl@unit@calc} unless \cs{jscl@unit@calc} is a shorter
% (but non-zero) length.
%
%    \begin{macrocode}
\define@key{jscl}{width}{%
  \setlength{\@tempdima}{#1}%
  \setlength{\@tempdimb}{\@tempdima / \real{992}}%
  \ifthenelse{%
    \lengthtest{\jscl@unit@calc = 0pt}\OR
    \lengthtest{\@tempdimb < \jscl@unit@calc}%
  }{%
  \setlength{\jscl@unit@calc}{\@tempdimb}%
}{}%
}
%    \end{macrocode}
%
% The option \key{xheight} unconditionally sets the height of the lowercase
% letters (237\,pt when \cs{jscl@unit} equals 1\,pt).
%
%    \begin{macrocode}
\define@key{jscl}{xheight}{%
  \setlength{\@tempdima}{#1}%
  \setlength{\jscl@unit@calc}{\@tempdima / \real{237}}%
}
%    \end{macrocode}
%
% We also provide the option \key{scale} for unconditionally setting the scale
% to a given numeric factor, where 1 means \cs{jscl@unit} equals 0.08\,pt.
%
%    \begin{macrocode}
\define@key{jscl}{scale}{%
  \setlength{\@tempdima}{0.08pt}%
  \setlength{\jscl@unit@calc}{#1\@tempdima}%
}
%    \end{macrocode}
%
% We provide the option \key{fg} for changing the colour of the writing from
% the default white, and \key{bg} for changing the color of the background from
% the default orange.
%
%    \begin{macrocode}
\colorlet{jiscfg}{white}
\define@key{jscl}{fg}[white]{\colorlet{jiscfg}{#1}}
\colorlet{jiscbg}{jiscorange}
\define@key{jscl}{bg}[jiscorange]{\colorlet{jiscbg}{#1}}
%    \end{macrocode}
%
% \begin{macro}{jisclogo}
% The logo itself is drawn with the \cs{dcclogo} command. The \pkg{xkeyval}
% options are read from the optional argument. There is no mandatory argument.
%
%    \begin{macrocode}
\newcommand{\jisclogo}[1][]{%
  \bgroup
%    \end{macrocode}
%
% First we reset \cs{jscl@unit@calc} to 0\,pt, then read in the user keys.
%
%    \begin{macrocode}
  \setkeys{jscl}{scale=0,#1}%
%    \end{macrocode}
%
% If \cs{jscl@unit@calc} has been set, we scale the logo accordingly. Otherwise
% we use the default scale of \cs{jscl@unit} = 0.08\,pt.
%
%    \begin{macrocode}
  \ifthenelse{\lengthtest{\jscl@unit@calc > 0pt}}{%
    \setlength{\jscl@unit}{\jscl@unit@calc}%
  }{%
  \setlength{\jscl@unit}{0.08pt}%
  }%
%    \end{macrocode}
%
% Now we come to draw the logo.
%
%    \begin{macrocode}
  \begin{tikzpicture}
  [ y=\jscl@unit
  , x=\jscl@unit
  , inner sep=0pt
  , outer sep=0pt
  , nonzero rule
  , line join=miter
  , miter limit=4.00
  , line cap=butt
  , line width=\jscl@unit
  , baseline
  ]
%    \end{macrocode}
%
% We start with the background rectangle.
% If the \key{press} option is in effect we extend it to the right so it
% bleeds into the trimmed area.
% TODO: use a command option instead of a class one, for portability.
%
%    \begin{macrocode}
  \ifKV@dcchowto@press
    \path[fill=jiscbg]
    (0.0000,-127.0000) rectangle (1105.0000,450.0000);
  \else
    \path[fill=jiscbg]
    (0.0000,-127.0000) rectangle (992.0000,450.0000);
  \fi
%    \end{macrocode}
%
% We construct the letter ‘J’.
%
%    \begin{macrocode}
  \path[fill=jiscfg]
  (249.0000,326.0000) --
  (313.1119,326.0000) --
  (312.7149,207.7500) .. controls (312.2813, 78.6170) and (312.5328, 84.3047) ..
  (306.3954, 64.8447) .. controls (294.4985, 27.1230) and (266.2558,  3.5746) ..
  (225.6865, -2.4493) .. controls (213.1150, -4.3160) and (195.7178, -4.3067) ..
  (183.6291, -2.4268) .. controls (159.7167,  1.2918) and (136.9468, 12.4482) ..
  (119.6555, 28.9180) .. controls (116.4410, 31.9797) and (113.3984, 35.2556) ..
  (112.8942, 36.1977) .. controls (112.1890, 37.5153) and (113.9762, 41.0934) ..
  (120.6399, 51.7053) .. controls (125.4043, 59.2924) and (129.8068, 66.0564) ..
  (130.4234, 66.7365) .. controls (131.2974, 67.7006) and (132.6411, 67.1777) ..
  (136.5222, 64.3633) .. controls (143.7988, 59.0866) and (160.4882, 51.3085) ..
  (169.5868, 48.9535) .. controls (180.8177, 46.0466) and (195.6063, 45.3941) ..
  (205.0000, 47.3909) .. controls (230.7871, 52.8725) and (245.0302, 72.1189) ..
  (248.0032,105.5000) .. controls (248.5658,111.8170) and (248.9865,161.0948) ..
  (248.9914,221.2500) --
  cycle;
%    \end{macrocode}
%
% We construct the letter ‘i’ from a rectangle and a circle.
%
%    \begin{macrocode}
  \path[fill=jiscfg]
  (353.0000,  0.0000) rectangle (408.0000,237.0000);
  \path[fill=jiscfg]
  (381.2126,309.8403) circle [radius=35.449];
%    \end{macrocode}
%
% We construct the letter ‘s’.
%
%    \begin{macrocode}
  \path[fill=jiscfg]
  (440.1187, 28.0513) --
  (447.0463, 42.2366) .. controls (450.8565, 50.0385) and (454.0989, 56.7966) ..
  (454.2516, 57.2547) .. controls (454.4042, 57.7127) and (458.0012, 56.4832) ..
  (462.2448, 54.5226) .. controls (473.1512, 49.4835) and (488.8870, 44.4157) ..
  (500.0000, 42.3632) .. controls (514.1661, 39.7468) and (546.3985, 39.7720) ..
  (554.0000, 42.4053) .. controls (560.0615, 44.5052) and (565.5775, 47.7079) ..
  (568.2119, 50.6569) .. controls (573.0699, 56.0951) and (574.4291, 67.2570) ..
  (571.1203, 74.5413) .. controls (566.7703, 84.1180) and (557.7903, 88.3864) ..
  (520.7455, 98.4858) .. controls (494.2066,105.7211) and (480.0614,111.5792) ..
  (467.3391,120.6037) .. controls (455.6162,128.9192) and (448.0861,140.9576) ..
  (445.4888,155.5356) .. controls (437.4294,200.7705) and (464.2665,233.7047) ..
  (514.2985,239.9782) .. controls (541.5362,243.3935) and (575.5572,237.2823) ..
  (603.5000,223.9548) .. controls (616.6693,217.6737) and (616.0805,219.8692) ..
  (609.5330,201.4598) .. controls (606.4182,192.7019) and (603.7137,185.3803) ..
  (603.5229,185.1896) .. controls (603.3322,184.9989) and (598.2804,186.4255) ..
  (592.2966,188.3600) .. controls (564.4793,197.3527) and (529.6963,200.4562) ..
  (514.0373,195.3427) .. controls (499.1279,190.4739) and (493.3321,174.2795) ..
  (502.7630,163.8406) .. controls (508.8775,157.0725) and (518.5318,153.1694) ..
  (552.8558,143.5889) .. controls (599.9824,130.4350) and (619.8710,115.2383) ..
  (625.6073, 88.0000) .. controls (628.0530, 76.3871) and (627.0861, 56.0567) ..
  (623.5723, 45.2081) .. controls (615.6321, 20.6939) and (594.5143,  4.6643) ..
  (562.0000, -1.5284) .. controls (553.7835, -3.0934) and (523.8438, -4.3438) ..
  (517.5000, -3.3869) .. controls (505.2806, -1.5438) and (491.2387,  1.6145) ..
  (482.4194,  4.5035) .. controls (469.1445,  8.8521) and (451.9878, 17.6320) ..
  (445.3093, 23.4947) --
  cycle;
%    \end{macrocode}
%
% Last, we construct the letter ‘c’.
%
%    \begin{macrocode}
  \path[fill=jiscfg]
  (853.9653, 37.0007) --
  (847.2419, 29.8736) .. controls (826.3141,  7.6890) and (798.1383, -4.2353) ..
  (767.5000, -3.8740) .. controls (762.0000, -3.8091) and (754.8000, -3.3670) ..
  (751.5000, -2.8915) .. controls (729.4392,  0.2875) and (707.5565, 10.8806) ..
  (691.4441, 26.1807) .. controls (668.3241, 48.1350) and (656.0158, 76.8767) ..
  (654.3342,112.8379) .. controls (652.4914,152.2464) and (664.6301,186.3102) ..
  (688.9579,210.0000) .. controls (721.0348,241.2357) and (770.8320,249.7030) ..
  (812.5000,231.0066) .. controls (825.9913,224.9531) and (849.2337,207.5374) ..
  (852.8573,200.7667) .. controls (854.1323,198.3842) and (853.7215,197.5310) ..
  (845.0841,184.6256) .. controls (840.0684,177.1315) and (835.7173,171.0000) ..
  (835.4149,171.0000) .. controls (835.1125,171.0000) and (832.4119,172.9984) ..
  (829.4136,175.4408) .. controls (795.7998,202.8224) and (755.2760,205.2053) ..
  (729.9256,181.2910) .. controls (714.1790,166.4365) and (707.2506,145.8544) ..
  (708.2835,117.0000) .. controls (709.7641, 75.6430) and (728.5721, 48.5711) ..
  (760.8064, 41.3997) .. controls (781.6398, 36.7647) and (810.7230, 44.6234) ..
  (829.8877, 60.0665) .. controls (833.3535, 62.8593) and (836.2947, 64.9993) ..
  (836.4237, 64.8221) .. controls (836.5528, 64.6450) and (840.5524, 58.3127) ..
  (845.3118, 50.7504) --
  cycle;
  \end{tikzpicture}%
  \egroup
}
%    \end{macrocode}
% \end{macro}
%
% \subsection{Datagrid illustration}
%
% \begin{macro}{datagrid}
% To solve the problem of empty-looking margins (without resorting to lots of
% images, for which there is a cost implication), \cs{datagrid} provides a
% random pattern of ones and zeroes. The optional argument is a target height;
% the default behaviour is to generate a square.
%
%    \begin{macrocode}
\newcommand{\datagrid}[1][\hsize]{%
  \bgroup\centerfloat
  \begin{tikzpicture}[x=1em,y=1em]
  %    \end{macrocode}
  %
  % The grid will have \cs{maxwid} columns and \cs{maxhgt} rows, spaced so their
  % centres are 1em apart. To prevent errors below, we ensure both numbers are
  % greater than or equal to 3. For later convenience, we also calculate
  % \cs{smaxwid} $=$ \cs{maxwid} $-$ 1 and \cs{smaxhgt} $=$ \cs{maxhgt} $-$ 1.
  %
  %    \begin{macrocode}
  \pgfmathparse{floor(\hsize / 1em)}\edef\maxwid{\pgfmathresult}
  \pgfmathparse{(\maxwid < 3) ? 3 : \maxwid}\edef\maxwid{\pgfmathresult}
  \pgfmathqparse{\maxwid pt - 1pt}\edef\smaxwid{\pgfmathresult}
  \pgfmathparse{floor(#1 / 1em)}\edef\maxhgt{\pgfmathresult}
  \pgfmathparse{(\maxhgt < 3) ? 3 : \maxhgt}\edef\maxhgt{\pgfmathresult}
  \pgfmathqparse{\maxhgt pt - 1pt}\edef\smaxhgt{\pgfmathresult}
  %    \end{macrocode}
  %
  % Each cell contains either ‘1’ or ‘0’, printed in a colour between 100\% and
  % 33\% dccblue inclusive (randomly assigned).
  %
  % We start with the corner cells, which fade away to the outer corner.
  %
  %    \begin{macrocode}
  \pgfmathrandom{33,100}
  \node[dccblue!\pgfmathresult,scope fading=south,fading angle=-45]
  at (1,1) {\pgfmathrandom{0,1}\pgfmathresult};
  \pgfmathrandom{33,100}
  \node[dccblue!\pgfmathresult,scope fading=south,fading angle=45]
  at (\maxwid,1) {\pgfmathrandom{0,1}\pgfmathresult};
  \pgfmathrandom{33,100}
  \node[dccblue!\pgfmathresult,scope fading=north,fading angle=45]
  at (1,\maxhgt) {\pgfmathrandom{0,1}\pgfmathresult};
  \pgfmathrandom{33,100}
  \node[dccblue!\pgfmathresult,scope fading=north,fading angle=-45]
  at (\maxwid,\maxhgt) {\pgfmathrandom{0,1}\pgfmathresult};
  %    \end{macrocode}
  %
  % The remaining cells in the top and bottom rows fade away to the top and bottom
  % respectively.
  %
  %    \begin{macrocode}
  \foreach \x in {2,...,\smaxwid}
  {
    \pgfmathrandom{33,100}
    \node[dccblue!\pgfmathresult,scope fading=north]
    at (\x,\maxhgt) {\pgfmathrandom{0,1}\pgfmathresult};
    \pgfmathrandom{33,100}
    \node[dccblue!\pgfmathresult,scope fading=south]
    at (\x,1) {\pgfmathrandom{0,1}\pgfmathresult};
  }
  %    \end{macrocode}
  %
  % The remaining cells in the leftmost and rightmost columns fade away to the
  % left and right respectively.
  %
  %    \begin{macrocode}
  \foreach \y in {2,...,\smaxhgt}
  {
    \pgfmathrandom{33,100}
    \node[dccblue!\pgfmathresult,scope fading=west]
    at (1,\y) {\pgfmathrandom{0,1}\pgfmathresult};
    \pgfmathrandom{33,100}
    \node[dccblue!\pgfmathresult,scope fading=east]
    at (\maxwid,\y) {\pgfmathrandom{0,1}\pgfmathresult};
  }
  %    \end{macrocode}
  %
  % All other cells are printed normally.
  %
  %    \begin{macrocode}
  \foreach \x in {2,...,\smaxwid}
  {
    \foreach \y in {2,...,\smaxhgt}
    {
      \pgfmathrandom{33,100}
      \node[dccblue!\pgfmathresult]
      at (\x,\y) {\pgfmathrandom{0,1}\pgfmathresult};
    }
  }
  \end{tikzpicture}
  \par\egroup
}
%    \end{macrocode}
% \end{macro}
%
% \subsection{Page layout}
%
% The press option lays the content out on oversize stock, making it easier
% to print colours out to the edges (by overshooting and trimming off the
% excess).
%
%    \begin{macrocode}
\ifKV@dcchowto@press
  \setstocksize{317.817mm}{230.817mm}
  \settrimmedsize{297mm}{210mm}{*}
  \settrims{10.4085mm}{10.4085mm}
  \quarkmarks
\fi
%    \end{macrocode}
%
% The title page has 25\,mm margins left and right, and 64\,pt margins top
% and bottom. The top margin divides into 28\,pt header drop, 15\,pt header
% height and 21\,pt header separation from the textblock.
%
%    \begin{macrocode}
\setlrmarginsandblock{25mm}{*}{1}
\setulmarginsandblock{64pt}{*}{1}
\setheadfoot{15pt}{28pt}
\setheaderspaces{*}{*}{0.75}
\checkandfixthelayout
%    \end{macrocode}
%
% Subsequent page geometry is set by \cs{maketitle}.
%
% As a general rule, we would like the content to stretch to fill the page,
% and for text to be ragged right but not \emph{too} ragged.
%
%    \begin{macrocode}
\flushbottom
\raggedyright
%    \end{macrocode}
%
% \subsection{General typography}
%
% \begin{macro}{allcaps}
%   \begin{macro}{smallcaps}
% Small capitals are great, but sometimes you don't want to mix them with full
% capitals. We provide two new commands to help: \cs{smallcaps} acts like
% \cs{textsc} but also shrinks full capitals, while \cs{allcaps} provides a kind
% of simulation of \cs{smallcaps} using uniformly full capitals.
%
%    \begin{macrocode}
\newcommand{\allcaps}[1]{\MakeTextUppercase{\textls[100]{#1}}}
\newcommand{\smallcaps}[1]{\MakeTextLowercase{\textsc{#1}}}
%    \end{macrocode}
%   \end{macro}
% \end{macro}
%
% \begin{macro}{oldstylenums}
% None of the fonts loaded by this class have true old style numerals.
% We therefore fake them by scaling down lining figures to about the same height
% as the (possibly also fake) small capitals.
%
%    \begin{macrocode}
\renewcommand*{\oldstylenums}[1]{\textsmaller[2]{#1}}
%    \end{macrocode}
% \end{macro}
%
% We redefine \cs{today} to give a British date with what the \pkg{isodate}
% package calls a ‘clean look’. The bare redefinition affects the body of the
% document, while the one \cs{AtBeginDocument} affects the header.
%
%    \begin{macrocode}
\renewcommand*{\today}{%
  \number\day\space
  \ifcase\month
    \or January\or February\or March\or April\or May\or June \or July%
    \or August\or September\or October\or November\or December%
  \fi\space
  \number\year%
}%
\AtBeginDocument{%
  \renewcommand*{\today}{%
    \number\day\space
    \ifcase\month
      \or January\or February\or March\or April\or May\or June \or July%
      \or August\or September\or October\or November\or December%
    \fi\space
    \number\year%
  }%
}
%    \end{macrocode}
%
% The \pkg{biblatex-apa} package helpfully switches URLs to use the roman font.
% We restore the default monospace style here.
%
%    \begin{macrocode}
\AtBeginDocument{%
  \urlstyle{tt}%
}
%    \end{macrocode}
%
% \subsection{Headers and footers}
%
% The cover page has a ‘tab’ top left. we ensure that the text box it
% encapsulates is exactly wide enough to accommodate the default text,
% by measuring the same and saving the length as \cs{TitleTabWidth}.
%
%    \begin{macrocode}
\newlength\TitleTabWidth
\settowidth{\TitleTabWidth}{%
  \fontsize{16pt}{20pt}\ifdef{\lightseries}{\lightseries}{\mdseries}%
  A Digital Curation Centre `working level' guide%
}
%    \end{macrocode}
%
% The \pkg{footnote} package, as part of its note-spewing routine, kills
% some horizontal-mode commands like \cs{rule}. In certain circumstances
% this redefinition can leak into the footer. To prevent this causing problems
% we save our own copy of \cs{rule} and use that instead.
%
%    \begin{macrocode}
\let\dcchowto@rule\rule
%    \end{macrocode}
%
% The plain (default) header is empty apart from the optional draft markings.
%
%    \begin{macrocode}
\ifdef{\dcchowto@mark}{%
  \makeevenhead{plain}{}{\versionmark}{}
  \makeoddhead{plain}{}{\versionmark}{}
}{}
%    \end{macrocode}
%
% The plain (default) footer is a maroon band that may or may not include the
% page number. Two-column mode uses both odd and even sides. One-column mode
% only uses odd sides, so we need to do some extra work to make the numbers swap
% sides. Note that this code is laid out for maintainability, not runtime
% efficiency!
%
%    \begin{macrocode}
\makeoddfoot{plain}{%
  \makebox[0pt][l]{%
    \makebox[\paperwidth - 30mm][c]{%
      \raisebox{-44.4pt}[0pt][0pt]{%
        \color{dccmaroon}\dcchowto@rule{\paperwidth + 18pt}{41pt}%
      }%
    }%
  }%
  \ifKV@dcchowto@numbers
    \ifKV@dcchowto@twocolumn
      \makebox[0pt][l]{%
        \makebox[\paperwidth - 30mm][r]{%
          \raisebox{-1.5\onelineskip}{%
            \textcolor{white}{\textbf{\thepage}}%
          }%
        }%
      }%
    \else
      \ifodd
        \count\z@
        \makebox[0pt][l]{%
          \makebox[\paperwidth - 30mm][r]{%
            \raisebox{-1.5\onelineskip}{%
              \textcolor{white}{\textbf{\thepage}}%
            }%
          }%
        }%
      \else
        \raisebox{-1.5\onelineskip}{%
          \textcolor{white}{\textbf{\thepage}}%
        }%
      \fi
    \fi
  \fi
}{}{}
\makeevenfoot{plain}{%
  \makebox[0pt][l]{%
    \makebox[\paperwidth - 30mm][c]{%
      \raisebox{-44.4pt}[0pt][0pt]{%
        \color{dccmaroon}\dcchowto@rule{\paperwidth + 18pt}{41pt}%
      }%
    }%
  }%
  \ifKV@dcchowto@numbers
    \raisebox{-1.5\onelineskip}{%
      \textcolor{white}{\textbf{\thepage}}%
    }%
  \fi
}{}{}
\pagestyle{plain}
%    \end{macrocode}
%
% The title page header supplies the coloured tab (though the text within it is
% actually part of the page contents) in the left-hand slot and the procession
% of organisational logos in the right-hand slot. We only supply the odd side as
% we only expect to use it on page 1.
%
% The title tab is \cs{TitleTabWidth} wide plus 22\,pt padding on each side.
%
%    \begin{macrocode}
\makepagestyle{title}
\makeoddhead{title}{%
  \makebox[\TitleTabWidth][c]{%
    \raisebox{-21pt - 2\baselineskip - 6pt - 22pt}[0pt][0pt]{%
      \tikz{%
        \fill[dccmaroon]
        (0,0) --
        ++(0pt,-104pt) arc(180:270:22pt) --
        ++(\TitleTabWidth,0pt) arc (270:360:22pt) --
        ++(0pt,104pt) --
        cycle;
      }%
    }%
  }%
}{}{%
%    \end{macrocode}
%
% The box juggling here is to give the DCC logo approximately equal separation
% from the title tab and the paper’s top edge and right-hand edges.
% (It works out as 12\,mm on the right and 34\,pt above.)
%
%    \begin{macrocode}
  \makebox[39mm][l]{%
    \raisebox{9pt-\height}[0pt][0pt]{%
      \begin{minipage}{52mm}
        \raggedleft
        \dcclogo[width=52mm]\quad
        \dcchowto@partner@logos
        \raisebox{0pt}[\height+24pt][0pt]{%
          \makebox[16mm][l]{%
            \jisclogo[width=28mm]%
          }%
        }%
      \end{minipage}
      %
    }%
  }%
}
%    \end{macrocode}
%
% The title page footer is a simple maroon band, slightly thicker than the one
% used on plain pages.
%
%    \begin{macrocode}
\makeoddfoot{title}{}{%
  \makebox[0pt][c]{%
    \raisebox{-44.4pt}[0pt][0pt]{%
      \color{dccmaroon}\dcchowto@rule{\paperwidth + 18pt}{57pt}%
    }%
  }%
}{}
%    \end{macrocode}
%
% \begin{macro}{lastheadheight}
% We provide a \texttt{last} page style in case the last page is formatted like
% a back cover. It is configurable, inasmuch as the maroon band that forms the
% header can be given an arbitrary depth with \cs{lastheadheight}. The default
% is 200\,pt.
%
%    \begin{macrocode}
\makepagestyle{last}
\makeheadposition{last}{flushright}{flushleft}{flushright}{flushleft}
\newlength{\LastHeadHeight}
\newcommand*{\lastheadheight}[1]{\setlength{\LastHeadHeight}{#1}}
\lastheadheight{200pt}
%    \end{macrocode}
% \end{macro}
%
% As previously mentioned, the last page header is a big maroon band.
%
%    \begin{macrocode}
\makeevenhead{last}{%
  \rlap{\makebox[180mm][c]{%
    \raisebox{29.4pt - \LastHeadHeight}[0pt][0pt]{%
      \color{dccmaroon}\dcchowto@rule{\paperwidth + 18pt}{\LastHeadHeight + 9pt}%
    }%
  }}%
}{}{}
\makeoddhead{last}{%
  \rlap{\makebox[180mm][c]{%
    \raisebox{29.4pt - \LastHeadHeight}[0pt][0pt]{%
      \color{dccmaroon}\dcchowto@rule{\paperwidth + 18pt}{\LastHeadHeight + 9pt}%
    }%
  }}%
}{}{}
%    \end{macrocode}
%
% The last page footer mimics the plain page style header; that is, it is empty
% apart from the optional draft markings.
%
%    \begin{macrocode}
\ifdef{\dcchowto@mark}{%
  \makeevenfoot{last}{\rlap{\makebox[180mm][c]{\versionmark}}}{}{}
  \makeoddfoot{last}{\rlap{\makebox[180mm][c]{\versionmark}}}{}{}
}{}
%    \end{macrocode}
%
% \subsection{Title page}
%
% \begin{macro}{maketitle}
% We replace the regular \cs{maketitle} with one of our own devising.
% This one takes an optional argument which becomes the introductory ‘abstract’.
% While this may seem odd at first, it does at least ensure we get a reliable
% transition from the cover page to the rest of the document.
%
%    \begin{macrocode}
\let\maketitle\relax
\newcommand{\maketitle}[1][]{%
  \thispagestyle{title}%
%    \end{macrocode}
%
% The first element is the white text in the title tab box.
% We arrange a \env{minipage} so the baseline of its last line aligns with the
% start of the curvy bit of the title tab, and it can extend upwards as much as
% it needs to. Note the use of \cs{TitleTabWidth} to ensure the default text
% fits snugly on one line.
%
%    \begin{macrocode}

  \vspace*{6pt}%
  \noindent
  \raisebox{0pt}[1em][0pt]{%
    \begin{minipage}[b]{\TitleTabWidth}
      \begin{raggedright}
        \fontsize{16pt}{20pt}\selectfont
        \ifx\undefined\lightseries\mdseries\else\lightseries\fi
        \color{white}%
        A Digital Curation Centre\dcchowto@partners
        \ `working level' guide\par
      \end{raggedright}
    \end{minipage}
  }
  \par\vspace{3.5\baselineskip}
%    \end{macrocode}
%
% Then we have the title, author information, and draft markings (if defined,
% and including the date) coming down from the top, and the licence information
% aligned at the bottom.
%
%    \begin{macrocode}
  \begin{flushleft}
    \fontsize{36pt}{40pt}\selectfont
    \bfseries\color{dccmaroon}%
    \thetitle
  \end{flushleft}
  
  \begin{flushleft}
    \huge
    \ifx\undefined\lightseries\mdseries\else\lightseries\fi
    \color{dccblue}%
    \dcchowto@author@display
  \end{flushleft}
  
  \ifx\undefined\dcchowto@mark\else
    \begin{flushleft}
      \versionmark
    \end{flushleft}
  \fi
  \par\vfill
  \begin{flushleft}
    \large\bfseries
    \color{dccblue}\includegraphics[width=74pt]{cc_by}\\[4pt]
    Digital Curation Centre, \the\year.\\
    Licensed under Creative Commons Attribution 4.0 International:\\
    \url{http://creativecommons.org/licenses/by/4.0/}
  \end{flushleft}
  \clearpage
%    \end{macrocode}
%
% That concludes the cover page.
% We now need to start a new page with the geometry we'll use for the rest of
% the document, but with a full-width title and abstract.
%
% In two-column mode, that means setting left and right margins to 15\,mm and a
% column separation of 10\,mm. Then (before inserting any content at all) we
% use \cs{twocolumn} to switch to two columns, using its optional argument to
% give the opening title and abstract full width. This also has the useful
% side-effect of cementing in the new geometry.
%
%    \begin{macrocode}
  \ifKV@dcchowto@twocolumn
    \setlrmarginsandblock{15mm}{15mm}{*}%
    \setcolsepandrule{10mm}{0pt}%
    \checkandfixthelayout
    \twocolumn[%
      \begin{@twocolumnfalse}
        \raggedright
        \HUGE\color{dccmaroon}\textbf{\thetitle}\par
      \end{@twocolumnfalse}
      \par\vspace{1\onelineskip plus \onelineskip minus \onelineskip}\par
      \ifstrempty{#1}{}{%
        \begin{abstract}
          \raggedright #1
        \end{abstract}
        \par\vspace{1\onelineskip plus \onelineskip minus \onelineskip}\par
      }%
      \vskip\dbltextfloatsep
    ]
%    \end{macrocode}
%
% In one-column mode, we set things up for a similar end result (15\,mm margins
% left and right, 10\,mm column separation) except the right-hand column is
% actually marginal space and only 60\,mm wide (this implies a left-hand text
% width of 110\,mm instead of 85\,mm as in two-column mode).
%
% We have to issue \cs{ch@ngetext} to get all these changes noticed.
% We then use a primitive \cs{vbox}, much like \cs{twocolumn} does,
% to give the title and abstract full width.
%
%    \begin{macrocode}
  \else
    \setlrmarginsandblock{15mm}{85mm}{*}%
    \setmarginnotes{10mm}{60mm}{\baselineskip}%
    \setsidecaps{10mm}{60mm}
    \checkandfixthelayout
    \ch@ngetext
    \vbox{%
      \hsize180mm
      \@parboxrestore
      \raggedright
      \HUGE\color{dccmaroon}\textbf{\thetitle}\par
      \normalsize
      \par\vspace{1\onelineskip plus \onelineskip minus \onelineskip}\par
      \ifstrempty{#1}{}{%
        \begin{abstract}
          \raggedright #1
        \end{abstract}
      }%
    }%
  \fi
}
%    \end{macrocode}
% \end{macro}
%
% Previous versions of this class left \cs{maketitle} alone and defined
% \cs{makehowtotitle} instead.
%
%    \begin{macrocode}
% \let\makehowtotitle=\maketitle
%    \end{macrocode}
%
% \subsection{Typographical elements}
%
% \begin{macro}{dottedblue}
% It turns out we could do with a command that turns its argument blue and
% ensures it ends with a full stop or similar. Hence \cs{dottedblue}.
%
%    \begin{macrocode}
\newcommand{\dottedblue}[1]{\textcolor{dccblue}{\addperiod{#1}}}
%    \end{macrocode}
% \end{macro}
%
% The abstract (‘Introduction’) is big, blue and italic,
% with a bigger, bolder, upright, left-aligned heading.
%
%    \begin{macrocode}
\AtBeginDocument{%
  \renewcommand{\abstractname}{Introduction}%
  \setlength{\absparindent}{0pt}%
}
\renewcommand{\abstractnamefont}{%
  \color{dccblue}%
  \Huge
  \ifx\undefined\lightseries\bfseries\else\mdseries\fi
}
\renewcommand{\abstracttextfont}{%
  \color{dccblue}%
  \Large\itshape%
  \ifx\undefined\lightseries\mdseries\else\lightseries\fi
}
\setlength{\absleftindent}{0pt}
\setlength{\absrightindent}{0pt}
\renewcommand{\absnamepos}{flushleft}
%    \end{macrocode}
%
% The sectional headings are unnumbered by default;
% perhaps that makes them look friendlier?
% We have to make them more distinctive than usual, therefore.
%
%    \begin{macrocode}
\setsecnumdepth{part}
\setsecheadstyle{%
  \raggedright\normalfont\LARGE\bfseries\textcolor{dccblue}%
}
\setsubsecheadstyle{%
  \raggedright\normalfont\Large\textcolor{dccblue}%
}
\setsubsubsecheadstyle{%
  \raggedright\normalfont\normalsize\itshape\textcolor{dccblue}%
}
\setparaheadstyle{%
  \normalfont\normalsize\bfseries\dottedblue
}
\setsubparaheadstyle{%
  \normalfont\normalsize\itshape\dottedblue
}
%    \end{macrocode}
%
% There is not much horizontal space for footnotes, so we save some by setting
% them tight to the margin.
%
%    \begin{macrocode}
\setlength{\footmarkwidth}{0pt}
\setlength{\footmarksep}{0pt}
%    \end{macrocode}
%
% In two-column mode, we allow a normal space between the superscript number
% and the footnote text. We use the \cs{raggedyright} paragraph shape and
% make the separating rule maroon.
%
%    \begin{macrocode}
\ifKV@dcchowto@twocolumn
  \footmarkstyle{\textsuperscript{#1} }
  \renewcommand*{\footnoterule}{%
    \kern-3pt%
    \textcolor{dccmaroon}{\hrule}%
    \kern 2.6pt%
  }
  \renewcommand{\makefootmarkhook}{\raggedyright}
%    \end{macrocode}
%
% In one-column mode, footnotes are floated off to the side so we have to repeat
% ourselves a bit with the side-footnote settings. Because things are even
% tighter, we put a thin space between the superscript number and the footnote
% text.
%
%    \begin{macrocode}
\else
  \footnotesinmargin
  \setlength{\sidefootmarkwidth}{0pt}
  \setlength{\sidefootmarksep}{0pt}
  \footmarkstyle{\textsuperscript{#1}\,}
  \sidefootmarkstyle{\textsuperscript{#1}\,}
%    \end{macrocode}
%
% While the footnotes generated by the \pkg{footnote} package do float to the
% margin, they don't pick up the special side-footnote settings. So we manually
% set their width to \cs{marginparwidth} and give them \cs{marginparpush} of
% top padding. We also ensure the \cs{sidefootform} paragraph shape is used.
%
%    \begin{macrocode}
  \let\fn@colwidth\marginparwidth
  \patchcmd{\savenotes}{%
    \columnwidth
  }{%
    \marginparwidth
  }{}{%
    \typeout{Failed to patch savenotes}
  }
  \setlength{\footnotesep}{\baselineskip}
  \addtolength{\footnotesep}{\marginparpush}
  \renewcommand{\makefootmarkhook}{\sidefootform}
\fi
%    \end{macrocode}
%
% The \cs{footref} command provided by \pkg{memoir} (and others) stuffs up
% links generated by \pkg{hyperref}, so we patch it.
%    \begin{macrocode}
\patchcmd{\footref}{%
  \@footnotemark
}{%
  \H@@footnotemark
}{}{%
  \typeout{Failed to patch \string\footref.}%
}
%    \end{macrocode}
%
% \begin{macro}{marginnote}
% A \cs{marginnote} is essentially an unnumbered side-footnote. Since there is
% no room for marginal material in two-column mode, in case it is used in that
% context we provide a parallel definition that corresponds to an
% unnumbered regular footnote.
%
%    \begin{macrocode}
\ifKV@dcchowto@twocolumn
  \newcommand{\marginnote}[1]{%
    \bgroup
    \gdef\@thefnmark{}\@footnotetext{\phantom{\textsuperscript{8}}#1}%
    \egroup
  }
\else
  \newcommand{\marginnote}[1]{%
    \marginpar{%
      \def\baselinestretch{\m@m@footnote@spacing}%
      \sidefootform
      \reset@font
      \foottextfont
      \ignorespaces#1%
    }%
  }
\fi
%    \end{macrocode}
% \end{macro}
%
% We liven up lists by introducing some colour to the labels.
% Description list labels end in punctuation, just like paragraph headings.
%
%    \begin{macrocode}
\newcommand{\bluelabel}[1]{\color{dccblue}#1}
\setlist[itemize]{font=\color{dccblue}}
\setlist[enumerate]{font=\color{dccblue}}
\setlist[description]{font=\dottedblue}
%    \end{macrocode}
%
% \begin{environment}{fullwidth}
% The fullwidth environment is only really useful in one-column mode,
% where it is used to span content across both the textblock and marginal
% column.
%
%    \begin{macrocode}
\newsavebox{\dcchowto@fwbox}
\newlength{\fwbheight}
\newenvironment{fullwidth}{%
  \begin{lrbox}{\dcchowto@fwbox}
    \begin{minipage}{180mm}
}{%
    \end{minipage}
  \end{lrbox}
  \setlength{\fwbheight}{\ht\dcchowto@fwbox + \dp\dcchowto@fwbox}%
  \global\fwbheight=\fwbheight
  \rlap{\usebox{\dcchowto@fwbox}}%
}
%    \end{macrocode}
% \end{environment}
%
% We will shortly redefine some well-known environments, so first we remove the
% existing definitions.
%
%    \begin{macrocode}
\undef{\framed}
\undef{\endframed}
\undef{\shaded}
\undef{\endshaded}
\undef{\snugshade}
\undef{\endsnugshade}
%    \end{macrocode}
%
% \begin{environment}{framed}
% We use \pkg{tcolorbox} to create \env{framed} boxes, and \pkg{footnote} to
% make them footnote friendly (unfortunately the footnote hyperlinks cannot be
% fixed, but you cannot have everything, I suppose).
%
% This provides a red border and blue text. The text width is not narrowed, so
% the border overhangs the margins.
% Note that lists are made more compact but retain the blue labels.
%
%    \begin{macrocode}
\newtcolorbox{framed}[1][]%
  { colback=white
  , colframe=dccmaroon
  , coltext=dccblue
  , parbox=false
  , code=
    { \setlist[itemize]%
      { leftmargin=*
      , font=\color{dccblue}
      }%
      \setlist[description]%
      { font=\color{dccblue}
        , style=nextline
        , leftmargin=0pt
      }%
    }
  , left=1ex
  , right=1ex
  , oversize
  , #1
  }
\makesavenoteenv{framed}
%    \end{macrocode}
% \end{environment}
%
% \begin{environment}{shaded}
% A \env{shaded} box has a peach background, maroon text and no border.
% Unlike a \env{framed} box, it fits within the text block
% (making it more like the traditional \env{shaded*} environment).
% Again, lists are made more compact.
%
%    \begin{macrocode}
\newtcolorbox{shaded}[1][]%
  { colback=dccpeach
  , colframe=dccpeach
  , coltext=dccmaroon
  , boxrule=0pt
  , parbox=false
  , code=
    { \setlist[itemize]%
      { leftmargin=*
      , font=\color{dccblue}
      }%
      \setlist[description]%
      { font=\color{dccblue}
      , style=nextline
      , leftmargin=0pt
      }%
    }
  , before upper=\raggedyright
  , left=1ex
  , right=1ex
  , top=1ex
  , bottom=1ex
  , #1
}
\makesavenoteenv{shaded}
%    \end{macrocode}
% \end{environment}
%
% \begin{environment}{snugshade}
% A \env{snugshade} box is just a \env{shaded} box that overhangs the margins
% to give a little more horizontal space.
% Additionally, lists within are set tighter.
%
%    \begin{macrocode}
\newtcolorbox{snugshade}[1][]%
{ colback=dccpeach
  , colframe=dccpeach
  , coltext=dccmaroon
  , boxrule=0pt
  , parbox=false
  , code=
  { \setlist[itemize]%
    { leftmargin=*
      , font=\color{dccblue}
    }%
    \setlist[description]%
    { font=\color{dccblue}
      , style=nextline
      , leftmargin=0pt
    }%
  }
  , before upper=\unskip\raggedyright
  , left=1ex
  , right=1ex
  , top=1ex
  , bottom=1ex
  , oversize
  , #1
}
\makesavenoteenv{snugshade}
%    \end{macrocode}
% \end{environment}
%
% \begin{environment}{quote}
% We provide several redefinitions of the standard \env{quote} environment to
% make it look prettier.
%
%    \begin{macrocode}
\let\dcchowto@quote=\quote
\let\dcchowto@endquote=\endquote
\newcommand{\normalquotes}{%
  \let\quote=\dcchowto@quote
  \let\endquote=\dcchowto@endquote
}
\newcommand{\italicquotes}{%
  \renewenvironment{quote}{%
    \bigskip\par
    \itshape
    \iftoggle{blx@footnote}{\normalsize\color{dccblue}}{}%
  }{%
    \par\bigskip
  }
}
\newlength{\dcchowto@parindent}
\setlength{\dcchowto@parindent}{\parindent}
\newcommand{\shadedquotes}{%
  \renewenvironment{quote}{%
    \begin{shaded}[left=\dcchowto@parindent,right=\dcchowto@parindent]
  }{%
    \end{shaded}%
  }
}
\shadedquotes
%    \end{macrocode}
% \end{environment}
%
% \begin{macro}{quotefrom}
% For cases where we want to include a separate attribution line,
% \cs{quotefrom} starts a new paragraph and sets it ragged-left and slightly
% smaller.
%
%    \begin{macrocode}
\newcommand{\quotefrom}{%
  \par\vspace{-\parskip}\raggedleft\upshape\smaller\hbox{}~%
}
%    \end{macrocode}
% \end{macro}
%
% \subsection{Floats}
%
% The following code puts captions in the margins in one-column mode.
% It is adapted from \pkg{memoir}'s existing side caption support with
% additional inspiration from \pkg{tufte-latex}.
%
% We start by setting the default caption placement (outer margin).
% We ensure these side captions look a bit like footnotes (\cs{sidefootform})
% and are treated like footnotes by \pkg{biblatex}.
%
%    \begin{macrocode}
\ifKV@dcchowto@twocolumn\else
  \sidecapmargin{outer}
  \renewcommand*{\sidecapstyle}{\sidefootform\toggletrue{blx@footnote}}
%    \end{macrocode}
%
% We provide a command, \cs{setfloatalignment} for saving the float alignment
% in \cs{floatalignment}. TODO: Check if this can\slash should be removed.
%
%    \begin{macrocode}
  \newcommand{\floatalignment}{x}
  \newcommand{\setfloatalignment}[1]{\renewcommand{\floatalignment}{#1}}
%    \end{macrocode}
%
% We make copies of the \pkg{memoir} \env{float} environment and \cs{caption}
% and \cs{label} commands.
% TODO: check if \cs{dcchowto@orig@caption} needs to be saved here.
%
%    \begin{macrocode}
  \let\dcchowto@orig@float\@float
  \let\dcchowto@orig@endfloat\end@float
  \AtBeginDocument{%
    \let\dcchowto@orig@caption\caption%
    \let\dcchowto@orig@label\label%
  }
%    \end{macrocode}
%
% We provide replacement caption and label commands that do exactly what
% \pkg{memoir}'s own \env{sidecaption} would do with the information,
% except we also save the label separately (in \cs{m@mscap@forlbl}).
%
%    \begin{macrocode}
  \newcommand{\dcchowto@caption}[2][]{%
    \ifx\@empty#1\@empty
      \gdef\m@mscap@fortoc{#2}%
    \else
      \gdef\m@mscap@fortoc{#1}%
    \fi
    \gdef\m@mscap@forcap{#2}%
  }
  \newcommand{\dcchowto@label}[1]{%
    \ifx\@empty#1\@empty
      \gdef\m@mscap@forlbl{}%
      \gdef\m@mscaplabel{}%
    \else
      \gdef\m@mscap@forlbl{#1}%
      \gdef\m@mscaplabel{\@bsphack\dcchowto@orig@label{#1}\@esphack}%
    \fi
  }
%    \end{macrocode}
%
% These two lengths will be used for reserving space in the margin.
% \cs{dcchowto@tmpa} is where the reserved space will begin relative to the
% bottom of the float.
% \cs{dcchowto@tmpb} is how much space will be reserved.
%
%    \begin{macrocode}
  \newlength\dcchowto@tmpa
  \newlength\dcchowto@tmpb
%    \end{macrocode}
%
% Here is our new basic float environment on which our replacement \env{figure}
% and \env{table} will be based.
%
% If the float placement specifier is ‘t’ and only ‘t’, then we align the
% caption to the top of the figure (in case it is long and exceeds the figure
% height). Otherwise we align it with the bottom. (This gives more room for
% marginal material floating down from above.)
%
%    \begin{macrocode}
  \newenvironment{dcchowto@float}[2][htbp]{%
    \ifthenelse{\equal{#1}{t}\OR\equal{#1}{T}}{%
      \setsidecappos{t}
    }{%
      \setsidecappos{b}%
    }%
%    \end{macrocode}
%
% We clear away any caption or label left over from an earlier float.
% Then we save and replace the current \cs{caption} and \cs{label} with our
% simplified versions.
%
%    \begin{macrocode}
    \gdef\m@mscap@fortoc{}%
    \gdef\m@mscap@forcap{}%
    \gdef\m@mscap@forlbl{}%
    \gdef\m@mscaplabel{}%
    \let\dcchowto@orig@caption\caption%
    \let\dcchowto@orig@label\label%
    \renewcommand{\caption}[2][]{\dcchowto@caption[##1]{##2}}%
    \renewcommand{\label}[1]{\dcchowto@label{##1}}%
%    \end{macrocode}
%
% We insert the code that \pkg{memoir} would normally execute at the beginning of a
% float that contained a \env{sidecaption} environment
%
%    \begin{macrocode}
    \dcchowto@orig@float{#2}[#1]%
    \@mem@scap@beforehook%
    \setlength{\m@mscapmainwidth}{\sidecapfloatwidth}%
    \setm@mscaplkern
    \begin{lrbox}{\m@mscap@fbox}%
      \begin{minipage}[c]{\m@mscapmainwidth}%
  }{%
%    \end{macrocode}
%
% At the end of the environment, we put in an adjustment to tidy up any extra
% space introduced by the user's label and caption commands, then continue as
% \pkg{memoir}'s \env{sidecaption} normally would (apart from skipping the
% captioning part if no caption was provided, and not bothering to check on
% which side the caption should go).
%
%    \begin{macrocode}
        \par\hbox{}\vspace{-\baselineskip}%
        \ifthenelse{\prevdepth>0}{\vspace{-\prevdepth}}{}
      \end{minipage}%
    \end{lrbox}%
    \ifthenelse{\equal{\m@mscap@forcap}{}}{}{%
      \ifx\undefined\H@refstepcounter
        \refstepcounter\@captype
      \else
        \H@refstepcounter{\@captype}%
        \hyper@makecurrent{\@captype}%
      \fi
      \m@mscaplabel
      \begin{lrbox}{\m@mscap@capbox}%
        \begin{minipage}[c]{\sidecapwidth}%
          \sidecapstyle
          \@caption\@captype[\m@mscap@fortoc]{\m@mscap@forcap}%
        \end{minipage}%
      \end{lrbox}%
%    \end{macrocode}
%
% We set \cs{dcchowto@tmpa} to the total height of the caption plus
% \cs{marginparpush}, and \cs{dcchowto@tmpb} to that plus another
% \cs{marginparpush}.
%
% TODO: consider case where caption is top-aligned.
%
%    \begin{macrocode}
      \global\dcchowto@tmpa=\z@
      \global\advance\dcchowto@tmpa \ht\m@mscap@capbox
      \global\advance\dcchowto@tmpa \dp\m@mscap@capbox
      \global\advance\dcchowto@tmpa \marginparpush
      \global\dcchowto@tmpb=\dcchowto@tmpa
      \global\advance\dcchowto@tmpb \marginparpush
%    \end{macrocode}
%
% Now we insert the float and caption, using a simplified version of
% \pkg{memoir}'s \cs{m@mscapopboxes}.
%
%    \begin{macrocode}
      \m@mcalcscapraise
      \usebox{\m@mscap@fbox}%
      \rlap{%
        \kern\sidecapsep\raisebox{\m@mscapraise}{%
          \usebox{\m@mscap@capbox}%
        }%
      }%
      \@mem@scap@afterhook%
    }
%    \end{macrocode}
%
% Lastly, we insert the normal float end code, reset \cs{caption} and \cs{label}
% to their normal meaning, create a macro for reserving space in the margin,
% and clear the two saved boxes.
%
%    \begin{macrocode}
    \dcchowto@orig@endfloat
    \let\caption\dcchowto@orig@caption
    \let\label\dcchowto@orig@label
    \ifthenelse{\equal{\m@mscap@forlbl}{}}{}{%
      \expandafter\xdef\csname dcchowto@push@\m@mscap@forlbl\endcsname{%
        \noexpand\marginphantom[-\dcchowto@tmpa]{\dcchowto@tmpb}%
      }%
      \protected@write\@mainaux{}{%
        \string\expandafter\string\def\string\csname\space
        dcchowto@push@\m@mscap@forlbl\string\endcsname{%
          \string\marginphantom[-\the\dcchowto@tmpa]{\the\dcchowto@tmpb}%
        }%
      }%
    }%
    \begin{lrbox}{\m@mscap@fbox}\hbox{}\end{lrbox}%
    \begin{lrbox}{\m@mscap@capbox}\hbox{}\end{lrbox}%
  }
%    \end{macrocode}
%
% \begin{environment}{figure}
%   \begin{environment}{table}
% Now we redefine \env{figure} and \env{table} in terms of our new float.
%
%    \begin{macrocode}
  \renewenvironment{figure}[1][htbp]{%
    \begin{dcchowto@float}[#1]{figure}%
  }{%
    \end{dcchowto@float}%
  }
  \renewenvironment{table}[1][htbp]{%
    \begin{dcchowto@float}[#1]{table}%
  }{%
    \end{dcchowto@float}%
  }
%    \end{macrocode}
%   \end{environment}
% \end{environment}
%
% Now we define full width floats using a similar technique.
%
% This time captions will normally go beneath the float, unless the float is
% known to be placed at the bottom, in which case the caption will go above it.
%
%    \begin{macrocode}
  \newenvironment{dcchowto@float@star}[2][htbp]{%
    \ifthenelse{\equal{#1}{b}\OR\equal{#1}{B}}{%
      \setsidecappos{b}%
    }{%
      \setsidecappos{t}%
    }%
%    \end{macrocode}
%
% We clear away any caption or label left over from an earlier float.
% Then we save and replace the current \cs{caption} and \cs{label} with our
% simplified versions.
%
%    \begin{macrocode}
    \gdef\m@mscap@fortoc{}%
    \gdef\m@mscap@forcap{}%
    \gdef\m@mscap@forlbl{}%
    \gdef\m@mscaplabel{}%
    \let\dcchowto@orig@caption\caption%
    \let\dcchowto@orig@label\label%
    \renewcommand{\caption}[2][]{\dcchowto@caption[##1]{##2}}%
    \renewcommand{\label}[1]{\dcchowto@label{##1}}%
%    \end{macrocode}
%
% We insert the code that \pkg{memoir} would normally execute at the beginning of a
% float that contained a \env{sidecaption} environment
%
%    \begin{macrocode}
    \dcchowto@orig@float{#2}[#1]%
    \@mem@scap@beforehook%
    \setlength{\m@mscapmainwidth}{\sidecapfloatwidth}%
    \setm@mscaplkern
    \begin{lrbox}{\m@mscap@fbox}%
      \begin{minipage}[c]{\m@mscapmainwidth}
        \begin{fullwidth}
  }{%
%    \end{macrocode}
%
% At the end of the environment, we put in an adjustment to tidy up any extra
% space introduced by the user's label and caption commands, then continue as
% \pkg{memoir}'s \env{sidecaption} normally would (apart from skipping the
% captioning part if no caption was provided, and not bothering to check on
% which side the caption should go).
%
%    \begin{macrocode}
          \par\hbox{}\vspace{-\baselineskip}%
          \ifthenelse{\prevdepth>0}{\vspace{-\prevdepth}}{}
        \end{fullwidth}
      \end{minipage}
    \end{lrbox}
    \ifthenelse{\equal{\m@mscap@forcap}{}}{}{%
      \ifx\undefined\H@refstepcounter
        \refstepcounter\@captype
      \else
        \H@refstepcounter{\@captype}%
        \hyper@makecurrent{\@captype}%
      \fi
      \m@mscaplabel
      \begin{lrbox}{\m@mscap@capbox}%
        \begin{minipage}[c]{\sidecapwidth}%
          \sidecapstyle
          \@caption\@captype[\m@mscap@fortoc]{\m@mscap@forcap}%
        \end{minipage}%
      \end{lrbox}%
%    \end{macrocode}
%
% This time, we measure the caption box to figure out not only what space to
% reserve, but also how far to push it so it sits in the right place
% (for this we adapt \pkg{memoir}'s \cs{m@mcalcscapraise}).
% We start by setting \cs{dcchowto@tmpa} to the total height of the float plus
% \cs{marginparpush} so marginal material will not run under the float from
% above. But now we have to consider the three cases of ‘t’
% (hanging below), ‘b’ (sat above) and ‘c’ (floating in the middle).
%
%    \begin{macrocode}
      \global\dcchowto@tmpa=\z@
      \global\advance\dcchowto@tmpa \ht\m@mscap@fbox
      \global\advance\dcchowto@tmpa \dp\m@mscap@fbox
      \global\advance\dcchowto@tmpa \marginparpush
%    \end{macrocode}
%
% If hanging below, the caption needs to be lowered by the total height of the
% caption plus the depth of the figure plus 0.5\,ex plus \cs{abovecaptionskip}.
% The amount of space reserved in the margin is \cs{dcchowto@tmpa} plus the
% total height of the caption, plus \cs{abovecaptionskip} and
% \cs{marginparpush}.
%
%    \begin{macrocode}
      \def\@tempb{t}%
      \ifx\m@mscappos\@tempb
        \setlength{\m@mscapraise}{0pt}%
        \settoheight{\m@m@tempdima}{\strut\usebox{\m@mscap@capbox}}%
        \advance\m@mscapraise -\m@m@tempdima
        \settodepth{\m@m@tempdima}{\usebox{\m@mscap@fbox}}%
        \advance\m@mscapraise -\m@m@tempdima
        \advance\m@mscapraise 0.5ex
        \advance\m@mscapraise -\abovecaptionskip
        \global\dcchowto@tmpb=\dcchowto@tmpa
        \global\advance\dcchowto@tmpb \abovecaptionskip
        \global\advance\dcchowto@tmpb \ht\m@mscap@capbox
        \global\advance\dcchowto@tmpb \dp\m@mscap@capbox
        \global\advance\dcchowto@tmpb \marginparpush
      \else
%    \end{macrocode}
%
% If sat above, the caption needs to be raised by the total height of the
% figure plus the depth of the caption plus \cs{belowcaptionskip}.
% The reserved space in the margin needs to start higher, by the total height of
% the caption plus \cs{belowcaptionskip}. The amount of space reserved needs to
% be \cs{dcchowto@tmpa} plus \cs{marginparpush}.
%
%    \begin{macrocode}
        \def\@tempb{b}%
        \ifx\m@mscappos\@tempb
          \settodepth{\m@mscapraise}{\strut\usebox{\m@mscap@capbox}}%
          \settoheight{\m@m@tempdima}{\usebox{\m@mscap@fbox}}%
          \advance\m@mscapraise \m@m@tempdima
          \advance\m@mscapraise \belowcaptionskip
          \global\advance\dcchowto@tmpa \belowcaptionskip
          \global\advance\dcchowto@tmpa \ht\m@mscap@capbox
          \global\advance\dcchowto@tmpa \dp\m@mscap@capbox
          \global\dcchowto@tmpb=\dcchowto@tmpa
          \global\advance\dcchowto@tmpb \marginparpush
        \else
%    \end{macrocode}
%
% If sat centrally, the caption need only be raised by 0.25\,ex.
% As the caption and figure overlap, we need only worry about the larger of the
% two for reserving marginal space. We temporarily repurpose \cs{dcchowto@tmpb}
% for measuring the caption (plus \cs{marginparpush}). Whichever is bigger is
% used for \cs{dcchowto@tmpa}, and \cs{dcchowto@tmpb} is set bigger again by
% \cs{marginparpush}.
%
%    \begin{macrocode}
          \m@mscapraise=\z@
          \advance\m@mscapraise 0.25ex
          \global\dcchowto@tmpb=\z@
          \global\advance\dcchowto@tmpb \ht\m@mscap@capbox
          \global\advance\dcchowto@tmpb \dp\m@mscap@capbox
          \global\advance\dcchowto@tmpb \marginparpush
          \ifdim\dcchowto@tmpb>\dcchowto@tmpa
            \global\dcchowto@tmpa=\dcchowto@tmpb
          \else
            \global\dcchowto@tmpb=\dcchowto@tmpa
          \fi
          \global\advance\dcchowto@tmpb \marginparpush
        \fi
      \fi
      \advance\m@mscapraise \sidecapraise
    }
%    \end{macrocode}
%
% Now we insert the float and caption, using a modified version of
% \pkg{memoir}'s \cs{m@mscapopboxes}.
%
%    \begin{macrocode}
    \makebox[\textwidth][l]{\usebox{\m@mscap@fbox}}%
    \rlap{%
      \kern\sidecapsep\raisebox{\m@mscapraise}[0pt][0pt]{%
        \usebox{\m@mscap@capbox}%
      }%
    }%
    \@mem@scap@afterhook%
%    \end{macrocode}
%
% Lastly, we insert the normal float end code, reset \cs{caption} and \cs{label}
% to their normal meaning, create a macro for reserving space in the margin,
% and clear the two saved boxes.
%
%    \begin{macrocode}
    \dcchowto@orig@endfloat%
    \let\caption\dcchowto@orig@caption%
    \let\label\dcchowto@orig@label%
    \ifthenelse{\equal{\m@mscap@forlbl}{}}{}{%
      \expandafter\xdef\csname dcchowto@push@\m@mscap@forlbl\endcsname{%
        \noexpand\marginphantom[-\dcchowto@tmpa]{\dcchowto@tmpb}%
      }%
      \protected@write\@mainaux{}{%
        \string\expandafter\string\def\string\csname\space
        dcchowto@push@\m@mscap@forlbl\string\endcsname{%
          \string\marginphantom[-\the\dcchowto@tmpa]{\the\dcchowto@tmpb}%
        }%
      }%
    }%
    \begin{lrbox}{\m@mscap@fbox}\hbox{}\end{lrbox}%
    \begin{lrbox}{\m@mscap@capbox}\hbox{}\end{lrbox}%
  }
%    \end{macrocode}
%
% For compatibility we use the same names (the starred variants of table and
% figure) for our text-and-margin floats as for floats spanning two columns,
% since they do approximately the same things.
%
%    \begin{macrocode}
  \renewenvironment{figure*}[1][htbp]{%
    \begin{dcchowto@float@star}[#1]{figure}%
  }{%
    \end{dcchowto@float@star}%
  }
  \renewenvironment{table*}[1][htbp]{%
    \begin{dcchowto@float@star}[#1]{table}%
  }{%
    \end{dcchowto@float@star}%
  }
\fi
%    \end{macrocode}
%
% \begin{macro}{keepmarginfor}
% Since we don't know where a float will end up, and \LaTeX\ won't tell us,
% we provide a simple command that can be used to protect manually a float or
% caption from being overlapped by other marginal material. \cs{keepmarginfor}
% takes a single argument, which is the label of the float being protected.
% If a corresponding \cs{marginphantom} command has not been defined (e.g.\ 
% we are in two-column mode), we issue a warning but otherwise do nothing.
%
% \end{macro}
%    \begin{macrocode}
\newcommand*{\keepmarginfor}[1]{%
  \ifcsdef{dcchowto@push@#1}{%
    \csname dcchowto@push@#1\endcsname
  }{%
    \typeout{dcchowto Warning: no marginphantom defined for #1.}%
  }%
}
%    \end{macrocode}
%
% Captions should be small, set ragged if long and (in two column mode) centred
% if short.
%
%    \begin{macrocode}
\ifKV@dcchowto@twocolumn
  \hangcaption
  \captionstyle[\centering]{\raggedyright}
\else
  \captionstyle[\raggedright]{\raggedyright}  
\fi
\captionnamefont{\footnotesize\bfseries}
\captiontitlefont{\footnotesize}
%    \end{macrocode}
%
% We ensure float environments can host normal footnotes,
% and ensure they are numbered with a single number.
%
%    \begin{macrocode}
\makesavenoteenv{figure}
\makesavenoteenv{table}
\makesavenoteenv{figure*}
\makesavenoteenv{table*}
\counterwithout{figure}{chapter}
\counterwithout{table}{chapter}
%    \end{macrocode}
%
% \begin{environment}{marginbox}
% Memoir provides \env{marginfigure} and \env{margintable} environments,
% but here is a new environment for plain, uncaptioned marginal floats.
% All three need to be converted to regular floats in two-column mode.
%
%    \begin{macrocode}
\ifKV@dcchowto@twocolumn
  \let\marginfigure=\figure
  \let\endmarginfigure=\endfigure
  \let\margintable=\table
  \let\endmargintable=\endtable
  \newfloat{marginbox}{lom}{Box}
\else
  \newsavebox{\dcchowto@mflt}
  \newenvironment{marginbox}{%
    \begin{lrbox}{\dcchowto@mflt}
      \begin{minipage}{\marginparwidth}
        \footnotesize
        \toggletrue{blx@footnote}%
        \italicquotes
        \raggedright
        \setlength{\parindent}{0pt}%
        \setlength{\parskip}{\smallskipamount}%
  }{%
      \end{minipage}
    \end{lrbox}
    \marginpar{\usebox{\dcchowto@mflt}}%
  }
\fi
%    \end{macrocode}
% \end{environment}
%
% \subsection{Citations and references}
%
% We use \pkg{biblatex} and \pkg{biblatex-apa} for referencing (with tweaks).
%
%    \begin{macrocode}
\RequirePackage
[bibstyle=apa%
,citestyle=verbose%
,citetracker=false%
,backend=biber%
]{biblatex}
\DeclareLanguageMapping{british}{british-apa}
%    \end{macrocode}
%
% We need to adapt the verbose (footnote) citation style so it works with the
% APA bibliography style. First, APA references use full points to separate
% elements, so we cannot use weaker punctuation to separate multiple entries
% in a single citation.
%
%    \begin{macrocode}
\renewcommand*{\multicitedelim}{\addperiod\space}
%    \end{macrocode}
%
% Second, we allow postnotes to appear mid-citation in footnotes.
%
%    \begin{macrocode}
\DeclareCiteCommand{\footcite}[\mkbibfootnote]{%
  \usebibmacro{prenote}%
  \renewcommand*{\postnotedelim}{}%
}{%
  \usebibmacro{citeindex}%
  \usebibmacro{cite}%
}{%
  \multicitedelim
}{}
\DeclareCiteCommand{\footcitetext}[\mkbibfootnotetext]{%
  \usebibmacro{prenote}%
  \renewcommand*{\postnotedelim}{}%
}{%
  \usebibmacro{citeindex}%
  \usebibmacro{cite}%
}{%
  \multicitedelim
}{}
\DeclareCiteCommand{\smartcite}[\iffootnote\mkbibparens\mkbibfootnote]{%
  \usebibmacro{prenote}%
  \renewcommand*{\postnotedelim}{}%
}{%
  \usebibmacro{citeindex}%
  \usebibmacro{cite}%
}{%
  \multicitedelim
}{\unspace}
\DeclareCiteCommand{\fullcite}{%
  \usebibmacro{prenote}%
  \renewcommand*{\postnotedelim}{}%
}{%
  \usedriver{%
    \DeclareNameAlias{sortname}{default}%
  }{%
    \thefield{entrytype}%
  }%
}{%
  \multicitedelim
}{}
\DeclareCiteCommand{\footfullcite}[\mkbibfootnote]{%
  \usebibmacro{prenote}%
  \renewcommand*{\postnotedelim}{}%
}{%
  \usedriver{%
    \DeclareNameAlias{sortname}{default}%
  }{%
    \thefield{entrytype}%
  }%
}{%
  \multicitedelim
}{}
%    \end{macrocode}
%
% Third, we want \cs{textcite} to act like the regular author-date version
% instead of the footnote-based version. The following is borrowed from apa.cbx.
%
%    \begin{macrocode}
\newbool{cbx:parens}
\renewbibmacro*{textcite}{%
  \iffieldequals{namehash}{\cbx@lasthash}{%
    \setunit{\compcitedelim}%
    \usebibmacro{cite:plabelyear+extrayear}%
  }{%
    \ifbool{cbx:parens}{%
      \bibcloseparen\global\boolfalse{cbx:parens}%
    }{}%
    \setunit{\compcitedelim}%
    \ifthenelse{%
      \ifnameundef{labelname}\OR\iffieldequalstr{entrytype}{patent}%
    }{%
      \iffieldundef{shorthand}{%
        \usebibmacro{cite:noname}%
        \setunit{%
          \ifbool{cbx:np}{%
            \nameyeardelim
          }{%
            \global\booltrue{cbx:parens}\addspace\bibopenparen
          }%
        }%
        \usebibmacro{cite:plabelyear+extrayear}%
      }{%
        \usebibmacro{cite:shorthand}%
      }%
    }{%
      \ifnameundef{shortauthor}{%
        \printnames[labelname][-\value{listtotal}]{labelname}%
      }{%
        \cbx@apa@ifnamesaved{%
          \printnames{shortauthor}%
        }{%
          \printnames[labelname][-\value{listtotal}]{author}%
        }%
      }%
      \setunit{%
        \ifbool{cbx:np}{%
          \nameyeardelim
        }{%
          \global\booltrue{cbx:parens}\addspace\bibopenparen
        }%
      }%
      \ifnameundef{shortauthor}{}{%
        \cbx@apa@ifnamesaved{}{%
          \printnames{shortauthor}\setunit{\nameyeardelim}%
        }%
      }%
      \usebibmacro{cite:plabelyear+extrayear}%
      \savefield{namehash}{\cbx@lasthash}%
    }%
  }%
}
\newbibmacro*{cite:plabelyear+extrayear}{%
  \iffieldundef{labelyear}{}{%
    \printtext[bibhyperref]{%
      \printfield[noformat]{origyear}\setunit*{\addslash}%
      \printfield{labelyear}\printfield{extrayear}%
    }%
  }%
  \iffieldundef{issue}{}{%
    \addcomma\addspace\printfield{issue}%
  }%
}
\newbibmacro*{cite:shorthand}{%
  \ifciteseen{%
    \printfield{shorthand}%
  }{%
    \printnames[labelname][-\value{listtotal}]{labelname}%
    \setunit{\nameyeardelim}%
    \printfield{title}\space\printfield{shorthand}%
  }%
}
\newbibmacro*{cite:init}{%
  \global\boolfalse{cbx:parens}%
  \global\undef\cbx@lasthash
}
\newbibmacro*{cite:post}{%
  \xifinlist{\thefield{namehash}}{\cbx@apa@names}{}{%
    \listxadd{\cbx@apa@names}{\thefield{namehash}}%
  }%
}
\newbibmacro*{textcite:postnote}{%
  \usebibmacro{postnote}%
  \ifbool{cbx:parens}{%
    \bibcloseparen\global\boolfalse{cbx:parens}%
  }{}%
}
\DeclareCiteCommand{\textcite}{%
  \usebibmacro{cite:init}%
  \usebibmacro{prenote}%
}{%
  \usebibmacro{citeindex}%
  \usebibmacro{textcite}%
}{}{%
  \usebibmacro{textcite:postnote}%
  \usebibmacro{cite:post}%
}
\DeclareMultiCiteCommand{\textcites}{\textcite}{\compcitedelim}
%    \end{macrocode}
%
% The following redefinition of \cs{finalnamedelim} usually occurs at the start of
% the bibliography, but since we need it like this in the footnotes, we make it
% the regular definition.
%
%    \begin{macrocode}
\renewcommand*{\finalnamedelim}{%
  \ifthenelse{\value{listcount}>7}{}{%
    \ifthenelse{\ifcurrentname{author}\OR\boolean{bbx:editorinauthpos}}{%
      \ifnum\value{liststop}>1
        \finalandcomma
      \fi
      \addspace\&\space
    }{%
      \addspace\&\space
    }%
  }%
}
%    \end{macrocode}
%
% In the bibliography style, we need to insert postnotes (where applicable) in
% the appropriate place in citations (typically after the title).
%
%    \begin{macrocode}
\xpatchbibmacro{bookaddinfo}{%
  \iffieldundef{volumes}%
}{%
  \iffieldundef{volumes}\AND\iffieldundef{postnote}%
}{}{%
  \typeout{Failed to patch bookaddinfo macro if-clause}%
}
\xpatchbibmacro{bookaddinfo}{%
  \printfield{volumes}%
}{%
  \printfield{volumes}%
  \setunit*{\addcomma\addspace}%
  \printfield{postnote}%
}{}{%
  \typeout{Failed to patch bookaddinfo macro print sequence}%
}
\xpatchbibmacro{addinfo}{%
  \iffieldundef{volumes}%
}{%
  \iffieldundef{volumes}\AND\iffieldundef{postnote}%
}{}{%
  \typeout{Failed to patch addinfo macro if-clause}%
}
\xpatchbibmacro{addinfo}{%
  \printfield{pages}%
}{%
  \printfield{pages}%
  \setunit*{\addspace\printtext{at}\addspace}%
  \printfield{postnote}%
}{}{%
  \typeout{Failed to patch addinfo macro print sequence}%
}
\xpatchbibdriver{article}{%
  \printfield{pages}%
}{%
  \printfield{pages}%
  \iffieldundef{postnote}{}{%
    \addspace\printtext{at}\addspace\usebibmacro{cite:postnote}%
  }%
}{}{%
  \typeout{Failed to patch article driver}%
}
\xpatchbibdriver{booklet}{%
  \usebibmacro{title}%
}{%
  \usebibmacro{title}%
  \iffieldundef{postnote}{}{%
    \addspace\mkbibparens{\usebibmacro{cite:postnote}}%
  }%
}{}{%
  \typeout{Failed to patch booklet driver}%
}
\xpatchbibdriver{collection}{%
  \usebibmacro{title}%
}{%
  \usebibmacro{title}%
  \iffieldundef{postnote}{}{%
    \addspace\mkbibparens{\usebibmacro{cite:postnote}}%
  }%
}{}{%
  \typeout{Failed to patch collection driver}%
}
\xpatchbibdriver{report}{%
  \newunit\newblock
  \printlist{institution}%
}{%
  \iffieldundef{postnote}{}{%
    \addspace\mkbibparens{\usebibmacro{cite:postnote}}%
  }%
}{}{%
  \typeout{Failed to patch report driver}%
}
%    \end{macrocode}
%
% For some reason, \pkg{biblatex-apa} expects reports to have a |publisher|,
% while the convention is to use |institution|. We partially fixed this above,
% and complete the job below.
%
%    \begin{macrocode}
\xpatchbibmacro{location+publisher}{%
  \printlist{publisher}%
}{%
  \iflistundef{publisher}{%
    \printlist{institution}%
  }{%
    \printlist{publisher}%
  }%
}{}{%
  \typeout{Failed to patch location+publisher macro}%
}
%    \end{macrocode}
%
% We move the ‘doi:’ portion of a DOI inside the hyperlink. Since it's all run
% together, it just makes sense. 
%
%    \begin{macrocode}
\DeclareFieldFormat{doi}{%
  \ifhyperref{%
    \href{http://dx.doi.org/#1}{\nolinkurl{doi:#1}}%
  }{%
    \nolinkurl{doi:#1}%
  }%
}
%    \end{macrocode}
%
% The APA has its own URL-breaking rules. The following code, a combination of
% that from \pkg{apacite} and version 0.9 of \pkg{biblatex}, gives good results.
%
%    \begin{macrocode}
\AtBeginDocument{%
  \renewcommand*{\biburlsetup}{%
    \Urlmuskip=0mu plus 2mu\relax
    \mathchardef\UrlBreakPenalty=200\relax
    \mathchardef\UrlBigBreakPenalty=100\relax
    \mathchardef\UrlEmergencyPenalty=9000\relax
    \def\APAURLdot{\mathchar"2E }%
    \def\APAURLcomma{\mathchar"2C }%
    \def\APAURLquestionmark{\mathchar"3F }%
    \def\APAURLexclamation{\mathchar"21 }%
    \def\APAURLhyphen{\mathchar"2D }%
    \def\APAURLunderscore{\_}%
    \appto\UrlSpecials{%
      \do\0{\mathchar`\0\penalty\UrlEmergencyPenalty}%
      \do\1{\mathchar`\1\penalty\UrlEmergencyPenalty}%
      \do\2{\mathchar`\2\penalty\UrlEmergencyPenalty}%
      \do\3{\mathchar`\3\penalty\UrlEmergencyPenalty}%
      \do\4{\mathchar`\4\penalty\UrlEmergencyPenalty}%
      \do\5{\mathchar`\5\penalty\UrlEmergencyPenalty}%
      \do\6{\mathchar`\6\penalty\UrlEmergencyPenalty}%
      \do\7{\mathchar`\7\penalty\UrlEmergencyPenalty}%
      \do\8{\mathchar`\8\penalty\UrlEmergencyPenalty}%
      \do\9{\mathchar`\9\penalty\UrlEmergencyPenalty}%
      \do\.{\mathbin{}\APAURLdot }%
      \do\,{\mathbin{}\APAURLcomma }%
      \do\-{\mathbin{}\APAURLhyphen }%
      \do\?{\mathbin{}\APAURLquestionmark }%
      \do\!{\mathbin{}\APAURLexclamation }%
      \do\_{\mathbin{}\APAURLunderscore }%
    }%
    \def\UrlBreaks{%
      \do\.\do\@\do\/\do\\\do\!\do\_\do\|\do\;\do\>\do\]\do\)\do\}%
      \do\,\do\?\do\'\do\+\do\=\do\#\do\$\do\&\do\*\do\^\do\"%
    }%
    \def\UrlBigBreaks{\do\:\do\-}%
  }%
}        
%    \end{macrocode}
%
% Use British dates in British English.
%
%    \begin{macrocode}
\patchcmd{\mkbibrangeapalong}{%
  \mkbibdateapalongmdy
}{%
  \mkbibdateapalongdmy
}{}{%
  \typeout{Failed to patch mkbibrangeapalong}
}
\DefineBibliographyExtras{british}{%
  \protected\def\mkbibdateapalongdmy#1#2#3{%
    \iffieldundef{#3}%
    {}%
    {\stripzeros{\thefield{#3}}}%
    \iffieldundef{#2}%
    {}%
    {\iffieldundef{#3}%
      {}%
      {\addspace}%
      \mkbibmonth{\thefield{#2}}}%
    \iffieldundef{#1}%
    {}%
    {\ifthenelse{\iffieldundef{#2}\OR\iffieldundef{#3}}%
      {}%
      {\addspace}%
      \iffieldbibstring{#1}{\biblcstring{\thefield{#1}}}{\thefield{#1}}}}%
}
%    \end{macrocode} 
%
% If using the bibliography for further reading, we don't want an auto-generated
% heading, and (since it is set in narrow columns) we don't want a hanging
% indent.
%
%    \begin{macrocode}
\defbibheading{bibliography}{}
\setlength{\bibhang}{0pt}
%    \end{macrocode}
%
% use \cs{baselineskip} for \cs{bibparsep} to keep it stretchy
%
%    \begin{macrocode}
\setlength{\bibparsep}{%
  0.5\onelineskip plus 0.2\onelineskip minus 0.2\onelineskip
}
%    \end{macrocode}
%
% ordinary cites are in footnotes; nocites are in bibliography at the end
%
%    \begin{macrocode}
\DeclareBibliographyCategory{notcited}
\addtoiargdef{\nocite}{\addtocategory{notcited}{#1}}{}
%    \end{macrocode}
%
% We provide \cs{refurl} as a convenience command for providing quick website
% references.
%
% \begin{macro}{refurl}
%    \begin{macrocode}
\newcommand*{\refurl}[2]{%
  \begingroup\biburlsetup #1, \textsc{url}: \url{#2}\endgroup.%
}
%    \end{macrocode}
% \end{macro}
%
% \subsection{Last page}
%
% We provide several options for finishing off the document.
%
% The \cs{finishpage} command inserts a rule and lays out the remaining content
% in two columns.
%
%    \begin{macrocode}
\ifKV@dcchowto@twocolumn
  \newcommand{\finishpage}{}
\else
  \newcommand{\finishpage}{%
    \AtEndEnvironment{document}{%
      \end{multicols}
    \end{fullwidth}%
      \marginphantom[-\fwbheight]{-\fwbheight}%
    }
    \begin{fullwidth}
      \noindent\textcolor{dccmaroon}{\rule{\hsize}{1.2pt}}
      \begin{multicols}{2}%
  }
\fi
%    \end{macrocode} 
%
% The \cs{finalpage} command starts a new page and lays out the remaining content
% in two columns.
%
%    \begin{macrocode}
\ifKV@dcchowto@twocolumn
  \newcommand{\finalpage}{}
\else
  \newcommand{\finalpage}{%
    \AtEndEnvironment{document}{%
      \end{multicols}
    \end{fullwidth}%
      \setlength{\LastHeadHeight}{\paperheight - 64pt - \fwbheight - 3\onelineskip}
    }
    \clearpage
    \thispagestyle{last}
    \vspace*{\stretch{1}}
    \begin{fullwidth}
      \begin{multicols}{2}%
  }
\fi
%    \end{macrocode} 
%
% The \cs{backcover} command simply adds an extra maroon page at the end.
%
%    \begin{macrocode}
\newcommand{\backcover}{%
  \AtEndEnvironment{document}{%
    \clearpage
    \thispagestyle{empty}%
    \pagecolor{dccmaroon}%
    \vbox{}
  }
}
%    \end{macrocode} 
% 
% There is no more.
%
%    \begin{macrocode}
\endinput
%    \end{macrocode}
% \iffalse
%</class>
% \fi
%\Finale
